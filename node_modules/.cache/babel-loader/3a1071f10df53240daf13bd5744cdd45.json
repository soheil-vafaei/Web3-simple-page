{"ast":null,"code":"import { integer } from '../../integer.js';\nimport { WithShrinkFromOtherArbitrary } from '../WithShrinkFromOtherArbitrary.js';\nexport function restrictedIntegerArbitraryBuilder(min, maxGenerated, max) {\n  const generatorArbitrary = integer({\n    min,\n    max: maxGenerated\n  });\n\n  if (maxGenerated === max) {\n    return generatorArbitrary;\n  }\n\n  const shrinkerArbitrary = integer({\n    min,\n    max\n  });\n  return new WithShrinkFromOtherArbitrary(generatorArbitrary, shrinkerArbitrary);\n}","map":{"version":3,"names":["integer","WithShrinkFromOtherArbitrary","restrictedIntegerArbitraryBuilder","min","maxGenerated","max","generatorArbitrary","shrinkerArbitrary"],"sources":["/Users/soheilvafaei/Documents/project/web/web3/ex7/node_modules/fast-check/lib/esm/arbitrary/_internals/builders/RestrictedIntegerArbitraryBuilder.js"],"sourcesContent":["import { integer } from '../../integer.js';\nimport { WithShrinkFromOtherArbitrary } from '../WithShrinkFromOtherArbitrary.js';\nexport function restrictedIntegerArbitraryBuilder(min, maxGenerated, max) {\n    const generatorArbitrary = integer({ min, max: maxGenerated });\n    if (maxGenerated === max) {\n        return generatorArbitrary;\n    }\n    const shrinkerArbitrary = integer({ min, max });\n    return new WithShrinkFromOtherArbitrary(generatorArbitrary, shrinkerArbitrary);\n}\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,kBAAxB;AACA,SAASC,4BAAT,QAA6C,oCAA7C;AACA,OAAO,SAASC,iCAAT,CAA2CC,GAA3C,EAAgDC,YAAhD,EAA8DC,GAA9D,EAAmE;EACtE,MAAMC,kBAAkB,GAAGN,OAAO,CAAC;IAAEG,GAAF;IAAOE,GAAG,EAAED;EAAZ,CAAD,CAAlC;;EACA,IAAIA,YAAY,KAAKC,GAArB,EAA0B;IACtB,OAAOC,kBAAP;EACH;;EACD,MAAMC,iBAAiB,GAAGP,OAAO,CAAC;IAAEG,GAAF;IAAOE;EAAP,CAAD,CAAjC;EACA,OAAO,IAAIJ,4BAAJ,CAAiCK,kBAAjC,EAAqDC,iBAArD,CAAP;AACH"},"metadata":{},"sourceType":"module"}