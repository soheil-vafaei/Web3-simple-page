{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.encodeBytes = void 0;\n\nconst Conversion = __importStar(require(\"../../conversion\")); //UGH -- it turns out TypeScript can't handle nested tagged unions\n//see: https://github.com/microsoft/TypeScript/issues/18758\n//so, I'm just going to have to throw in a bunch of type coercions >_>\n\n/**\n * Encodes without padding, length, etc!\n *\n * @Category Encoding (low-level)\n */\n\n\nfunction encodeBytes(input) {\n  switch (input.type.typeClass) {\n    case \"bytes\":\n      return Conversion.toBytes(input.value.asHex);\n\n    case \"string\":\n      {\n        let coercedInput = input;\n\n        switch (coercedInput.value.kind) {\n          case \"valid\":\n            return Conversion.stringToBytes(coercedInput.value.asString);\n\n          case \"malformed\":\n            return Conversion.toBytes(coercedInput.value.asHex);\n        }\n      }\n  }\n}\n\nexports.encodeBytes = encodeBytes;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,6D,CAEA;AACA;AACA;;AAEA;;;;;;;AAKA,SAAgBA,WAAhB,CACEC,KADF,EACoE;EAElE,QAAQA,KAAK,CAACC,IAAN,CAAWC,SAAnB;IACE,KAAK,OAAL;MACE,OAAOC,UAAU,CAACC,OAAX,CAA8CJ,KAAM,CAACK,KAAP,CAAaC,KAA3D,CAAP;;IACF,KAAK,QAAL;MAAe;QACb,IAAIC,YAAY,GACdP,KADF;;QAGA,QAAQO,YAAY,CAACF,KAAb,CAAmBG,IAA3B;UACE,KAAK,OAAL;YACE,OAAOL,UAAU,CAACM,aAAX,CAAyBF,YAAY,CAACF,KAAb,CAAmBK,QAA5C,CAAP;;UACF,KAAK,WAAL;YACE,OAAOP,UAAU,CAACC,OAAX,CAAmBG,YAAY,CAACF,KAAb,CAAmBC,KAAtC,CAAP;QAJJ;MAMD;EAbH;AAeD;;AAlBDK","names":["encodeBytes","input","type","typeClass","Conversion","toBytes","value","asHex","coercedInput","kind","stringToBytes","asString","exports"],"sourceRoot":"","sources":["../../../../lib/bytes/encode/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}