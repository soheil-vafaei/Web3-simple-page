{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decimalCases = void 0;\n\nconst debug_1 = __importDefault(require(\"debug\"));\n\nconst debug = (0, debug_1.default)(\"codec:wrap:decimal\");\n\nconst dispatch_1 = require(\"./dispatch\");\n\nconst errors_1 = require(\"./errors\");\n\nconst Conversion = __importStar(require(\"../conversion\"));\n\nconst Utils = __importStar(require(\"./utils\"));\n\nconst Messages = __importStar(require(\"./messages\"));\n\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\n\nconst big_js_1 = __importDefault(require(\"big.js\")); //note: doesn't include UDVT case,\n//or error case\n\n\nconst decimalFromWrappedValueCases = [decimalFromCodecDecimalValue, decimalFromCodecIntegerValue, decimalFromCodecEnumValue];\nconst decimalCasesBasic = [decimalFromNumber, decimalFromString, decimalFromBoxedNumber, decimalFromBoxedString, decimalFromBigint, decimalFromBN, decimalFromBig, ...decimalFromWrappedValueCases, decimalFromCodecUdvtValue, decimalFromCodecEnumError, decimalFromOther //must go last!\n];\nexports.decimalCases = [decimalFromTypeValueInput, ...decimalCasesBasic];\n\nfunction* decimalFromBig(dataType, input, wrapOptions) {\n  if (!Conversion.isBig(input)) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was not a Big\");\n  }\n\n  const asBig = input.plus(0); //clone\n\n  validate(dataType, asBig, input, wrapOptions.name);\n  return {\n    //IDK why TS is screwing up here\n    type: dataType,\n    kind: \"value\",\n    value: {\n      asBig\n    }\n  };\n}\n\nfunction* decimalFromBN(dataType, input, wrapOptions) {\n  if (!bn_js_1.default.isBN(input)) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was not a BN\");\n  }\n\n  const asBig = Conversion.toBig(input);\n  validate(dataType, asBig, input, wrapOptions.name);\n  return {\n    //IDK why TS is screwing up here\n    type: dataType,\n    kind: \"value\",\n    value: {\n      asBig\n    }\n  };\n}\n\nfunction* decimalFromBigint(dataType, input, wrapOptions) {\n  if (typeof input !== \"bigint\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was not a bigint\");\n  }\n\n  const asBig = Conversion.toBig(input);\n  validate(dataType, asBig, input, wrapOptions.name);\n  return {\n    //IDK why TS is screwing up here\n    type: dataType,\n    kind: \"value\",\n    value: {\n      asBig\n    }\n  };\n}\n\nfunction* decimalFromString(dataType, input, wrapOptions) {\n  if (typeof input !== \"string\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was not a string\");\n  }\n\n  const trimmed = input.trim(); //allow whitespace\n\n  const stripped = Utils.removeUnderscoresNoHex(trimmed);\n  let asBig;\n\n  try {\n    asBig = new big_js_1.default(stripped);\n  } catch (_a) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 5, Messages.nonNumericMessage);\n  }\n\n  validate(dataType, asBig, input, wrapOptions.name);\n  return {\n    //IDK why TS is screwing up here\n    type: dataType,\n    kind: \"value\",\n    value: {\n      asBig\n    }\n  };\n}\n\nfunction* decimalFromNumber(dataType, input, wrapOptions) {\n  if (typeof input !== \"number\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was not a number\");\n  }\n\n  if (!Number.isFinite(input)) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 5, \"Numeric value is not finite\");\n  }\n\n  if (!Utils.isSafeNumber(dataType, input)) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 5, \"Given number is outside the safe range for this data type (possible loss of precision); use a numeric string, bigint, or big number class instead\");\n  }\n\n  const asBig = new big_js_1.default(input);\n  validate(dataType, asBig, input, wrapOptions.name);\n  return {\n    //IDK why TS is screwing up here\n    type: dataType,\n    kind: \"value\",\n    value: {\n      asBig\n    }\n  };\n}\n\nfunction* decimalFromBoxedString(dataType, input, wrapOptions) {\n  if (!Utils.isBoxedString(input)) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was not a boxed string\");\n  } //unbox and try again\n\n\n  return yield* decimalFromString(dataType, input.valueOf(), wrapOptions);\n}\n\nfunction* decimalFromBoxedNumber(dataType, input, wrapOptions) {\n  if (!Utils.isBoxedNumber(input)) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was not a boxed number\");\n  } //unbox and try again\n\n\n  return yield* decimalFromNumber(dataType, input.valueOf(), wrapOptions);\n}\n\nfunction* decimalFromCodecDecimalValue(dataType, input, wrapOptions) {\n  if (!Utils.isWrappedResult(input)) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was not a wrapped result\");\n  }\n\n  if (input.type.typeClass !== \"fixed\" && input.type.typeClass !== \"ufixed\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 5, Messages.wrappedTypeMessage(input.type));\n  }\n\n  if (input.kind !== \"value\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 5, Messages.errorResultMessage);\n  }\n\n  if (!wrapOptions.loose && (input.type.typeClass !== dataType.typeClass || input.type.bits !== dataType.bits || input.type.places !== dataType.places)) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 5, Messages.wrappedTypeMessage(input.type));\n  }\n\n  const asBig = input.value.asBig.plus(0); //clone\n\n  validate(dataType, asBig, input, wrapOptions.name);\n  return {\n    //IDK why TS is screwing up here\n    type: dataType,\n    kind: \"value\",\n    value: {\n      asBig\n    }\n  };\n}\n\nfunction* decimalFromCodecIntegerValue(dataType, input, wrapOptions) {\n  if (!Utils.isWrappedResult(input)) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was not a wrapped result\");\n  }\n\n  if (input.type.typeClass !== \"int\" && input.type.typeClass !== \"uint\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 5, Messages.wrappedTypeMessage(input.type));\n  }\n\n  if (input.kind !== \"value\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 5, Messages.errorResultMessage);\n  }\n\n  if (!wrapOptions.loose) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 5, Messages.wrappedTypeMessage(input.type));\n  }\n\n  const asBig = Conversion.toBig(input.value.asBN);\n  validate(dataType, asBig, input, wrapOptions.name);\n  return {\n    //IDK why TS is screwing up here\n    type: dataType,\n    kind: \"value\",\n    value: {\n      asBig\n    }\n  };\n}\n\nfunction* decimalFromCodecEnumValue(dataType, input, wrapOptions) {\n  if (!Utils.isWrappedResult(input)) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was not a wrapped result\");\n  }\n\n  if (input.type.typeClass !== \"enum\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 5, Messages.wrappedTypeMessage(input.type));\n  }\n\n  if (input.kind !== \"value\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, //only specificity 1 due to EnumError case\n    Messages.errorResultMessage);\n  }\n\n  if (!wrapOptions.loose) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 5, Messages.wrappedTypeMessage(input.type));\n  }\n\n  const asBig = Conversion.toBig(input.value.numericAsBN);\n  validate(dataType, asBig, input, wrapOptions.name);\n  return {\n    //IDK why TS is screwing up here\n    type: dataType,\n    kind: \"value\",\n    value: {\n      asBig\n    }\n  };\n}\n\nfunction* decimalFromCodecEnumError(dataType, input, wrapOptions) {\n  if (!Utils.isWrappedResult(input)) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was not a wrapped result\");\n  }\n\n  if (input.type.typeClass !== \"enum\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 5, Messages.wrappedTypeMessage(input.type));\n  }\n\n  if (input.kind !== \"error\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Wrapped result was a value rather than an error\");\n  }\n\n  if (!wrapOptions.loose) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 5, Messages.wrappedTypeMessage(input.type));\n  }\n\n  const coercedInput = input; //only one specific kind of error will be allowed\n\n  if (coercedInput.error.kind !== \"EnumOutOfRangeError\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 5, Messages.errorResultMessage);\n  }\n\n  const asBig = Conversion.toBig(coercedInput.error.rawAsBN);\n  validate(dataType, asBig, input, wrapOptions.name);\n  return {\n    //IDK why TS is screwing up here\n    type: dataType,\n    kind: \"value\",\n    value: {\n      asBig\n    }\n  };\n}\n\nfunction* decimalFromCodecUdvtValue(dataType, input, wrapOptions) {\n  if (!Utils.isWrappedResult(input)) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was not a wrapped result\");\n  }\n\n  if (input.type.typeClass !== \"userDefinedValueType\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, Messages.wrappedTypeMessage(input.type));\n  }\n\n  if (input.kind !== \"value\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 5, Messages.errorResultMessage);\n  }\n\n  return yield* (0, dispatch_1.wrapWithCases)(dataType, input.value, wrapOptions, decimalFromWrappedValueCases);\n}\n\nfunction* decimalFromTypeValueInput(dataType, input, wrapOptions) {\n  if (!Utils.isTypeValueInput(input)) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was not a type/value pair\");\n  }\n\n  if (!input.type.match(/^u?fixed(\\d+(x\\d+)?)?$/) && input.type !== \"decimal\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 5, Messages.specifiedTypeMessage(input.type));\n  }\n\n  let bits, places;\n  let typeClass;\n\n  if (input.type === \"decimal\") {\n    //vyper's decimal type corresponds to fixed168x10\n    typeClass = \"fixed\";\n    bits = 168;\n    places = 10;\n  } else {\n    const [_0, typeClassTemporary, _2, bitsAsString, _4, placesAsString] = input.type.match(/^(u?fixed)((\\d+)(x(\\d+))?)?$/); //not all of the fields in this match are used, so we discard them into _n variables\n\n    bits = bitsAsString ? Number(bitsAsString) : 128; //defaults to 128\n\n    places = placesAsString ? Number(placesAsString) : 18; //defaults to 18\n\n    typeClass = typeClassTemporary;\n  }\n\n  if (dataType.typeClass !== typeClass || dataType.bits !== bits || dataType.places !== places) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 5, Messages.specifiedTypeMessage(input.type));\n  } //extract value & try again, with loose option turned on\n\n\n  return yield* (0, dispatch_1.wrapWithCases)(dataType, input.value, Object.assign(Object.assign({}, wrapOptions), {\n    loose: true\n  }), decimalCasesBasic);\n}\n\nfunction* decimalFromOther(dataType, input, wrapOptions) {\n  const request = {\n    kind: \"decimal\",\n    input\n  };\n  const response = yield request;\n\n  if (response.kind !== \"decimal\") {\n    throw new errors_1.BadResponseTypeError(request, response);\n  }\n\n  if (response.value === null) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, response.partiallyRecognized ? 5 : 3, response.reason || Messages.unrecognizedNumberMessage(dataType));\n  }\n\n  const asBig = response.value.plus(0); //clone\n\n  validate(dataType, asBig, input, wrapOptions.name);\n  return {\n    //IDK why TS is screwing up here\n    type: dataType,\n    kind: \"value\",\n    value: {\n      asBig\n    }\n  };\n}\n\nfunction validate(dataType, asBig, input, //just for errors\nname //for errors\n) {\n  if (Conversion.countDecimalPlaces(asBig) > dataType.places) {\n    throw new errors_1.TypeMismatchError(dataType, input, name, 5, Messages.tooPreciseMessage(dataType.places, Conversion.countDecimalPlaces(asBig)));\n  }\n\n  if (asBig.gt(Utils.maxValue(dataType)) || asBig.lt(Utils.minValue(dataType))) {\n    throw new errors_1.TypeMismatchError(dataType, input, name, 5, Messages.outOfRangeMessage);\n  }\n}","map":{"version":3,"mappings":"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","names":["debug","decimalFromWrappedValueCases","decimalFromCodecDecimalValue","decimalFromCodecIntegerValue","decimalFromCodecEnumValue","decimalCasesBasic","decimalFromNumber","decimalFromString","decimalFromBoxedNumber","decimalFromBoxedString","decimalFromBigint","decimalFromBN","decimalFromBig","decimalFromCodecUdvtValue","decimalFromCodecEnumError","decimalFromOther","exports","decimalFromTypeValueInput","dataType","input","wrapOptions","Conversion","isBig","errors_1","name","asBig","plus","validate","type","kind","value","bn_js_1","isBN","toBig","trimmed","trim","stripped","Utils","removeUnderscoresNoHex","big_js_1","Messages","nonNumericMessage","Number","isFinite","isSafeNumber","isBoxedString","valueOf","isBoxedNumber","isWrappedResult","typeClass","wrappedTypeMessage","errorResultMessage","loose","bits","places","asBN","numericAsBN","coercedInput","error","rawAsBN","isTypeValueInput","match","specifiedTypeMessage","_0","typeClassTemporary","_2","bitsAsString","_4","placesAsString","Object","request","response","partiallyRecognized","reason","unrecognizedNumberMessage","countDecimalPlaces","tooPreciseMessage","gt","maxValue","lt","minValue","outOfRangeMessage"],"sourceRoot":"","sources":["../../../lib/wrap/decimal.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}