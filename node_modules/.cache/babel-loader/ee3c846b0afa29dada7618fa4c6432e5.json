{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BadResponseTypeError = exports.TypeMismatchError = exports.NoUniqueBestOverloadError = exports.NoOverloadsMatchedError = void 0;\n\nconst Format = __importStar(require(\"../format\"));\n/**\n * This error indicates that no overloads matched when performing\n * overload resolution.  If there was only one plausible match,\n * a [[TypeMismatchError]] will be thrown instead.\n * @category Errors\n */\n\n\nclass NoOverloadsMatchedError extends Error {\n  constructor(methods, inputs, userDefinedTypes) {\n    const message = \"Arguments provided did not match any overload\";\n    super(message);\n    this.methods = methods;\n    this.inputs = inputs;\n    this.userDefinedTypes = userDefinedTypes;\n    this.name = \"NoOverloadsMatchedError\";\n  }\n\n}\n\nexports.NoOverloadsMatchedError = NoOverloadsMatchedError;\n/**\n * This error indicates that multiple overloads matched during\n * overload resolution, but none of them was the unique best\n * overload.\n * @category Errors\n */\n\nclass NoUniqueBestOverloadError extends Error {\n  constructor(resolutions) {\n    const message = \"Could not determine a unique best overload for the given arguments.  \" + \"Please specify the overload explicitly or give the arguments more explicit types.\";\n    super(message);\n    this.resolutions = resolutions;\n    this.name = \"NoUniqueBestOverloadError\";\n  }\n\n}\n\nexports.NoUniqueBestOverloadError = NoUniqueBestOverloadError;\n/**\n * This error indicates that the given input could not be recognized as the\n * type it was supposed to be.\n * @category Errors\n */\n\nclass TypeMismatchError extends Error {\n  constructor(dataType, input, variableName, specificity, reason) {\n    const message = `Could not interpret input for ${variableName} as type ${Format.Types.typeString(dataType)}.  Reason: ${reason}`;\n    super(message);\n    this.variableName = variableName;\n    this.dataType = dataType;\n    this.input = input;\n    this.reason = reason;\n    this.specificity = specificity;\n    this.name = \"TypeMismatchError\";\n  }\n\n}\n\nexports.TypeMismatchError = TypeMismatchError;\n\nclass BadResponseTypeError extends Error {\n  constructor(request, response) {\n    const message = `Got response type ${response.kind} to request type ${request.kind}`;\n    super(message);\n    this.request = request;\n    this.response = response;\n    this.name = \"BadResponseTypeError\";\n  }\n\n}\n\nexports.BadResponseTypeError = BadResponseTypeError;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AAEA;;;;;;;;AAMA,MAAaA,uBAAb,SAA6CC,KAA7C,CAAkD;EAIhDC,YACEC,OADF,EAEEC,MAFF,EAGEC,gBAHF,EAG0C;IAExC,MAAMC,OAAO,GAAG,+CAAhB;IACA,MAAMA,OAAN;IACA,KAAKH,OAAL,GAAeA,OAAf;IACA,KAAKC,MAAL,GAAcA,MAAd;IACA,KAAKC,gBAAL,GAAwBA,gBAAxB;IACA,KAAKE,IAAL,GAAY,yBAAZ;EACD;;AAf+C;;AAAlDC;AAkBA;;;;;;;AAMA,MAAaC,yBAAb,SAA+CR,KAA/C,CAAoD;EAElDC,YAAYQ,WAAZ,EAAqC;IACnC,MAAMJ,OAAO,GACX,0EACA,mFAFF;IAGA,MAAMA,OAAN;IACA,KAAKI,WAAL,GAAmBA,WAAnB;IACA,KAAKH,IAAL,GAAY,2BAAZ;EACD;;AATiD;;AAApDC;AAYA;;;;;;AAKA,MAAaG,iBAAb,SAAuCV,KAAvC,CAA4C;EAyB1CC,YACEU,QADF,EAEEC,KAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,MALF,EAKgB;IAEd,MAAMV,OAAO,GAAG,iCAAiCQ,YAAY,YAAYG,MAAM,CAACC,KAAP,CAAaC,UAAb,CACvEP,QADuE,CAExE,cAAcI,MAAM,EAFrB;IAGA,MAAMV,OAAN;IACA,KAAKQ,YAAL,GAAoBA,YAApB;IACA,KAAKF,QAAL,GAAgBA,QAAhB;IACA,KAAKC,KAAL,GAAaA,KAAb;IACA,KAAKG,MAAL,GAAcA,MAAd;IACA,KAAKD,WAAL,GAAmBA,WAAnB;IACA,KAAKR,IAAL,GAAY,mBAAZ;EACD;;AA1CyC;;AAA5CC;;AA6CA,MAAaY,oBAAb,SAA0CnB,KAA1C,CAA+C;EAI7CC,YAAYmB,OAAZ,EAAkCC,QAAlC,EAAwD;IACtD,MAAMhB,OAAO,GAAG,qBAAqBgB,QAAQ,CAACC,IAAI,oBAAoBF,OAAO,CAACE,IAAI,EAAlF;IACA,MAAMjB,OAAN;IACA,KAAKe,OAAL,GAAeA,OAAf;IACA,KAAKC,QAAL,GAAgBA,QAAhB;IACA,KAAKf,IAAL,GAAY,sBAAZ;EACD;;AAV4C;;AAA/CC","names":["NoOverloadsMatchedError","Error","constructor","methods","inputs","userDefinedTypes","message","name","exports","NoUniqueBestOverloadError","resolutions","TypeMismatchError","dataType","input","variableName","specificity","reason","Format","Types","typeString","BadResponseTypeError","request","response","kind"],"sourceRoot":"","sources":["../../../lib/wrap/errors.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}