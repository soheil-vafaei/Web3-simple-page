{"ast":null,"code":"import { parse } from \"css-what\";\nimport { filters } from \"./filters.js\";\nimport { pseudos, verifyPseudoArgs } from \"./pseudos.js\";\nimport { aliases } from \"./aliases.js\";\nimport { subselects } from \"./subselects.js\";\nexport { filters, pseudos, aliases };\nexport function compilePseudoSelector(next, selector, options, context, compileToken) {\n  var _a;\n\n  const {\n    name,\n    data\n  } = selector;\n\n  if (Array.isArray(data)) {\n    if (!(name in subselects)) {\n      throw new Error(`Unknown pseudo-class :${name}(${data})`);\n    }\n\n    return subselects[name](next, data, options, context, compileToken);\n  }\n\n  const userPseudo = (_a = options.pseudos) === null || _a === void 0 ? void 0 : _a[name];\n  const stringPseudo = typeof userPseudo === \"string\" ? userPseudo : aliases[name];\n\n  if (typeof stringPseudo === \"string\") {\n    if (data != null) {\n      throw new Error(`Pseudo ${name} doesn't have any arguments`);\n    } // The alias has to be parsed here, to make sure options are respected.\n\n\n    const alias = parse(stringPseudo);\n    return subselects[\"is\"](next, alias, options, context, compileToken);\n  }\n\n  if (typeof userPseudo === \"function\") {\n    verifyPseudoArgs(userPseudo, name, data, 1);\n    return elem => userPseudo(elem, data) && next(elem);\n  }\n\n  if (name in filters) {\n    return filters[name](next, data, options, context);\n  }\n\n  if (name in pseudos) {\n    const pseudo = pseudos[name];\n    verifyPseudoArgs(pseudo, name, data, 2);\n    return elem => pseudo(elem, options, data) && next(elem);\n  }\n\n  throw new Error(`Unknown pseudo-class :${name}`);\n}","map":{"version":3,"mappings":"AAeA,SAASA,KAAT,QAAsC,UAAtC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,OAAT,EAAkBC,gBAAlB,QAA0C,cAA1C;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AAEA,SAASJ,OAAT,EAAkBC,OAAlB,EAA2BE,OAA3B;AAEA,OAAM,SAAUE,qBAAV,CACFC,IADE,EAEFC,QAFE,EAGFC,OAHE,EAIFC,OAJE,EAKFC,YALE,EAK2C;;;EAE7C,MAAM;IAAEC,IAAF;IAAQC;EAAR,IAAiBL,QAAvB;;EAEA,IAAIM,KAAK,CAACC,OAAN,CAAcF,IAAd,CAAJ,EAAyB;IACrB,IAAI,EAAED,IAAI,IAAIP,UAAV,CAAJ,EAA2B;MACvB,MAAM,IAAIW,KAAJ,CAAU,yBAAyBJ,IAAI,IAAIC,IAAI,GAA/C,CAAN;IACH;;IAED,OAAOR,UAAU,CAACO,IAAD,CAAV,CAAiBL,IAAjB,EAAuBM,IAAvB,EAA6BJ,OAA7B,EAAsCC,OAAtC,EAA+CC,YAA/C,CAAP;EACH;;EAED,MAAMM,UAAU,GAAG,aAAO,CAACf,OAAR,MAAe,IAAf,IAAegB,aAAf,GAAe,MAAf,GAAeA,GAAGN,IAAH,CAAlC;EAEA,MAAMO,YAAY,GACd,OAAOF,UAAP,KAAsB,QAAtB,GAAiCA,UAAjC,GAA8Cb,OAAO,CAACQ,IAAD,CADzD;;EAGA,IAAI,OAAOO,YAAP,KAAwB,QAA5B,EAAsC;IAClC,IAAIN,IAAI,IAAI,IAAZ,EAAkB;MACd,MAAM,IAAIG,KAAJ,CAAU,UAAUJ,IAAI,6BAAxB,CAAN;IACH,CAHiC,CAKlC;;;IACA,MAAMQ,KAAK,GAAGpB,KAAK,CAACmB,YAAD,CAAnB;IACA,OAAOd,UAAU,CAAC,IAAD,CAAV,CAAiBE,IAAjB,EAAuBa,KAAvB,EAA8BX,OAA9B,EAAuCC,OAAvC,EAAgDC,YAAhD,CAAP;EACH;;EAED,IAAI,OAAOM,UAAP,KAAsB,UAA1B,EAAsC;IAClCd,gBAAgB,CAACc,UAAD,EAAaL,IAAb,EAAmBC,IAAnB,EAAyB,CAAzB,CAAhB;IAEA,OAAQQ,IAAD,IAAUJ,UAAU,CAACI,IAAD,EAAOR,IAAP,CAAV,IAA0BN,IAAI,CAACc,IAAD,CAA/C;EACH;;EAED,IAAIT,IAAI,IAAIX,OAAZ,EAAqB;IACjB,OAAOA,OAAO,CAACW,IAAD,CAAP,CAAcL,IAAd,EAAoBM,IAApB,EAAoCJ,OAApC,EAA6CC,OAA7C,CAAP;EACH;;EAED,IAAIE,IAAI,IAAIV,OAAZ,EAAqB;IACjB,MAAMoB,MAAM,GAAGpB,OAAO,CAACU,IAAD,CAAtB;IACAT,gBAAgB,CAACmB,MAAD,EAASV,IAAT,EAAeC,IAAf,EAAqB,CAArB,CAAhB;IAEA,OAAQQ,IAAD,IAAUC,MAAM,CAACD,IAAD,EAAOZ,OAAP,EAAgBI,IAAhB,CAAN,IAA+BN,IAAI,CAACc,IAAD,CAApD;EACH;;EAED,MAAM,IAAIL,KAAJ,CAAU,yBAAyBJ,IAAI,EAAvC,CAAN;AACH","names":["parse","filters","pseudos","verifyPseudoArgs","aliases","subselects","compilePseudoSelector","next","selector","options","context","compileToken","name","data","Array","isArray","Error","userPseudo","_a","stringPseudo","alias","elem","pseudo"],"sourceRoot":"https://raw.githubusercontent.com/fb55/css-select/0f0725a9dfeddd2fdb54eda9656cdbab5bbf6be6/src/","sources":["pseudo-selectors/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}