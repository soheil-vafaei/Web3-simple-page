{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.collectSources = void 0;\n\nconst path = __importStar(require(\"path\"));\n/**\n * Collects sources, targets into collections with OS-independent paths,\n * along with a reverse mapping to the original path (for post-processing)\n *\n * @param originalSources - { [originalSourcePath]: contents }\n * @param originalTargets - originalSourcePath[]\n * @param baseDirectory - a directory to remove as a prefix\n * @param replacement - what to replace it with\n * @return { sources, targets, originalSourcePaths }\n */\n\n\nfunction collectSources(originalSources) {\n  let originalTargets = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  let baseDirectory = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n  let replacement = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"/\";\n  const mappedResults = Object.entries(originalSources).filter(_ref => {\n    let [originalSourcePath, _] = _ref;\n    return !path.isAbsolute(originalSourcePath) || originalSourcePath.startsWith(baseDirectory);\n  }).map(_ref2 => {\n    let [originalSourcePath, contents] = _ref2;\n    return {\n      originalSourcePath,\n      contents,\n      sourcePath: getPortableSourcePath(replaceRootDirectory(originalSourcePath, baseDirectory, replacement))\n    };\n  }).map(_ref3 => {\n    let {\n      originalSourcePath,\n      sourcePath,\n      contents\n    } = _ref3;\n    return {\n      sources: {\n        [sourcePath]: contents\n      },\n      // include transformed form as target if original is a target\n      targets: originalTargets.includes(originalSourcePath) ? [sourcePath] : [],\n      originalSourcePaths: {\n        [sourcePath]: originalSourcePath\n      }\n    };\n  });\n  const defaultAccumulator = {\n    sources: {},\n    targets: [],\n    originalSourcePaths: {}\n  };\n  return mappedResults.reduce((accumulator, result) => ({\n    sources: Object.assign({}, accumulator.sources, result.sources),\n    targets: [...accumulator.targets, ...result.targets],\n    originalSourcePaths: Object.assign({}, accumulator.originalSourcePaths, result.originalSourcePaths)\n  }), defaultAccumulator);\n}\n\nexports.collectSources = collectSources;\n/**\n * @param sourcePath - string\n * @return string - operating system independent path\n * @private\n */\n\nfunction getPortableSourcePath(sourcePath) {\n  let replacement = sourcePath; //on Windows, replace backslashes with forward slashes\n\n  if (path.sep === \"\\\\\") {\n    replacement = sourcePath.replace(/\\\\/g, \"/\");\n  } // Turn G:/.../ into /G/.../ for Windows\n\n\n  if (replacement.length >= 2 && replacement[1] === \":\") {\n    replacement = \"/\" + replacement;\n    replacement = replacement.replace(\":\", \"\");\n  }\n\n  return replacement;\n}\n\nfunction replaceRootDirectory(sourcePath, rootDirectory, replacement) {\n  //make sure root directory ends in a separator\n  if (!rootDirectory.endsWith(path.sep)) {\n    rootDirectory = rootDirectory + path.sep;\n  }\n\n  return sourcePath.startsWith(rootDirectory) ? replacement + sourcePath.slice(rootDirectory.length) //remove prefix\n  : sourcePath;\n}","map":{"version":3,"mappings":"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","names":["collectSources","originalSources","originalTargets","baseDirectory","replacement","mappedResults","Object","entries","filter","originalSourcePath","_","path","isAbsolute","startsWith","map","contents","sourcePath","getPortableSourcePath","replaceRootDirectory","sources","targets","includes","originalSourcePaths","defaultAccumulator","reduce","accumulator","result","assign","exports","sep","replace","length","rootDirectory","endsWith","slice"],"sourceRoot":"","sources":["../../src/sources.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}