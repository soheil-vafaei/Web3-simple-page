{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.boolCases = void 0;\n\nconst debug_1 = __importDefault(require(\"debug\"));\n\nconst debug = (0, debug_1.default)(\"codec:wrap:bool\");\n\nconst dispatch_1 = require(\"./dispatch\");\n\nconst errors_1 = require(\"./errors\");\n\nconst Utils = __importStar(require(\"./utils\"));\n\nconst Messages = __importStar(require(\"./messages\"));\n\nconst boolCasesBasic = [boolFromBoolean, boolFromString, boolFromBoxedPrimitive, boolFromCodecBoolValue, boolFromCodecBoolError, boolFromCodecUdvtValue, boolFromCodecUdvtError, boolFromOther //must go last!\n];\nexports.boolCases = [boolFromTypeValueInput, ...boolCasesBasic];\n\nfunction* boolFromBoolean(dataType, input, wrapOptions) {\n  if (typeof input !== \"boolean\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was not a boolean\");\n  }\n\n  return {\n    type: dataType,\n    kind: \"value\",\n    value: {\n      asBoolean: input\n    }\n  };\n}\n\nfunction* boolFromString(dataType, input, wrapOptions) {\n  if (typeof input !== \"string\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was not a string\");\n  }\n\n  const lowerCasedInput = input.toLowerCase();\n\n  if (wrapOptions.strictBooleans && ![\"true\", \"false\", \"1\", \"0\"].includes(lowerCasedInput)) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 5, \"Input was not 'true', 'false', '1', or '0'\");\n  } //strings are true unless they're falsy or the case-insensitive strings \"false\" or \"0\"\n\n\n  const asBoolean = Boolean(input) && ![\"false\", \"0\"].includes(lowerCasedInput);\n  return {\n    type: dataType,\n    kind: \"value\",\n    value: {\n      asBoolean\n    }\n  };\n}\n\nfunction* boolFromBoxedPrimitive(dataType, input, wrapOptions) {\n  if (!Utils.isBoxedPrimitive(input)) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was not a boxed primitive\");\n  } //unbox and try again\n\n\n  return yield* (0, dispatch_1.wrapWithCases)(dataType, input.valueOf(), wrapOptions, exports.boolCases);\n}\n\nfunction* boolFromCodecBoolValue(dataType, input, wrapOptions) {\n  if (!Utils.isWrappedResult(input)) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was not a wrapped result\");\n  }\n\n  if (input.type.typeClass !== \"bool\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 5, Messages.wrappedTypeMessage(input.type));\n  }\n\n  if (input.kind !== \"value\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, //only specificity 1 due to BoolError case\n    Messages.errorResultMessage);\n  }\n\n  const asBoolean = input.value.asBoolean;\n  return {\n    type: dataType,\n    kind: \"value\",\n    value: {\n      asBoolean\n    }\n  };\n}\n\nfunction* boolFromCodecBoolError(dataType, input, wrapOptions) {\n  if (!Utils.isWrappedResult(input)) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was not a wrapped result\");\n  }\n\n  if (input.type.typeClass !== \"bool\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 5, Messages.wrappedTypeMessage(input.type));\n  }\n\n  if (input.kind !== \"error\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was a value rather than an error\");\n  } //these two error types will be regarded as true\n\n\n  const allowedErrors = [\"BoolOutOfRangeError\", \"BoolPaddingError\"];\n\n  if (!allowedErrors.includes(input.error.kind)) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 5, Messages.errorResultMessage);\n  }\n\n  return {\n    type: dataType,\n    kind: \"value\",\n    value: {\n      asBoolean: true\n    }\n  };\n}\n\nfunction* boolFromTypeValueInput(dataType, input, wrapOptions) {\n  if (!Utils.isTypeValueInput(input)) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was not a type/value pair\");\n  }\n\n  if (input.type !== \"bool\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 5, Messages.specifiedTypeMessage(input.type));\n  } //extract value & try again, disallowing type/value input\n\n\n  return yield* (0, dispatch_1.wrapWithCases)(dataType, input.value, Object.assign(Object.assign({}, wrapOptions), {\n    loose: true\n  }), boolCasesBasic);\n}\n\nfunction* boolFromCodecUdvtValue(dataType, input, wrapOptions) {\n  if (!Utils.isWrappedResult(input)) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was not a wrapped result\");\n  }\n\n  if (input.type.typeClass !== \"userDefinedValueType\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, Messages.wrappedTypeMessage(input.type));\n  }\n\n  if (input.kind !== \"value\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 5, Messages.errorResultMessage);\n  }\n\n  return yield* boolFromCodecBoolValue(dataType, input.value, wrapOptions);\n}\n\nfunction* boolFromCodecUdvtError(dataType, input, wrapOptions) {\n  if (!Utils.isWrappedResult(input)) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was not a wrapped result\");\n  }\n\n  if (input.type.typeClass !== \"userDefinedValueType\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, Messages.wrappedTypeMessage(input.type));\n  }\n\n  if (input.kind !== \"error\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was a value rather than an error\");\n  } //wrapped errors will have to be unwrapped, others can be rejected\n\n\n  if (input.error.kind !== \"WrappedError\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 5, Messages.errorResultMessage);\n  }\n\n  return yield* boolFromCodecBoolError(dataType, input.error.error, wrapOptions);\n}\n\nfunction* boolFromOther(dataType, input, wrapOptions) {\n  //fallback case: just go by truthiness/falsiness\n  //(this case has to be last because there are various other\n  //cases we do not want to go by truthiness/falsiness!)\n  if (Utils.isWrappedResult(input)) {\n    //...except for these, which may error\n    //(note that we do this even when loose is on!)\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was a wrapped result\");\n  }\n\n  if (Utils.isTypeValueInput(input)) {\n    //...and these, which also may error\n    //(note that we do this even when loose is on!)\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was a type/value pair\");\n  } //...and also we don't do this case if strictBooleans is turned on\n\n\n  if (wrapOptions.strictBooleans) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 2, \"Input was neither a boolean nor a boolean string\");\n  }\n\n  const asBoolean = Boolean(input);\n  return {\n    type: dataType,\n    kind: \"value\",\n    value: {\n      asBoolean\n    }\n  };\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA,MAAMA,KAAK,GAAG,qBAAY,iBAAZ,CAAd;;AAGA;;AACA;;AAGA;;AACA;;AAEA,MAAMC,cAAc,GAId,CACJC,eADI,EAEJC,cAFI,EAGJC,sBAHI,EAIJC,sBAJI,EAKJC,sBALI,EAMJC,sBANI,EAOJC,sBAPI,EAQJC,aARI,CAQU;AARV,CAJN;AAeaC,oBAIP,CAACC,sBAAD,EAAyB,GAAGV,cAA5B,CAJO;;AAMb,UAAUC,eAAV,CACEU,QADF,EAEEC,KAFF,EAGEC,WAHF,EAG0B;EAExB,IAAI,OAAOD,KAAP,KAAiB,SAArB,EAAgC;IAC9B,MAAM,IAAIE,0BAAJ,CACJH,QADI,EAEJC,KAFI,EAGJC,WAAW,CAACE,IAHR,EAIJ,CAJI,EAKJ,yBALI,CAAN;EAOD;;EACD,OAAO;IACLC,IAAI,EAAEL,QADD;IAELM,IAAI,EAAE,OAFD;IAGLC,KAAK,EAAE;MACLC,SAAS,EAAEP;IADN;EAHF,CAAP;AAOD;;AAED,UAAUV,cAAV,CACES,QADF,EAEEC,KAFF,EAGEC,WAHF,EAG0B;EAExB,IAAI,OAAOD,KAAP,KAAiB,QAArB,EAA+B;IAC7B,MAAM,IAAIE,0BAAJ,CACJH,QADI,EAEJC,KAFI,EAGJC,WAAW,CAACE,IAHR,EAIJ,CAJI,EAKJ,wBALI,CAAN;EAOD;;EACD,MAAMK,eAAe,GAAGR,KAAK,CAACS,WAAN,EAAxB;;EACA,IACER,WAAW,CAACS,cAAZ,IACA,CAAC,CAAC,MAAD,EAAS,OAAT,EAAkB,GAAlB,EAAuB,GAAvB,EAA4BC,QAA5B,CAAqCH,eAArC,CAFH,EAGE;IACA,MAAM,IAAIN,0BAAJ,CACJH,QADI,EAEJC,KAFI,EAGJC,WAAW,CAACE,IAHR,EAIJ,CAJI,EAKJ,4CALI,CAAN;EAOD,CAvBuB,CAwBxB;;;EACA,MAAMI,SAAS,GAAGK,OAAO,CAACZ,KAAD,CAAP,IAAkB,CAAC,CAAC,OAAD,EAAU,GAAV,EAAeW,QAAf,CAAwBH,eAAxB,CAArC;EACA,OAAO;IACLJ,IAAI,EAAEL,QADD;IAELM,IAAI,EAAE,OAFD;IAGLC,KAAK,EAAE;MACLC;IADK;EAHF,CAAP;AAOD;;AAED,UAAUhB,sBAAV,CACEQ,QADF,EAEEC,KAFF,EAGEC,WAHF,EAG0B;EAExB,IAAI,CAACY,KAAK,CAACC,gBAAN,CAAuBd,KAAvB,CAAL,EAAoC;IAClC,MAAM,IAAIE,0BAAJ,CACJH,QADI,EAEJC,KAFI,EAGJC,WAAW,CAACE,IAHR,EAIJ,CAJI,EAKJ,iCALI,CAAN;EAOD,CAVuB,CAWxB;;;EACA,OAAO,OAAO,8BACZJ,QADY,EAEZC,KAAK,CAACe,OAAN,EAFY,EAGZd,WAHY,EAIZJ,iBAJY,CAAd;AAMD;;AAED,UAAUL,sBAAV,CACEO,QADF,EAEEC,KAFF,EAGEC,WAHF,EAG0B;EAExB,IAAI,CAACY,KAAK,CAACG,eAAN,CAAsBhB,KAAtB,CAAL,EAAmC;IACjC,MAAM,IAAIE,0BAAJ,CACJH,QADI,EAEJC,KAFI,EAGJC,WAAW,CAACE,IAHR,EAIJ,CAJI,EAKJ,gCALI,CAAN;EAOD;;EACD,IAAIH,KAAK,CAACI,IAAN,CAAWa,SAAX,KAAyB,MAA7B,EAAqC;IACnC,MAAM,IAAIf,0BAAJ,CACJH,QADI,EAEJC,KAFI,EAGJC,WAAW,CAACE,IAHR,EAIJ,CAJI,EAKJe,QAAQ,CAACC,kBAAT,CAA4BnB,KAAK,CAACI,IAAlC,CALI,CAAN;EAOD;;EACD,IAAIJ,KAAK,CAACK,IAAN,KAAe,OAAnB,EAA4B;IAC1B,MAAM,IAAIH,0BAAJ,CACJH,QADI,EAEJC,KAFI,EAGJC,WAAW,CAACE,IAHR,EAIJ,CAJI,EAID;IACHe,QAAQ,CAACE,kBALL,CAAN;EAOD;;EACD,MAAMb,SAAS,GAA6BP,KAAM,CAACM,KAAP,CAAaC,SAAzD;EACA,OAAO;IACLH,IAAI,EAAEL,QADD;IAELM,IAAI,EAAE,OAFD;IAGLC,KAAK,EAAE;MACLC;IADK;EAHF,CAAP;AAOD;;AAED,UAAUd,sBAAV,CACEM,QADF,EAEEC,KAFF,EAGEC,WAHF,EAG0B;EAExB,IAAI,CAACY,KAAK,CAACG,eAAN,CAAsBhB,KAAtB,CAAL,EAAmC;IACjC,MAAM,IAAIE,0BAAJ,CACJH,QADI,EAEJC,KAFI,EAGJC,WAAW,CAACE,IAHR,EAIJ,CAJI,EAKJ,gCALI,CAAN;EAOD;;EACD,IAAIH,KAAK,CAACI,IAAN,CAAWa,SAAX,KAAyB,MAA7B,EAAqC;IACnC,MAAM,IAAIf,0BAAJ,CACJH,QADI,EAEJC,KAFI,EAGJC,WAAW,CAACE,IAHR,EAIJ,CAJI,EAKJe,QAAQ,CAACC,kBAAT,CAA4BnB,KAAK,CAACI,IAAlC,CALI,CAAN;EAOD;;EACD,IAAIJ,KAAK,CAACK,IAAN,KAAe,OAAnB,EAA4B;IAC1B,MAAM,IAAIH,0BAAJ,CACJH,QADI,EAEJC,KAFI,EAGJC,WAAW,CAACE,IAHR,EAIJ,CAJI,EAKJ,wCALI,CAAN;EAOD,CA5BuB,CA6BxB;;;EACA,MAAMkB,aAAa,GAAG,CAAC,qBAAD,EAAwB,kBAAxB,CAAtB;;EACA,IAAI,CAACA,aAAa,CAACV,QAAd,CAAuBX,KAAK,CAACsB,KAAN,CAAYjB,IAAnC,CAAL,EAA+C;IAC7C,MAAM,IAAIH,0BAAJ,CACJH,QADI,EAEJC,KAFI,EAGJC,WAAW,CAACE,IAHR,EAIJ,CAJI,EAKJe,QAAQ,CAACE,kBALL,CAAN;EAOD;;EACD,OAAO;IACLhB,IAAI,EAAEL,QADD;IAELM,IAAI,EAAE,OAFD;IAGLC,KAAK,EAAE;MACLC,SAAS,EAAE;IADN;EAHF,CAAP;AAOD;;AAED,UAAUT,sBAAV,CACEC,QADF,EAEEC,KAFF,EAGEC,WAHF,EAG0B;EAExB,IAAI,CAACY,KAAK,CAACU,gBAAN,CAAuBvB,KAAvB,CAAL,EAAoC;IAClC,MAAM,IAAIE,0BAAJ,CACJH,QADI,EAEJC,KAFI,EAGJC,WAAW,CAACE,IAHR,EAIJ,CAJI,EAKJ,iCALI,CAAN;EAOD;;EACD,IAAIH,KAAK,CAACI,IAAN,KAAe,MAAnB,EAA2B;IACzB,MAAM,IAAIF,0BAAJ,CACJH,QADI,EAEJC,KAFI,EAGJC,WAAW,CAACE,IAHR,EAIJ,CAJI,EAKJe,QAAQ,CAACM,oBAAT,CAA8BxB,KAAK,CAACI,IAApC,CALI,CAAN;EAOD,CAnBuB,CAoBxB;;;EACA,OAAO,OAAO,8BACZL,QADY,EAEZC,KAAK,CAACM,KAFM,EAEDmB,gCACNxB,WADM,GACK;IAAEyB,KAAK,EAAE;EAAT,CADL,CAFC,EAIZtC,cAJY,CAAd;AAMD;;AAED,UAAUM,sBAAV,CACEK,QADF,EAEEC,KAFF,EAGEC,WAHF,EAG0B;EAExB,IAAI,CAACY,KAAK,CAACG,eAAN,CAAsBhB,KAAtB,CAAL,EAAmC;IACjC,MAAM,IAAIE,0BAAJ,CACJH,QADI,EAEJC,KAFI,EAGJC,WAAW,CAACE,IAHR,EAIJ,CAJI,EAKJ,gCALI,CAAN;EAOD;;EACD,IAAIH,KAAK,CAACI,IAAN,CAAWa,SAAX,KAAyB,sBAA7B,EAAqD;IACnD,MAAM,IAAIf,0BAAJ,CACJH,QADI,EAEJC,KAFI,EAGJC,WAAW,CAACE,IAHR,EAIJ,CAJI,EAKJe,QAAQ,CAACC,kBAAT,CAA4BnB,KAAK,CAACI,IAAlC,CALI,CAAN;EAOD;;EACD,IAAIJ,KAAK,CAACK,IAAN,KAAe,OAAnB,EAA4B;IAC1B,MAAM,IAAIH,0BAAJ,CACJH,QADI,EAEJC,KAFI,EAGJC,WAAW,CAACE,IAHR,EAIJ,CAJI,EAKJe,QAAQ,CAACE,kBALL,CAAN;EAOD;;EACD,OAAO,OAAO5B,sBAAsB,CAACO,QAAD,EAAWC,KAAK,CAACM,KAAjB,EAAwBL,WAAxB,CAApC;AACD;;AAED,UAAUN,sBAAV,CACEI,QADF,EAEEC,KAFF,EAGEC,WAHF,EAG0B;EAExB,IAAI,CAACY,KAAK,CAACG,eAAN,CAAsBhB,KAAtB,CAAL,EAAmC;IACjC,MAAM,IAAIE,0BAAJ,CACJH,QADI,EAEJC,KAFI,EAGJC,WAAW,CAACE,IAHR,EAIJ,CAJI,EAKJ,gCALI,CAAN;EAOD;;EACD,IAAIH,KAAK,CAACI,IAAN,CAAWa,SAAX,KAAyB,sBAA7B,EAAqD;IACnD,MAAM,IAAIf,0BAAJ,CACJH,QADI,EAEJC,KAFI,EAGJC,WAAW,CAACE,IAHR,EAIJ,CAJI,EAKJe,QAAQ,CAACC,kBAAT,CAA4BnB,KAAK,CAACI,IAAlC,CALI,CAAN;EAOD;;EACD,IAAIJ,KAAK,CAACK,IAAN,KAAe,OAAnB,EAA4B;IAC1B,MAAM,IAAIH,0BAAJ,CACJH,QADI,EAEJC,KAFI,EAGJC,WAAW,CAACE,IAHR,EAIJ,CAJI,EAKJ,wCALI,CAAN;EAOD,CA5BuB,CA6BxB;;;EACA,IAAIH,KAAK,CAACsB,KAAN,CAAYjB,IAAZ,KAAqB,cAAzB,EAAyC;IACvC,MAAM,IAAIH,0BAAJ,CACJH,QADI,EAEJC,KAFI,EAGJC,WAAW,CAACE,IAHR,EAIJ,CAJI,EAKJe,QAAQ,CAACE,kBALL,CAAN;EAOD;;EACD,OAAO,OAAO3B,sBAAsB,CAClCM,QADkC,EAElCC,KAAK,CAACsB,KAAN,CAAYA,KAFsB,EAGlCrB,WAHkC,CAApC;AAKD;;AAED,UAAUL,aAAV,CACEG,QADF,EAEEC,KAFF,EAGEC,WAHF,EAG0B;EAExB;EACA;EACA;EACA,IAAIY,KAAK,CAACG,eAAN,CAAsBhB,KAAtB,CAAJ,EAAkC;IAChC;IACA;IACA,MAAM,IAAIE,0BAAJ,CACJH,QADI,EAEJC,KAFI,EAGJC,WAAW,CAACE,IAHR,EAIJ,CAJI,EAKJ,4BALI,CAAN;EAOD;;EACD,IAAIU,KAAK,CAACU,gBAAN,CAAuBvB,KAAvB,CAAJ,EAAmC;IACjC;IACA;IACA,MAAM,IAAIE,0BAAJ,CACJH,QADI,EAEJC,KAFI,EAGJC,WAAW,CAACE,IAHR,EAIJ,CAJI,EAKJ,6BALI,CAAN;EAOD,CA1BuB,CA2BxB;;;EACA,IAAIF,WAAW,CAACS,cAAhB,EAAgC;IAC9B,MAAM,IAAIR,0BAAJ,CACJH,QADI,EAEJC,KAFI,EAGJC,WAAW,CAACE,IAHR,EAIJ,CAJI,EAKJ,kDALI,CAAN;EAOD;;EACD,MAAMI,SAAS,GAAGK,OAAO,CAACZ,KAAD,CAAzB;EACA,OAAO;IACLI,IAAI,EAAEL,QADD;IAELM,IAAI,EAAE,OAFD;IAGLC,KAAK,EAAE;MACLC;IADK;EAHF,CAAP;AAOD","names":["debug","boolCasesBasic","boolFromBoolean","boolFromString","boolFromBoxedPrimitive","boolFromCodecBoolValue","boolFromCodecBoolError","boolFromCodecUdvtValue","boolFromCodecUdvtError","boolFromOther","exports","boolFromTypeValueInput","dataType","input","wrapOptions","errors_1","name","type","kind","value","asBoolean","lowerCasedInput","toLowerCase","strictBooleans","includes","Boolean","Utils","isBoxedPrimitive","valueOf","isWrappedResult","typeClass","Messages","wrappedTypeMessage","errorResultMessage","allowedErrors","error","isTypeValueInput","specifiedTypeMessage","Object","loose"],"sourceRoot":"","sources":["../../../lib/wrap/bool.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}