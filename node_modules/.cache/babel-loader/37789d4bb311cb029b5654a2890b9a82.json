{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.escapeText = exports.escapeAttribute = exports.escapeUTF8 = exports.escape = exports.encodeXML = exports.getCodePoint = exports.xmlReplacer = void 0;\nexports.xmlReplacer = /[\"&'<>$\\x80-\\uFFFF]/g;\nvar xmlCodeMap = new Map([[34, \"&quot;\"], [38, \"&amp;\"], [39, \"&apos;\"], [60, \"&lt;\"], [62, \"&gt;\"]]); // For compatibility with node < 4, we wrap `codePointAt`\n\nexports.getCodePoint = // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.prototype.codePointAt != null ? function (str, index) {\n  return str.codePointAt(index);\n} : // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\nfunction (c, index) {\n  return (c.charCodeAt(index) & 0xfc00) === 0xd800 ? (c.charCodeAt(index) - 0xd800) * 0x400 + c.charCodeAt(index + 1) - 0xdc00 + 0x10000 : c.charCodeAt(index);\n};\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using XML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\n\nfunction encodeXML(str) {\n  var ret = \"\";\n  var lastIdx = 0;\n  var match;\n\n  while ((match = exports.xmlReplacer.exec(str)) !== null) {\n    var i = match.index;\n    var char = str.charCodeAt(i);\n    var next = xmlCodeMap.get(char);\n\n    if (next !== undefined) {\n      ret += str.substring(lastIdx, i) + next;\n      lastIdx = i + 1;\n    } else {\n      ret += \"\".concat(str.substring(lastIdx, i), \"&#x\").concat((0, exports.getCodePoint)(str, i).toString(16), \";\"); // Increase by 1 if we have a surrogate pair\n\n      lastIdx = exports.xmlReplacer.lastIndex += Number((char & 0xfc00) === 0xd800);\n    }\n  }\n\n  return ret + str.substr(lastIdx);\n}\n\nexports.encodeXML = encodeXML;\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using numeric hexadecimal reference (eg. `&#xfc;`).\n *\n * Have a look at `escapeUTF8` if you want a more concise output at the expense\n * of reduced transportability.\n *\n * @param data String to escape.\n */\n\nexports.escape = encodeXML;\n\nfunction getEscaper(regex, map) {\n  return function escape(data) {\n    var match;\n    var lastIdx = 0;\n    var result = \"\";\n\n    while (match = regex.exec(data)) {\n      if (lastIdx !== match.index) {\n        result += data.substring(lastIdx, match.index);\n      } // We know that this chararcter will be in the map.\n\n\n      result += map.get(match[0].charCodeAt(0)); // Every match will be of length 1\n\n      lastIdx = match.index + 1;\n    }\n\n    return result + data.substring(lastIdx);\n  };\n}\n/**\n * Encodes all characters not valid in XML documents using XML entities.\n *\n * Note that the output will be character-set dependent.\n *\n * @param data String to escape.\n */\n\n\nexports.escapeUTF8 = getEscaper(/[&<>'\"]/g, xmlCodeMap);\n/**\n * Encodes all characters that have to be escaped in HTML attributes,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\n\nexports.escapeAttribute = getEscaper(/[\"&\\u00A0]/g, new Map([[34, \"&quot;\"], [38, \"&amp;\"], [160, \"&nbsp;\"]]));\n/**\n * Encodes all characters that have to be escaped in HTML text,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\n\nexports.escapeText = getEscaper(/[&<>\\u00A0]/g, new Map([[38, \"&amp;\"], [60, \"&lt;\"], [62, \"&gt;\"], [160, \"&nbsp;\"]]));","map":{"version":3,"mappings":"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","names":["exports","xmlCodeMap","Map","String","prototype","codePointAt","str","index","c","charCodeAt","encodeXML","ret","lastIdx","match","exec","i","char","next","get","undefined","substring","concat","toString","lastIndex","Number","substr","getEscaper","regex","map","escape","data","result"],"sourceRoot":"https://raw.githubusercontent.com/fb55/entities/867ac709ba482a56a98b7c35f49ca833c74dc193/src/","sources":["escape.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}