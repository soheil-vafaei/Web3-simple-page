{"ast":null,"code":"/**\n * Methods for modifying the DOM structure.\n *\n * @module cheerio/manipulation\n */\nimport { Text, hasChildren } from 'domhandler';\nimport { update as updateDOM } from '../parse.js';\nimport { text as staticText } from '../static.js';\nimport { domEach, cloneDom, isTag, isHtml, isCheerio } from '../utils.js';\nimport { removeElement } from 'domutils';\n/**\n * Create an array of nodes, recursing into arrays and parsing strings if necessary.\n *\n * @private\n * @category Manipulation\n * @param elem - Elements to make an array of.\n * @param clone - Optionally clone nodes.\n * @returns The array of nodes.\n */\n\nexport function _makeDomArray(elem, clone) {\n  if (elem == null) {\n    return [];\n  }\n\n  if (isCheerio(elem)) {\n    return clone ? cloneDom(elem.get()) : elem.get();\n  }\n\n  if (Array.isArray(elem)) {\n    return elem.reduce((newElems, el) => newElems.concat(this._makeDomArray(el, clone)), []);\n  }\n\n  if (typeof elem === 'string') {\n    return this._parse(elem, this.options, false, null).children;\n  }\n\n  return clone ? cloneDom([elem]) : [elem];\n}\n\nfunction _insert(concatenator) {\n  return function () {\n    for (var _len = arguments.length, elems = new Array(_len), _key = 0; _key < _len; _key++) {\n      elems[_key] = arguments[_key];\n    }\n\n    const lastIdx = this.length - 1;\n    return domEach(this, (el, i) => {\n      if (!hasChildren(el)) return;\n      const domSrc = typeof elems[0] === 'function' ? elems[0].call(el, i, this._render(el.children)) : elems;\n\n      const dom = this._makeDomArray(domSrc, i < lastIdx);\n\n      concatenator(dom, el.children, el);\n    });\n  };\n}\n/**\n * Modify an array in-place, removing some number of elements and adding new\n * elements directly following them.\n *\n * @private\n * @category Manipulation\n * @param array - Target array to splice.\n * @param spliceIdx - Index at which to begin changing the array.\n * @param spliceCount - Number of elements to remove from the array.\n * @param newElems - Elements to insert into the array.\n * @param parent - The parent of the node.\n * @returns The spliced array.\n */\n\n\nfunction uniqueSplice(array, spliceIdx, spliceCount, newElems, parent) {\n  var _a, _b;\n\n  const spliceArgs = [spliceIdx, spliceCount, ...newElems];\n  const prev = spliceIdx === 0 ? null : array[spliceIdx - 1];\n  const next = spliceIdx + spliceCount >= array.length ? null : array[spliceIdx + spliceCount];\n  /*\n   * Before splicing in new elements, ensure they do not already appear in the\n   * current array.\n   */\n\n  for (let idx = 0; idx < newElems.length; ++idx) {\n    const node = newElems[idx];\n    const oldParent = node.parent;\n\n    if (oldParent) {\n      const oldSiblings = oldParent.children;\n      const prevIdx = oldSiblings.indexOf(node);\n\n      if (prevIdx > -1) {\n        oldParent.children.splice(prevIdx, 1);\n\n        if (parent === oldParent && spliceIdx > prevIdx) {\n          spliceArgs[0]--;\n        }\n      }\n    }\n\n    node.parent = parent;\n\n    if (node.prev) {\n      node.prev.next = (_a = node.next) !== null && _a !== void 0 ? _a : null;\n    }\n\n    if (node.next) {\n      node.next.prev = (_b = node.prev) !== null && _b !== void 0 ? _b : null;\n    }\n\n    node.prev = idx === 0 ? prev : newElems[idx - 1];\n    node.next = idx === newElems.length - 1 ? next : newElems[idx + 1];\n  }\n\n  if (prev) {\n    prev.next = newElems[0];\n  }\n\n  if (next) {\n    next.prev = newElems[newElems.length - 1];\n  }\n\n  return array.splice(...spliceArgs);\n}\n/**\n * Insert every element in the set of matched elements to the end of the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').appendTo('#fruits');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //      <li class=\"plum\">Plum</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to append elements to.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/appendTo/}\n */\n\n\nexport function appendTo(target) {\n  const appendTarget = isCheerio(target) ? target : this._make(target);\n  appendTarget.append(this);\n  return this;\n}\n/**\n * Insert every element in the set of matched elements to the beginning of the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').prependTo('#fruits');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to prepend elements to.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/prependTo/}\n */\n\nexport function prependTo(target) {\n  const prependTarget = isCheerio(target) ? target : this._make(target);\n  prependTarget.prepend(this);\n  return this;\n}\n/**\n * Inserts content as the _last_ child of each of the selected elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('ul').append('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //      <li class=\"plum\">Plum</li>\n * //    </ul>\n * ```\n *\n * @see {@link https://api.jquery.com/append/}\n */\n\nexport const append = _insert((dom, children, parent) => {\n  uniqueSplice(children, children.length, 0, dom, parent);\n});\n/**\n * Inserts content as the _first_ child of each of the selected elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('ul').prepend('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @see {@link https://api.jquery.com/prepend/}\n */\n\nexport const prepend = _insert((dom, children, parent) => {\n  uniqueSplice(children, 0, 0, dom, parent);\n});\n\nfunction _wrap(insert) {\n  return function (wrapper) {\n    const lastIdx = this.length - 1;\n    const lastParent = this.parents().last();\n\n    for (let i = 0; i < this.length; i++) {\n      const el = this[i];\n      const wrap = typeof wrapper === 'function' ? wrapper.call(el, i, el) : typeof wrapper === 'string' && !isHtml(wrapper) ? lastParent.find(wrapper).clone() : wrapper;\n\n      const [wrapperDom] = this._makeDomArray(wrap, i < lastIdx);\n\n      if (!wrapperDom || !hasChildren(wrapperDom)) continue;\n      let elInsertLocation = wrapperDom;\n      /*\n       * Find the deepest child. Only consider the first tag child of each node\n       * (ignore text); stop if no children are found.\n       */\n\n      let j = 0;\n\n      while (j < elInsertLocation.children.length) {\n        const child = elInsertLocation.children[j];\n\n        if (isTag(child)) {\n          elInsertLocation = child;\n          j = 0;\n        } else {\n          j++;\n        }\n      }\n\n      insert(el, elInsertLocation, [wrapperDom]);\n    }\n\n    return this;\n  };\n}\n/**\n * The .wrap() function can take any string or object that could be passed to\n * the $() factory function to specify a DOM structure. This structure may be\n * nested several levels deep, but should contain only one inmost element. A\n * copy of this structure will be wrapped around each of the elements in the set\n * of matched elements. This method returns the original set of elements for\n * chaining purposes.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const redFruit = $('<div class=\"red-fruit\"></div>');\n * $('.apple').wrap(redFruit);\n *\n * //=> <ul id=\"fruits\">\n * //     <div class=\"red-fruit\">\n * //      <li class=\"apple\">Apple</li>\n * //     </div>\n * //     <li class=\"orange\">Orange</li>\n * //     <li class=\"plum\">Plum</li>\n * //   </ul>\n *\n * const healthy = $('<div class=\"healthy\"></div>');\n * $('li').wrap(healthy);\n *\n * //=> <ul id=\"fruits\">\n * //     <div class=\"healthy\">\n * //       <li class=\"apple\">Apple</li>\n * //     </div>\n * //     <div class=\"healthy\">\n * //       <li class=\"orange\">Orange</li>\n * //     </div>\n * //     <div class=\"healthy\">\n * //        <li class=\"plum\">Plum</li>\n * //     </div>\n * //   </ul>\n * ```\n *\n * @param wrapper - The DOM structure to wrap around each element in the selection.\n * @see {@link https://api.jquery.com/wrap/}\n */\n\n\nexport const wrap = _wrap((el, elInsertLocation, wrapperDom) => {\n  const {\n    parent\n  } = el;\n  if (!parent) return;\n  const siblings = parent.children;\n  const index = siblings.indexOf(el);\n  updateDOM([el], elInsertLocation);\n  /*\n   * The previous operation removed the current element from the `siblings`\n   * array, so the `dom` array can be inserted without removing any\n   * additional elements.\n   */\n\n  uniqueSplice(siblings, index, 0, wrapperDom, parent);\n});\n/**\n * The .wrapInner() function can take any string or object that could be passed\n * to the $() factory function to specify a DOM structure. This structure may be\n * nested several levels deep, but should contain only one inmost element. The\n * structure will be wrapped around the content of each of the elements in the\n * set of matched elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const redFruit = $('<div class=\"red-fruit\"></div>');\n * $('.apple').wrapInner(redFruit);\n *\n * //=> <ul id=\"fruits\">\n * //     <li class=\"apple\">\n * //       <div class=\"red-fruit\">Apple</div>\n * //     </li>\n * //     <li class=\"orange\">Orange</li>\n * //     <li class=\"pear\">Pear</li>\n * //   </ul>\n *\n * const healthy = $('<div class=\"healthy\"></div>');\n * $('li').wrapInner(healthy);\n *\n * //=> <ul id=\"fruits\">\n * //     <li class=\"apple\">\n * //       <div class=\"healthy\">Apple</div>\n * //     </li>\n * //     <li class=\"orange\">\n * //       <div class=\"healthy\">Orange</div>\n * //     </li>\n * //     <li class=\"pear\">\n * //       <div class=\"healthy\">Pear</div>\n * //     </li>\n * //   </ul>\n * ```\n *\n * @param wrapper - The DOM structure to wrap around the content of each element\n *   in the selection.\n * @returns The instance itself, for chaining.\n * @see {@link https://api.jquery.com/wrapInner/}\n */\n\nexport const wrapInner = _wrap((el, elInsertLocation, wrapperDom) => {\n  if (!hasChildren(el)) return;\n  updateDOM(el.children, elInsertLocation);\n  updateDOM(wrapperDom, el);\n});\n/**\n * The .unwrap() function, removes the parents of the set of matched elements\n * from the DOM, leaving the matched elements in their place.\n *\n * @category Manipulation\n * @example <caption>without selector</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<div id=test>\\n  <div><p>Hello</p></div>\\n  <div><p>World</p></div>\\n</div>'\n * );\n * $('#test p').unwrap();\n *\n * //=> <div id=test>\n * //     <p>Hello</p>\n * //     <p>World</p>\n * //   </div>\n * ```\n *\n * @example <caption>with selector</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<div id=test>\\n  <p>Hello</p>\\n  <b><p>World</p></b>\\n</div>'\n * );\n * $('#test p').unwrap('b');\n *\n * //=> <div id=test>\n * //     <p>Hello</p>\n * //     <p>World</p>\n * //   </div>\n * ```\n *\n * @param selector - A selector to check the parent element against. If an\n *   element's parent does not match the selector, the element won't be unwrapped.\n * @returns The instance itself, for chaining.\n * @see {@link https://api.jquery.com/unwrap/}\n */\n\nexport function unwrap(selector) {\n  this.parent(selector).not('body').each((_, el) => {\n    this._make(el).replaceWith(el.children);\n  });\n  return this;\n}\n/**\n * The .wrapAll() function can take any string or object that could be passed to\n * the $() function to specify a DOM structure. This structure may be nested\n * several levels deep, but should contain only one inmost element. The\n * structure will be wrapped around all of the elements in the set of matched\n * elements, as a single group.\n *\n * @category Manipulation\n * @example <caption>With markup passed to `wrapAll`</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<div class=\"container\"><div class=\"inner\">First</div><div class=\"inner\">Second</div></div>'\n * );\n * $('.inner').wrapAll(\"<div class='new'></div>\");\n *\n * //=> <div class=\"container\">\n * //     <div class='new'>\n * //       <div class=\"inner\">First</div>\n * //       <div class=\"inner\">Second</div>\n * //     </div>\n * //   </div>\n * ```\n *\n * @example <caption>With an existing cheerio instance</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<span>Span 1</span><strong>Strong</strong><span>Span 2</span>'\n * );\n * const wrap = $('<div><p><em><b></b></em></p></div>');\n * $('span').wrapAll(wrap);\n *\n * //=> <div>\n * //     <p>\n * //       <em>\n * //         <b>\n * //           <span>Span 1</span>\n * //           <span>Span 2</span>\n * //         </b>\n * //       </em>\n * //     </p>\n * //   </div>\n * //   <strong>Strong</strong>\n * ```\n *\n * @param wrapper - The DOM structure to wrap around all matched elements in the\n *   selection.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/wrapAll/}\n */\n\nexport function wrapAll(wrapper) {\n  const el = this[0];\n\n  if (el) {\n    const wrap = this._make(typeof wrapper === 'function' ? wrapper.call(el, 0, el) : wrapper).insertBefore(el); // If html is given as wrapper, wrap may contain text elements\n\n\n    let elInsertLocation;\n\n    for (let i = 0; i < wrap.length; i++) {\n      if (wrap[i].type === 'tag') elInsertLocation = wrap[i];\n    }\n\n    let j = 0;\n    /*\n     * Find the deepest child. Only consider the first tag child of each node\n     * (ignore text); stop if no children are found.\n     */\n\n    while (elInsertLocation && j < elInsertLocation.children.length) {\n      const child = elInsertLocation.children[j];\n\n      if (child.type === 'tag') {\n        elInsertLocation = child;\n        j = 0;\n      } else {\n        j++;\n      }\n    }\n\n    if (elInsertLocation) this._make(elInsertLocation).append(this);\n  }\n\n  return this;\n}\n/* eslint-disable jsdoc/check-param-names*/\n\n/**\n * Insert content next to each element in the set of matched elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.apple').after('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param content - HTML string, DOM element, array of DOM elements or Cheerio\n *   to insert after each element in the set of matched elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/after/}\n */\n\nexport function after() {\n  for (var _len2 = arguments.length, elems = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    elems[_key2] = arguments[_key2];\n  }\n\n  const lastIdx = this.length - 1;\n  return domEach(this, (el, i) => {\n    const {\n      parent\n    } = el;\n\n    if (!hasChildren(el) || !parent) {\n      return;\n    }\n\n    const siblings = parent.children;\n    const index = siblings.indexOf(el); // If not found, move on\n\n    /* istanbul ignore next */\n\n    if (index < 0) return;\n    const domSrc = typeof elems[0] === 'function' ? elems[0].call(el, i, this._render(el.children)) : elems;\n\n    const dom = this._makeDomArray(domSrc, i < lastIdx); // Add element after `this` element\n\n\n    uniqueSplice(siblings, index + 1, 0, dom, parent);\n  });\n}\n/* eslint-enable jsdoc/check-param-names*/\n\n/**\n * Insert every element in the set of matched elements after the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').insertAfter('.apple');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to insert elements after.\n * @returns The set of newly inserted elements.\n * @see {@link https://api.jquery.com/insertAfter/}\n */\n\nexport function insertAfter(target) {\n  if (typeof target === 'string') {\n    target = this._make(target);\n  }\n\n  this.remove();\n  const clones = [];\n\n  this._makeDomArray(target).forEach(el => {\n    const clonedSelf = this.clone().toArray();\n    const {\n      parent\n    } = el;\n\n    if (!parent) {\n      return;\n    }\n\n    const siblings = parent.children;\n    const index = siblings.indexOf(el); // If not found, move on\n\n    /* istanbul ignore next */\n\n    if (index < 0) return; // Add cloned `this` element(s) after target element\n\n    uniqueSplice(siblings, index + 1, 0, clonedSelf, parent);\n    clones.push(...clonedSelf);\n  });\n\n  return this._make(clones);\n}\n/* eslint-disable jsdoc/check-param-names*/\n\n/**\n * Insert content previous to each element in the set of matched elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.apple').before('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param content - HTML string, DOM element, array of DOM elements or Cheerio\n *   to insert before each element in the set of matched elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/before/}\n */\n\nexport function before() {\n  for (var _len3 = arguments.length, elems = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    elems[_key3] = arguments[_key3];\n  }\n\n  const lastIdx = this.length - 1;\n  return domEach(this, (el, i) => {\n    const {\n      parent\n    } = el;\n\n    if (!hasChildren(el) || !parent) {\n      return;\n    }\n\n    const siblings = parent.children;\n    const index = siblings.indexOf(el); // If not found, move on\n\n    /* istanbul ignore next */\n\n    if (index < 0) return;\n    const domSrc = typeof elems[0] === 'function' ? elems[0].call(el, i, this._render(el.children)) : elems;\n\n    const dom = this._makeDomArray(domSrc, i < lastIdx); // Add element before `el` element\n\n\n    uniqueSplice(siblings, index, 0, dom, parent);\n  });\n}\n/* eslint-enable jsdoc/check-param-names*/\n\n/**\n * Insert every element in the set of matched elements before the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').insertBefore('.apple');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to insert elements before.\n * @returns The set of newly inserted elements.\n * @see {@link https://api.jquery.com/insertBefore/}\n */\n\nexport function insertBefore(target) {\n  const targetArr = this._make(target);\n\n  this.remove();\n  const clones = [];\n  domEach(targetArr, el => {\n    const clonedSelf = this.clone().toArray();\n    const {\n      parent\n    } = el;\n\n    if (!parent) {\n      return;\n    }\n\n    const siblings = parent.children;\n    const index = siblings.indexOf(el); // If not found, move on\n\n    /* istanbul ignore next */\n\n    if (index < 0) return; // Add cloned `this` element(s) after target element\n\n    uniqueSplice(siblings, index, 0, clonedSelf, parent);\n    clones.push(...clonedSelf);\n  });\n  return this._make(clones);\n}\n/**\n * Removes the set of matched elements from the DOM and all their children.\n * `selector` filters the set of matched elements to be removed.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.pear').remove();\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //    </ul>\n * ```\n *\n * @param selector - Optional selector for elements to remove.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/remove/}\n */\n\nexport function remove(selector) {\n  // Filter if we have selector\n  const elems = selector ? this.filter(selector) : this;\n  domEach(elems, el => {\n    removeElement(el);\n    el.prev = el.next = el.parent = null;\n  });\n  return this;\n}\n/**\n * Replaces matched elements with `content`.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const plum = $('<li class=\"plum\">Plum</li>');\n * $('.pear').replaceWith(plum);\n * $.html();\n * //=> <ul id=\"fruits\">\n * //     <li class=\"apple\">Apple</li>\n * //     <li class=\"orange\">Orange</li>\n * //     <li class=\"plum\">Plum</li>\n * //   </ul>\n * ```\n *\n * @param content - Replacement for matched elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/replaceWith/}\n */\n\nexport function replaceWith(content) {\n  return domEach(this, (el, i) => {\n    const {\n      parent\n    } = el;\n\n    if (!parent) {\n      return;\n    }\n\n    const siblings = parent.children;\n    const cont = typeof content === 'function' ? content.call(el, i, el) : content;\n\n    const dom = this._makeDomArray(cont);\n    /*\n     * In the case that `dom` contains nodes that already exist in other\n     * structures, ensure those nodes are properly removed.\n     */\n\n\n    updateDOM(dom, null);\n    const index = siblings.indexOf(el); // Completely remove old element\n\n    uniqueSplice(siblings, index, 1, dom, parent);\n\n    if (!dom.includes(el)) {\n      el.parent = el.prev = el.next = null;\n    }\n  });\n}\n/**\n * Empties an element, removing all its children.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('ul').empty();\n * $.html();\n * //=>  <ul id=\"fruits\"></ul>\n * ```\n *\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/empty/}\n */\n\nexport function empty() {\n  return domEach(this, el => {\n    if (!hasChildren(el)) return;\n    el.children.forEach(child => {\n      child.next = child.prev = child.parent = null;\n    });\n    el.children.length = 0;\n  });\n}\nexport function html(str) {\n  if (str === undefined) {\n    const el = this[0];\n    if (!el || !hasChildren(el)) return null;\n    return this._render(el.children);\n  }\n\n  return domEach(this, el => {\n    if (!hasChildren(el)) return;\n    el.children.forEach(child => {\n      child.next = child.prev = child.parent = null;\n    });\n    const content = isCheerio(str) ? str.toArray() : this._parse(`${str}`, this.options, false, el).children;\n    updateDOM(content, el);\n  });\n}\n/**\n * Turns the collection to a string. Alias for `.html()`.\n *\n * @category Manipulation\n * @returns The rendered document.\n */\n\nexport function toString() {\n  return this._render(this);\n}\nexport function text(str) {\n  // If `str` is undefined, act as a \"getter\"\n  if (str === undefined) {\n    return staticText(this);\n  }\n\n  if (typeof str === 'function') {\n    // Function support\n    return domEach(this, (el, i) => this._make(el).text(str.call(el, i, staticText([el]))));\n  } // Append text node to each selected elements\n\n\n  return domEach(this, el => {\n    if (!hasChildren(el)) return;\n    el.children.forEach(child => {\n      child.next = child.prev = child.parent = null;\n    });\n    const textNode = new Text(`${str}`);\n    updateDOM(textNode, el);\n  });\n}\n/**\n * Clone the cheerio object.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const moreFruit = $('#fruits').clone();\n * ```\n *\n * @returns The cloned object.\n * @see {@link https://api.jquery.com/clone/}\n */\n\nexport function clone() {\n  return this._make(cloneDom(this.get()));\n}","map":{"version":3,"mappings":"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","names":["Text","hasChildren","update","updateDOM","text","staticText","domEach","cloneDom","isTag","isHtml","isCheerio","removeElement","_makeDomArray","elem","clone","get","Array","isArray","reduce","newElems","el","concat","_parse","options","children","_insert","concatenator","elems","lastIdx","length","i","domSrc","call","_render","dom","uniqueSplice","array","spliceIdx","spliceCount","parent","spliceArgs","prev","next","idx","node","oldParent","oldSiblings","prevIdx","indexOf","splice","_a","_b","appendTo","target","appendTarget","_make","append","prependTo","prependTarget","prepend","_wrap","insert","wrapper","lastParent","parents","last","wrap","find","wrapperDom","elInsertLocation","j","child","siblings","index","wrapInner","unwrap","selector","not","each","_","replaceWith","wrapAll","insertBefore","type","after","insertAfter","remove","clones","forEach","clonedSelf","toArray","push","before","targetArr","filter","content","cont","includes","empty","html","str","undefined","toString","textNode"],"sourceRoot":"https://raw.githubusercontent.com/cheeriojs/cheerio/d1cbc66d53392ce8bf6cd0068f675836372d2bf3/src/","sources":["api/manipulation.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}