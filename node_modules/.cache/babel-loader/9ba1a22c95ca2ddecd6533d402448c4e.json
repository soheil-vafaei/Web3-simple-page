{"ast":null,"code":"import { textContent } from \"./stringify.js\";\nimport { getElementsByTagName } from \"./legacy.js\";\n/**\n * Get the feed object from the root of a DOM tree.\n *\n * @category Feeds\n * @param doc - The DOM to to extract the feed from.\n * @returns The feed.\n */\n\nexport function getFeed(doc) {\n  const feedRoot = getOneElement(isValidFeed, doc);\n  return !feedRoot ? null : feedRoot.name === \"feed\" ? getAtomFeed(feedRoot) : getRssFeed(feedRoot);\n}\n/**\n * Parse an Atom feed.\n *\n * @param feedRoot The root of the feed.\n * @returns The parsed feed.\n */\n\nfunction getAtomFeed(feedRoot) {\n  var _a;\n\n  const childs = feedRoot.children;\n  const feed = {\n    type: \"atom\",\n    items: getElementsByTagName(\"entry\", childs).map(item => {\n      var _a;\n\n      const {\n        children\n      } = item;\n      const entry = {\n        media: getMediaElements(children)\n      };\n      addConditionally(entry, \"id\", \"id\", children);\n      addConditionally(entry, \"title\", \"title\", children);\n      const href = (_a = getOneElement(\"link\", children)) === null || _a === void 0 ? void 0 : _a.attribs[\"href\"];\n\n      if (href) {\n        entry.link = href;\n      }\n\n      const description = fetch(\"summary\", children) || fetch(\"content\", children);\n\n      if (description) {\n        entry.description = description;\n      }\n\n      const pubDate = fetch(\"updated\", children);\n\n      if (pubDate) {\n        entry.pubDate = new Date(pubDate);\n      }\n\n      return entry;\n    })\n  };\n  addConditionally(feed, \"id\", \"id\", childs);\n  addConditionally(feed, \"title\", \"title\", childs);\n  const href = (_a = getOneElement(\"link\", childs)) === null || _a === void 0 ? void 0 : _a.attribs[\"href\"];\n\n  if (href) {\n    feed.link = href;\n  }\n\n  addConditionally(feed, \"description\", \"subtitle\", childs);\n  const updated = fetch(\"updated\", childs);\n\n  if (updated) {\n    feed.updated = new Date(updated);\n  }\n\n  addConditionally(feed, \"author\", \"email\", childs, true);\n  return feed;\n}\n/**\n * Parse a RSS feed.\n *\n * @param feedRoot The root of the feed.\n * @returns The parsed feed.\n */\n\n\nfunction getRssFeed(feedRoot) {\n  var _a, _b;\n\n  const childs = (_b = (_a = getOneElement(\"channel\", feedRoot.children)) === null || _a === void 0 ? void 0 : _a.children) !== null && _b !== void 0 ? _b : [];\n  const feed = {\n    type: feedRoot.name.substr(0, 3),\n    id: \"\",\n    items: getElementsByTagName(\"item\", feedRoot.children).map(item => {\n      const {\n        children\n      } = item;\n      const entry = {\n        media: getMediaElements(children)\n      };\n      addConditionally(entry, \"id\", \"guid\", children);\n      addConditionally(entry, \"title\", \"title\", children);\n      addConditionally(entry, \"link\", \"link\", children);\n      addConditionally(entry, \"description\", \"description\", children);\n      const pubDate = fetch(\"pubDate\", children);\n      if (pubDate) entry.pubDate = new Date(pubDate);\n      return entry;\n    })\n  };\n  addConditionally(feed, \"title\", \"title\", childs);\n  addConditionally(feed, \"link\", \"link\", childs);\n  addConditionally(feed, \"description\", \"description\", childs);\n  const updated = fetch(\"lastBuildDate\", childs);\n\n  if (updated) {\n    feed.updated = new Date(updated);\n  }\n\n  addConditionally(feed, \"author\", \"managingEditor\", childs, true);\n  return feed;\n}\n\nconst MEDIA_KEYS_STRING = [\"url\", \"type\", \"lang\"];\nconst MEDIA_KEYS_INT = [\"fileSize\", \"bitrate\", \"framerate\", \"samplingrate\", \"channels\", \"duration\", \"height\", \"width\"];\n/**\n * Get all media elements of a feed item.\n *\n * @param where Nodes to search in.\n * @returns Media elements.\n */\n\nfunction getMediaElements(where) {\n  return getElementsByTagName(\"media:content\", where).map(elem => {\n    const {\n      attribs\n    } = elem;\n    const media = {\n      medium: attribs[\"medium\"],\n      isDefault: !!attribs[\"isDefault\"]\n    };\n\n    for (const attrib of MEDIA_KEYS_STRING) {\n      if (attribs[attrib]) {\n        media[attrib] = attribs[attrib];\n      }\n    }\n\n    for (const attrib of MEDIA_KEYS_INT) {\n      if (attribs[attrib]) {\n        media[attrib] = parseInt(attribs[attrib], 10);\n      }\n    }\n\n    if (attribs[\"expression\"]) {\n      media.expression = attribs[\"expression\"];\n    }\n\n    return media;\n  });\n}\n/**\n * Get one element by tag name.\n *\n * @param tagName Tag name to look for\n * @param node Node to search in\n * @returns The element or null\n */\n\n\nfunction getOneElement(tagName, node) {\n  return getElementsByTagName(tagName, node, true, 1)[0];\n}\n/**\n * Get the text content of an element with a certain tag name.\n *\n * @param tagName Tag name to look for.\n * @param where Node to search in.\n * @param recurse Whether to recurse into child nodes.\n * @returns The text content of the element.\n */\n\n\nfunction fetch(tagName, where) {\n  let recurse = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return textContent(getElementsByTagName(tagName, where, recurse, 1)).trim();\n}\n/**\n * Adds a property to an object if it has a value.\n *\n * @param obj Object to be extended\n * @param prop Property name\n * @param tagName Tag name that contains the conditionally added property\n * @param where Element to search for the property\n * @param recurse Whether to recurse into child nodes.\n */\n\n\nfunction addConditionally(obj, prop, tagName, where) {\n  let recurse = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  const val = fetch(tagName, where, recurse);\n  if (val) obj[prop] = val;\n}\n/**\n * Checks if an element is a feed root node.\n *\n * @param value The name of the element to check.\n * @returns Whether an element is a feed root node.\n */\n\n\nfunction isValidFeed(value) {\n  return value === \"rss\" || value === \"feed\" || value === \"rdf:RDF\";\n}","map":{"version":3,"mappings":"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","names":["textContent","getElementsByTagName","getFeed","doc","feedRoot","getOneElement","isValidFeed","name","getAtomFeed","getRssFeed","childs","children","feed","type","items","map","item","entry","media","getMediaElements","addConditionally","href","_a","attribs","link","description","fetch","pubDate","Date","updated","_b","substr","id","MEDIA_KEYS_STRING","MEDIA_KEYS_INT","where","elem","medium","isDefault","attrib","parseInt","expression","tagName","node","recurse","trim","obj","prop","val","value"],"sourceRoot":"https://raw.githubusercontent.com/fb55/domutils/f7e357b5c210b6731c2a60e0b7b3cfaa1f96b706/src/","sources":["feeds.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}