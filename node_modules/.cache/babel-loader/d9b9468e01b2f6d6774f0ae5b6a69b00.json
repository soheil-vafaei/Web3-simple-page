{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.normalizeEntry = exports.normalize = void 0;\n\nconst normalize = looseAbi => looseAbi.map(exports.normalizeEntry);\n\nexports.normalize = normalize;\n\nconst normalizeEntry = looseEntry => {\n  if (looseEntry.type === \"event\" || looseEntry.type === \"error\") {\n    // nothing gets normalized for events or errors right now\n    return looseEntry;\n  }\n\n  const entry = Object.assign(Object.assign(Object.assign({}, looseEntry), normalizeStateMutability(looseEntry)), {\n    type: looseEntry.type || \"function\"\n  });\n\n  if (entry.type === \"function\") {\n    entry.outputs = entry.outputs || [];\n  }\n\n  delete entry.payable;\n  delete entry.constant;\n  return entry;\n};\n\nexports.normalizeEntry = normalizeEntry;\n\nconst normalizeStateMutability = _ref => {\n  let {\n    stateMutability,\n    payable,\n    constant\n  } = _ref;\n\n  if (stateMutability) {\n    return {\n      stateMutability\n    };\n  }\n\n  return {\n    stateMutability: payable ? \"payable\" : constant ? \"view\" : \"nonpayable\"\n  };\n};","map":{"version":3,"mappings":";;;;;;;AAGO,MAAMA,SAAS,GAAIC,QAAD,IACtBA,QAAsB,CAACC,GAAvB,CAA2BC,sBAA3B,CADI;;AAAMA,oBAASH,SAAT;;AAKN,MAAMI,cAAc,GAAIC,UAAD,IAA+C;EAC3E,IAAIA,UAAU,CAACC,IAAX,KAAoB,OAApB,IAA+BD,UAAU,CAACC,IAAX,KAAoB,OAAvD,EAAgE;IAC9D;IACA,OAAOD,UAAP;EACD;;EAED,MAAME,KAAK,GAAGC,8CACTH,UADS,GAETI,wBAAwB,CAACJ,UAAD,CAFf,GAEyD;IACrEC,IAAI,EAAED,UAAU,CAACC,IAAX,IAAmB;EAD4C,CAFzD,CAAd;;EAMA,IAAIC,KAAK,CAACD,IAAN,KAAe,UAAnB,EAA+B;IAC7BC,KAAK,CAACG,OAAN,GAAgBH,KAAK,CAACG,OAAN,IAAiB,EAAjC;EACD;;EAED,OAAQH,KAAa,CAACI,OAAtB;EACA,OAAQJ,KAAa,CAACK,QAAtB;EAEA,OAAOL,KAAP;AACD,CApBM;;AAAMJ,yBAAcC,cAAd;;AA4Bb,MAAMK,wBAAwB,GAAG,QAIsC;EAAA,IAJrC;IAChCI,eADgC;IAEhCF,OAFgC;IAGhCC;EAHgC,CAIqC;;EACrE,IAAIC,eAAJ,EAAqB;IACnB,OAAO;MAAEA;IAAF,CAAP;EACD;;EAED,OAAO;IACLA,eAAe,EAAEF,OAAO,GAAG,SAAH,GAAeC,QAAQ,GAAG,MAAH,GAAY;EADtD,CAAP;AAGD,CAZD","names":["normalize","looseAbi","map","exports","normalizeEntry","looseEntry","type","entry","Object","normalizeStateMutability","outputs","payable","constant","stateMutability"],"sourceRoot":"","sources":["../../lib/normalize.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}