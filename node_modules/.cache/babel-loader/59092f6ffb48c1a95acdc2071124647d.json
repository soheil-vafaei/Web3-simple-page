{"ast":null,"code":"import { removeElement } from 'domutils';\nimport { Document, isDocument as checkIsDocument } from 'domhandler';\n/**\n * Get the parse function with options.\n *\n * @param parser - The parser function.\n * @returns The parse function with options.\n */\n\nexport function getParse(parser) {\n  /**\n   * Parse a HTML string or a node.\n   *\n   * @param content - The HTML string or node.\n   * @param options - The parser options.\n   * @param isDocument - If `content` is a document.\n   * @param context - The context node in the DOM tree.\n   * @returns The parsed document node.\n   */\n  return function parse(content, options, isDocument, context) {\n    if (typeof Buffer !== 'undefined' && Buffer.isBuffer(content)) {\n      content = content.toString();\n    }\n\n    if (typeof content === 'string') {\n      return parser(content, options, isDocument, context);\n    }\n\n    const doc = content;\n\n    if (!Array.isArray(doc) && checkIsDocument(doc)) {\n      // If `doc` is already a root, just return it\n      return doc;\n    } // Add conent to new root element\n\n\n    const root = new Document([]); // Update the DOM using the root\n\n    update(doc, root);\n    return root;\n  };\n}\n/**\n * Update the dom structure, for one changed layer.\n *\n * @param newChilds - The new children.\n * @param parent - The new parent.\n * @returns The parent node.\n */\n\nexport function update(newChilds, parent) {\n  // Normalize\n  const arr = Array.isArray(newChilds) ? newChilds : [newChilds]; // Update parent\n\n  if (parent) {\n    parent.children = arr;\n  } else {\n    parent = null;\n  } // Update neighbors\n\n\n  for (let i = 0; i < arr.length; i++) {\n    const node = arr[i]; // Cleanly remove existing nodes from their previous structures.\n\n    if (node.parent && node.parent.children !== arr) {\n      removeElement(node);\n    }\n\n    if (parent) {\n      node.prev = arr[i - 1] || null;\n      node.next = arr[i + 1] || null;\n    } else {\n      node.prev = node.next = null;\n    }\n\n    node.parent = parent;\n  }\n\n  return parent;\n}","map":{"version":3,"mappings":"AAAA,SAASA,aAAT,QAA8B,UAA9B;AACA,SAEEC,QAFF,EAIEC,UAAU,IAAIC,eAJhB,QAKO,YALP;AAQA;;;;;;;AAMA,OAAM,SAAUC,QAAV,CACJC,MADI,EAMS;EAEb;;;;;;;;;EASA,OAAO,SAASC,KAAT,CACLC,OADK,EAELC,OAFK,EAGLN,UAHK,EAILO,OAJK,EAIqB;IAE1B,IAAI,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,QAAP,CAAgBJ,OAAhB,CAArC,EAA+D;MAC7DA,OAAO,GAAGA,OAAO,CAACK,QAAR,EAAV;IACD;;IAED,IAAI,OAAOL,OAAP,KAAmB,QAAvB,EAAiC;MAC/B,OAAOF,MAAM,CAACE,OAAD,EAAUC,OAAV,EAAmBN,UAAnB,EAA+BO,OAA/B,CAAb;IACD;;IAED,MAAMI,GAAG,GAAGN,OAAZ;;IAEA,IAAI,CAACO,KAAK,CAACC,OAAN,CAAcF,GAAd,CAAD,IAAuBV,eAAe,CAACU,GAAD,CAA1C,EAAiD;MAC/C;MACA,OAAOA,GAAP;IACD,CAfyB,CAiB1B;;;IACA,MAAMG,IAAI,GAAG,IAAIf,QAAJ,CAAa,EAAb,CAAb,CAlB0B,CAoB1B;;IACAgB,MAAM,CAACJ,GAAD,EAAMG,IAAN,CAAN;IAEA,OAAOA,IAAP;EACD,CA5BD;AA6BD;AAED;;;;;;;;AAOA,OAAM,SAAUC,MAAV,CACJC,SADI,EAEJC,MAFI,EAEqB;EAEzB;EACA,MAAMC,GAAG,GAAGN,KAAK,CAACC,OAAN,CAAcG,SAAd,IAA2BA,SAA3B,GAAuC,CAACA,SAAD,CAAnD,CAHyB,CAKzB;;EACA,IAAIC,MAAJ,EAAY;IACVA,MAAM,CAACE,QAAP,GAAkBD,GAAlB;EACD,CAFD,MAEO;IACLD,MAAM,GAAG,IAAT;EACD,CAVwB,CAYzB;;;EACA,KAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAAG,CAACG,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;IACnC,MAAME,IAAI,GAAGJ,GAAG,CAACE,CAAD,CAAhB,CADmC,CAGnC;;IACA,IAAIE,IAAI,CAACL,MAAL,IAAeK,IAAI,CAACL,MAAL,CAAYE,QAAZ,KAAyBD,GAA5C,EAAiD;MAC/CpB,aAAa,CAACwB,IAAD,CAAb;IACD;;IAED,IAAIL,MAAJ,EAAY;MACVK,IAAI,CAACC,IAAL,GAAYL,GAAG,CAACE,CAAC,GAAG,CAAL,CAAH,IAAc,IAA1B;MACAE,IAAI,CAACE,IAAL,GAAYN,GAAG,CAACE,CAAC,GAAG,CAAL,CAAH,IAAc,IAA1B;IACD,CAHD,MAGO;MACLE,IAAI,CAACC,IAAL,GAAYD,IAAI,CAACE,IAAL,GAAY,IAAxB;IACD;;IAEDF,IAAI,CAACL,MAAL,GAAcA,MAAd;EACD;;EAED,OAAOA,MAAP;AACD","names":["removeElement","Document","isDocument","checkIsDocument","getParse","parser","parse","content","options","context","Buffer","isBuffer","toString","doc","Array","isArray","root","update","newChilds","parent","arr","children","i","length","node","prev","next"],"sourceRoot":"https://raw.githubusercontent.com/cheeriojs/cheerio/d1cbc66d53392ce8bf6cd0068f675836372d2bf3/src/","sources":["parse.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}