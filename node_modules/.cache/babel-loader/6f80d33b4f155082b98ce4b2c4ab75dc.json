{"ast":null,"code":"/**\n * Types used in signatures of Cheerio methods.\n *\n * @category Cheerio\n */\nexport * from './types.js';\nimport { getLoad } from './load.js';\nimport { getParse } from './parse.js';\nimport { renderWithParse5, parseWithParse5 } from './parsers/parse5-adapter.js';\nimport renderWithHtmlparser2 from 'dom-serializer';\nimport { parseDocument as parseWithHtmlparser2 } from 'htmlparser2';\nconst parse = getParse((content, options, isDocument, context) => options.xmlMode || options._useHtmlParser2 ? parseWithHtmlparser2(content, options) : parseWithParse5(content, options, isDocument, context)); // Duplicate docs due to https://github.com/TypeStrong/typedoc/issues/1616\n\n/**\n * Create a querying function, bound to a document created from the provided markup.\n *\n * Note that similar to web browser contexts, this operation may introduce\n * `<html>`, `<head>`, and `<body>` elements; set `isDocument` to `false` to\n * switch to fragment mode and disable this.\n *\n * @param content - Markup to be loaded.\n * @param options - Options for the created instance.\n * @param isDocument - Allows parser to be switched to fragment mode.\n * @returns The loaded document.\n * @see {@link https://cheerio.js.org#loading} for additional usage information.\n */\n\nexport const load = getLoad(parse, (dom, options) => options.xmlMode || options._useHtmlParser2 ? renderWithHtmlparser2(dom, options) : renderWithParse5(dom));\n/**\n * The default cheerio instance.\n *\n * @deprecated Use the function returned by `load` instead.\n */\n\nexport default load([]);\nexport { html, xml, text } from './static.js';\nimport * as staticMethods from './static.js';\n/**\n * In order to promote consistency with the jQuery library, users are encouraged\n * to instead use the static method of the same name.\n *\n * @deprecated\n * @example\n *\n * ```js\n * const $ = cheerio.load('<div><p></p></div>');\n *\n * $.contains($('div').get(0), $('p').get(0));\n * //=> true\n *\n * $.contains($('p').get(0), $('div').get(0));\n * //=> false\n * ```\n *\n * @returns {boolean}\n */\n\nexport const {\n  contains\n} = staticMethods;\n/**\n * In order to promote consistency with the jQuery library, users are encouraged\n * to instead use the static method of the same name.\n *\n * @deprecated\n * @example\n *\n * ```js\n * const $ = cheerio.load('');\n *\n * $.merge([1, 2], [3, 4]);\n * //=> [1, 2, 3, 4]\n * ```\n */\n\nexport const {\n  merge\n} = staticMethods;\n/**\n * In order to promote consistency with the jQuery library, users are encouraged\n * to instead use the static method of the same name as it is defined on the\n * \"loaded\" Cheerio factory function.\n *\n * @deprecated See {@link static/parseHTML}.\n * @example\n *\n * ```js\n * const $ = cheerio.load('');\n * $.parseHTML('<b>markup</b>');\n * ```\n */\n\nexport const {\n  parseHTML\n} = staticMethods;\n/**\n * Users seeking to access the top-level element of a parsed document should\n * instead use the `root` static method of a \"loaded\" Cheerio function.\n *\n * @deprecated\n * @example\n *\n * ```js\n * const $ = cheerio.load('');\n * $.root();\n * ```\n */\n\nexport const {\n  root\n} = staticMethods;","map":{"version":3,"mappings":"AAOA;;;;;AAKA,cAAc,YAAd;AAcA,SAASA,OAAT,QAAwB,WAAxB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,gBAAT,EAA2BC,eAA3B,QAAkD,6BAAlD;AACA,OAAOC,qBAAP,MAAkC,gBAAlC;AACA,SAASC,aAAa,IAAIC,oBAA1B,QAAsD,aAAtD;AAEA,MAAMC,KAAK,GAAGN,QAAQ,CAAC,CAACO,OAAD,EAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,OAA/B,KACrBF,OAAO,CAACG,OAAR,IAAmBH,OAAO,CAACI,eAA3B,GACIP,oBAAoB,CAACE,OAAD,EAAUC,OAAV,CADxB,GAEIN,eAAe,CAACK,OAAD,EAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,OAA/B,CAHC,CAAtB,C,CAMA;;AACA;;;;;;;;;;;;;;AAaA,OAAO,MAAMG,IAAI,GAAGd,OAAO,CAACO,KAAD,EAAQ,CAACQ,GAAD,EAAMN,OAAN,KACjCA,OAAO,CAACG,OAAR,IAAmBH,OAAO,CAACI,eAA3B,GACIT,qBAAqB,CAACW,GAAD,EAAMN,OAAN,CADzB,GAEIP,gBAAgB,CAACa,GAAD,CAHK,CAApB;AAMP;;;;;;AAKA,eAAeD,IAAI,CAAC,EAAD,CAAnB;AAEA,SAASE,IAAT,EAAeC,GAAf,EAAoBC,IAApB,QAAgC,aAAhC;AAEA,OAAO,KAAKC,aAAZ,MAA+B,aAA/B;AAEA;;;;;;;;;;;;;;;;;;;;AAmBA,OAAO,MAAM;EAAEC;AAAF,IAAeD,aAArB;AAEP;;;;;;;;;;;;;;;AAcA,OAAO,MAAM;EAAEE;AAAF,IAAYF,aAAlB;AAEP;;;;;;;;;;;;;;AAaA,OAAO,MAAM;EAAEG;AAAF,IAAgBH,aAAtB;AAEP;;;;;;;;;;;;;AAYA,OAAO,MAAM;EAAEI;AAAF,IAAWJ,aAAjB","names":["getLoad","getParse","renderWithParse5","parseWithParse5","renderWithHtmlparser2","parseDocument","parseWithHtmlparser2","parse","content","options","isDocument","context","xmlMode","_useHtmlParser2","load","dom","html","xml","text","staticMethods","contains","merge","parseHTML","root"],"sourceRoot":"https://raw.githubusercontent.com/cheeriojs/cheerio/d1cbc66d53392ce8bf6cd0068f675836372d2bf3/src/","sources":["index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}