{"ast":null,"code":"/*\nLanguage: Delphi\nWebsite: https://www.embarcadero.com/products/delphi\n*/\n\n/** @type LanguageFn */\nfunction delphi(hljs) {\n  const KEYWORDS = 'exports register file shl array record property for mod while set ally label uses raise not ' + 'stored class safecall var interface or private static exit index inherited to else stdcall ' + 'override shr asm far resourcestring finalization packed virtual out and protected library do ' + 'xorwrite goto near function end div overload object unit begin string on inline repeat until ' + 'destructor write message program with read initialization except default nil if case cdecl in ' + 'downto threadvar of try pascal const external constructor type public then implementation ' + 'finally published procedure absolute reintroduce operator as is abstract alias assembler ' + 'bitpacked break continue cppdecl cvar enumerator experimental platform deprecated ' + 'unimplemented dynamic export far16 forward generic helper implements interrupt iochecks ' + 'local name nodefault noreturn nostackframe oldfpccall otherwise saveregisters softfloat ' + 'specialize strict unaligned varargs ';\n  const COMMENT_MODES = [hljs.C_LINE_COMMENT_MODE, hljs.COMMENT(/\\{/, /\\}/, {\n    relevance: 0\n  }), hljs.COMMENT(/\\(\\*/, /\\*\\)/, {\n    relevance: 10\n  })];\n  const DIRECTIVE = {\n    className: 'meta',\n    variants: [{\n      begin: /\\{\\$/,\n      end: /\\}/\n    }, {\n      begin: /\\(\\*\\$/,\n      end: /\\*\\)/\n    }]\n  };\n  const STRING = {\n    className: 'string',\n    begin: /'/,\n    end: /'/,\n    contains: [{\n      begin: /''/\n    }]\n  };\n  const NUMBER = {\n    className: 'number',\n    relevance: 0,\n    // Source: https://www.freepascal.org/docs-html/ref/refse6.html\n    variants: [{\n      // Hexadecimal notation, e.g., $7F.\n      begin: '\\\\$[0-9A-Fa-f]+'\n    }, {\n      // Octal notation, e.g., &42.\n      begin: '&[0-7]+'\n    }, {\n      // Binary notation, e.g., %1010.\n      begin: '%[01]+'\n    }]\n  };\n  const CHAR_STRING = {\n    className: 'string',\n    begin: /(#\\d+)+/\n  };\n  const CLASS = {\n    begin: hljs.IDENT_RE + '\\\\s*=\\\\s*class\\\\s*\\\\(',\n    returnBegin: true,\n    contains: [hljs.TITLE_MODE]\n  };\n  const FUNCTION = {\n    className: 'function',\n    beginKeywords: 'function constructor destructor procedure',\n    end: /[:;]/,\n    keywords: 'function constructor|10 destructor|10 procedure|10',\n    contains: [hljs.TITLE_MODE, {\n      className: 'params',\n      begin: /\\(/,\n      end: /\\)/,\n      keywords: KEYWORDS,\n      contains: [STRING, CHAR_STRING, DIRECTIVE].concat(COMMENT_MODES)\n    }, DIRECTIVE].concat(COMMENT_MODES)\n  };\n  return {\n    name: 'Delphi',\n    aliases: ['dpr', 'dfm', 'pas', 'pascal', 'freepascal', 'lazarus', 'lpr', 'lfm'],\n    case_insensitive: true,\n    keywords: KEYWORDS,\n    illegal: /\"|\\$[G-Zg-z]|\\/\\*|<\\/|\\|/,\n    contains: [STRING, CHAR_STRING, hljs.NUMBER_MODE, NUMBER, CLASS, FUNCTION, DIRECTIVE].concat(COMMENT_MODES)\n  };\n}\n\nmodule.exports = delphi;","map":{"version":3,"names":["delphi","hljs","KEYWORDS","COMMENT_MODES","C_LINE_COMMENT_MODE","COMMENT","relevance","DIRECTIVE","className","variants","begin","end","STRING","contains","NUMBER","CHAR_STRING","CLASS","IDENT_RE","returnBegin","TITLE_MODE","FUNCTION","beginKeywords","keywords","concat","name","aliases","case_insensitive","illegal","NUMBER_MODE","module","exports"],"sources":["/Users/soheilvafaei/Documents/resume/Web3/web3 simple react web3 js/node_modules/highlight.js/lib/languages/delphi.js"],"sourcesContent":["/*\nLanguage: Delphi\nWebsite: https://www.embarcadero.com/products/delphi\n*/\n\n/** @type LanguageFn */\nfunction delphi(hljs) {\n  const KEYWORDS =\n    'exports register file shl array record property for mod while set ally label uses raise not ' +\n    'stored class safecall var interface or private static exit index inherited to else stdcall ' +\n    'override shr asm far resourcestring finalization packed virtual out and protected library do ' +\n    'xorwrite goto near function end div overload object unit begin string on inline repeat until ' +\n    'destructor write message program with read initialization except default nil if case cdecl in ' +\n    'downto threadvar of try pascal const external constructor type public then implementation ' +\n    'finally published procedure absolute reintroduce operator as is abstract alias assembler ' +\n    'bitpacked break continue cppdecl cvar enumerator experimental platform deprecated ' +\n    'unimplemented dynamic export far16 forward generic helper implements interrupt iochecks ' +\n    'local name nodefault noreturn nostackframe oldfpccall otherwise saveregisters softfloat ' +\n    'specialize strict unaligned varargs ';\n  const COMMENT_MODES = [\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.COMMENT(/\\{/, /\\}/, {\n      relevance: 0\n    }),\n    hljs.COMMENT(/\\(\\*/, /\\*\\)/, {\n      relevance: 10\n    })\n  ];\n  const DIRECTIVE = {\n    className: 'meta',\n    variants: [\n      {\n        begin: /\\{\\$/,\n        end: /\\}/\n      },\n      {\n        begin: /\\(\\*\\$/,\n        end: /\\*\\)/\n      }\n    ]\n  };\n  const STRING = {\n    className: 'string',\n    begin: /'/,\n    end: /'/,\n    contains: [{\n      begin: /''/\n    }]\n  };\n  const NUMBER = {\n    className: 'number',\n    relevance: 0,\n    // Source: https://www.freepascal.org/docs-html/ref/refse6.html\n    variants: [\n      {\n        // Hexadecimal notation, e.g., $7F.\n        begin: '\\\\$[0-9A-Fa-f]+'\n      },\n      {\n        // Octal notation, e.g., &42.\n        begin: '&[0-7]+'\n      },\n      {\n        // Binary notation, e.g., %1010.\n        begin: '%[01]+'\n      }\n    ]\n  };\n  const CHAR_STRING = {\n    className: 'string',\n    begin: /(#\\d+)+/\n  };\n  const CLASS = {\n    begin: hljs.IDENT_RE + '\\\\s*=\\\\s*class\\\\s*\\\\(',\n    returnBegin: true,\n    contains: [hljs.TITLE_MODE]\n  };\n  const FUNCTION = {\n    className: 'function',\n    beginKeywords: 'function constructor destructor procedure',\n    end: /[:;]/,\n    keywords: 'function constructor|10 destructor|10 procedure|10',\n    contains: [\n      hljs.TITLE_MODE,\n      {\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: KEYWORDS,\n        contains: [\n          STRING,\n          CHAR_STRING,\n          DIRECTIVE\n        ].concat(COMMENT_MODES)\n      },\n      DIRECTIVE\n    ].concat(COMMENT_MODES)\n  };\n  return {\n    name: 'Delphi',\n    aliases: [\n      'dpr',\n      'dfm',\n      'pas',\n      'pascal',\n      'freepascal',\n      'lazarus',\n      'lpr',\n      'lfm'\n    ],\n    case_insensitive: true,\n    keywords: KEYWORDS,\n    illegal: /\"|\\$[G-Zg-z]|\\/\\*|<\\/|\\|/,\n    contains: [\n      STRING,\n      CHAR_STRING,\n      hljs.NUMBER_MODE,\n      NUMBER,\n      CLASS,\n      FUNCTION,\n      DIRECTIVE\n    ].concat(COMMENT_MODES)\n  };\n}\n\nmodule.exports = delphi;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA,SAASA,MAAT,CAAgBC,IAAhB,EAAsB;EACpB,MAAMC,QAAQ,GACZ,iGACA,6FADA,GAEA,+FAFA,GAGA,+FAHA,GAIA,gGAJA,GAKA,4FALA,GAMA,2FANA,GAOA,oFAPA,GAQA,0FARA,GASA,0FATA,GAUA,sCAXF;EAYA,MAAMC,aAAa,GAAG,CACpBF,IAAI,CAACG,mBADe,EAEpBH,IAAI,CAACI,OAAL,CAAa,IAAb,EAAmB,IAAnB,EAAyB;IACvBC,SAAS,EAAE;EADY,CAAzB,CAFoB,EAKpBL,IAAI,CAACI,OAAL,CAAa,MAAb,EAAqB,MAArB,EAA6B;IAC3BC,SAAS,EAAE;EADgB,CAA7B,CALoB,CAAtB;EASA,MAAMC,SAAS,GAAG;IAChBC,SAAS,EAAE,MADK;IAEhBC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,MADT;MAEEC,GAAG,EAAE;IAFP,CADQ,EAKR;MACED,KAAK,EAAE,QADT;MAEEC,GAAG,EAAE;IAFP,CALQ;EAFM,CAAlB;EAaA,MAAMC,MAAM,GAAG;IACbJ,SAAS,EAAE,QADE;IAEbE,KAAK,EAAE,GAFM;IAGbC,GAAG,EAAE,GAHQ;IAIbE,QAAQ,EAAE,CAAC;MACTH,KAAK,EAAE;IADE,CAAD;EAJG,CAAf;EAQA,MAAMI,MAAM,GAAG;IACbN,SAAS,EAAE,QADE;IAEbF,SAAS,EAAE,CAFE;IAGb;IACAG,QAAQ,EAAE,CACR;MACE;MACAC,KAAK,EAAE;IAFT,CADQ,EAKR;MACE;MACAA,KAAK,EAAE;IAFT,CALQ,EASR;MACE;MACAA,KAAK,EAAE;IAFT,CATQ;EAJG,CAAf;EAmBA,MAAMK,WAAW,GAAG;IAClBP,SAAS,EAAE,QADO;IAElBE,KAAK,EAAE;EAFW,CAApB;EAIA,MAAMM,KAAK,GAAG;IACZN,KAAK,EAAET,IAAI,CAACgB,QAAL,GAAgB,uBADX;IAEZC,WAAW,EAAE,IAFD;IAGZL,QAAQ,EAAE,CAACZ,IAAI,CAACkB,UAAN;EAHE,CAAd;EAKA,MAAMC,QAAQ,GAAG;IACfZ,SAAS,EAAE,UADI;IAEfa,aAAa,EAAE,2CAFA;IAGfV,GAAG,EAAE,MAHU;IAIfW,QAAQ,EAAE,oDAJK;IAKfT,QAAQ,EAAE,CACRZ,IAAI,CAACkB,UADG,EAER;MACEX,SAAS,EAAE,QADb;MAEEE,KAAK,EAAE,IAFT;MAGEC,GAAG,EAAE,IAHP;MAIEW,QAAQ,EAAEpB,QAJZ;MAKEW,QAAQ,EAAE,CACRD,MADQ,EAERG,WAFQ,EAGRR,SAHQ,EAIRgB,MAJQ,CAIDpB,aAJC;IALZ,CAFQ,EAaRI,SAbQ,EAcRgB,MAdQ,CAcDpB,aAdC;EALK,CAAjB;EAqBA,OAAO;IACLqB,IAAI,EAAE,QADD;IAELC,OAAO,EAAE,CACP,KADO,EAEP,KAFO,EAGP,KAHO,EAIP,QAJO,EAKP,YALO,EAMP,SANO,EAOP,KAPO,EAQP,KARO,CAFJ;IAYLC,gBAAgB,EAAE,IAZb;IAaLJ,QAAQ,EAAEpB,QAbL;IAcLyB,OAAO,EAAE,0BAdJ;IAeLd,QAAQ,EAAE,CACRD,MADQ,EAERG,WAFQ,EAGRd,IAAI,CAAC2B,WAHG,EAIRd,MAJQ,EAKRE,KALQ,EAMRI,QANQ,EAORb,SAPQ,EAQRgB,MARQ,CAQDpB,aARC;EAfL,CAAP;AAyBD;;AAED0B,MAAM,CAACC,OAAP,GAAiB9B,MAAjB"},"metadata":{},"sourceType":"script"}