{"ast":null,"code":"import { stringify, possiblyAsyncStringify } from '../../../utils/stringify.js';\nimport { VerbosityLevel } from '../configuration/VerbosityLevel.js';\nimport { ExecutionStatus } from '../reporter/ExecutionStatus.js';\n\nfunction formatHints(hints) {\n  if (hints.length === 1) {\n    return `Hint: ${hints[0]}`;\n  }\n\n  return hints.map((h, idx) => `Hint (${idx + 1}): ${h}`).join('\\n');\n}\n\nfunction formatFailures(failures, stringifyOne) {\n  return `Encountered failures were:\\n- ${failures.map(stringifyOne).join('\\n- ')}`;\n}\n\nfunction formatExecutionSummary(executionTrees, stringifyOne) {\n  const summaryLines = [];\n  const remainingTreesAndDepth = [];\n\n  for (const tree of executionTrees.slice().reverse()) {\n    remainingTreesAndDepth.push({\n      depth: 1,\n      tree\n    });\n  }\n\n  while (remainingTreesAndDepth.length !== 0) {\n    const currentTreeAndDepth = remainingTreesAndDepth.pop();\n    const currentTree = currentTreeAndDepth.tree;\n    const currentDepth = currentTreeAndDepth.depth;\n    const statusIcon = currentTree.status === ExecutionStatus.Success ? '\\x1b[32m\\u221A\\x1b[0m' : currentTree.status === ExecutionStatus.Failure ? '\\x1b[31m\\xD7\\x1b[0m' : '\\x1b[33m!\\x1b[0m';\n    const leftPadding = Array(currentDepth).join('. ');\n    summaryLines.push(`${leftPadding}${statusIcon} ${stringifyOne(currentTree.value)}`);\n\n    for (const tree of currentTree.children.slice().reverse()) {\n      remainingTreesAndDepth.push({\n        depth: currentDepth + 1,\n        tree\n      });\n    }\n  }\n\n  return `Execution summary:\\n${summaryLines.join('\\n')}`;\n}\n\nfunction preFormatTooManySkipped(out, stringifyOne) {\n  const message = `Failed to run property, too many pre-condition failures encountered\\n{ seed: ${out.seed} }\\n\\nRan ${out.numRuns} time(s)\\nSkipped ${out.numSkips} time(s)`;\n  let details = null;\n  const hints = ['Try to reduce the number of rejected values by combining map, flatMap and built-in arbitraries', 'Increase failure tolerance by setting maxSkipsPerRun to an higher value'];\n\n  if (out.verbose >= VerbosityLevel.VeryVerbose) {\n    details = formatExecutionSummary(out.executionSummary, stringifyOne);\n  } else {\n    hints.push('Enable verbose mode at level VeryVerbose in order to check all generated values and their associated status');\n  }\n\n  return {\n    message,\n    details,\n    hints\n  };\n}\n\nfunction preFormatFailure(out, stringifyOne) {\n  const message = `Property failed after ${out.numRuns} tests\\n{ seed: ${out.seed}, path: \"${out.counterexamplePath}\", endOnFailure: true }\\nCounterexample: ${stringifyOne(out.counterexample)}\\nShrunk ${out.numShrinks} time(s)\\nGot error: ${out.error}`;\n  let details = null;\n  const hints = [];\n\n  if (out.verbose >= VerbosityLevel.VeryVerbose) {\n    details = formatExecutionSummary(out.executionSummary, stringifyOne);\n  } else if (out.verbose === VerbosityLevel.Verbose) {\n    details = formatFailures(out.failures, stringifyOne);\n  } else {\n    hints.push('Enable verbose mode in order to have the list of all failing values encountered during the run');\n  }\n\n  return {\n    message,\n    details,\n    hints\n  };\n}\n\nfunction preFormatEarlyInterrupted(out, stringifyOne) {\n  const message = `Property interrupted after ${out.numRuns} tests\\n{ seed: ${out.seed} }`;\n  let details = null;\n  const hints = [];\n\n  if (out.verbose >= VerbosityLevel.VeryVerbose) {\n    details = formatExecutionSummary(out.executionSummary, stringifyOne);\n  } else {\n    hints.push('Enable verbose mode at level VeryVerbose in order to check all generated values and their associated status');\n  }\n\n  return {\n    message,\n    details,\n    hints\n  };\n}\n\nfunction defaultReportMessageInternal(out, stringifyOne) {\n  if (!out.failed) return;\n  const {\n    message,\n    details,\n    hints\n  } = out.counterexamplePath === null ? out.interrupted ? preFormatEarlyInterrupted(out, stringifyOne) : preFormatTooManySkipped(out, stringifyOne) : preFormatFailure(out, stringifyOne);\n  let errorMessage = message;\n  if (details != null) errorMessage += `\\n\\n${details}`;\n  if (hints.length > 0) errorMessage += `\\n\\n${formatHints(hints)}`;\n  return errorMessage;\n}\n\nfunction defaultReportMessage(out) {\n  return defaultReportMessageInternal(out, stringify);\n}\n\nasync function asyncDefaultReportMessage(out) {\n  const pendingStringifieds = [];\n\n  function stringifyOne(value) {\n    const stringified = possiblyAsyncStringify(value);\n\n    if (typeof stringified === 'string') {\n      return stringified;\n    }\n\n    pendingStringifieds.push(Promise.all([value, stringified]));\n    return '\\u2026';\n  }\n\n  const firstTryMessage = defaultReportMessageInternal(out, stringifyOne);\n\n  if (pendingStringifieds.length === 0) {\n    return firstTryMessage;\n  }\n\n  const registeredValues = new Map(await Promise.all(pendingStringifieds));\n\n  function stringifySecond(value) {\n    const asyncStringifiedIfRegistered = registeredValues.get(value);\n\n    if (asyncStringifiedIfRegistered !== undefined) {\n      return asyncStringifiedIfRegistered;\n    }\n\n    return stringify(value);\n  }\n\n  return defaultReportMessageInternal(out, stringifySecond);\n}\n\nfunction throwIfFailed(out) {\n  if (!out.failed) return;\n  throw new Error(defaultReportMessage(out));\n}\n\nasync function asyncThrowIfFailed(out) {\n  if (!out.failed) return;\n  throw new Error(await asyncDefaultReportMessage(out));\n}\n\nexport function reportRunDetails(out) {\n  if (out.runConfiguration.asyncReporter) return out.runConfiguration.asyncReporter(out);else if (out.runConfiguration.reporter) return out.runConfiguration.reporter(out);else return throwIfFailed(out);\n}\nexport async function asyncReportRunDetails(out) {\n  if (out.runConfiguration.asyncReporter) return out.runConfiguration.asyncReporter(out);else if (out.runConfiguration.reporter) return out.runConfiguration.reporter(out);else return asyncThrowIfFailed(out);\n}\nexport { defaultReportMessage, asyncDefaultReportMessage };","map":{"version":3,"names":["stringify","possiblyAsyncStringify","VerbosityLevel","ExecutionStatus","formatHints","hints","length","map","h","idx","join","formatFailures","failures","stringifyOne","formatExecutionSummary","executionTrees","summaryLines","remainingTreesAndDepth","tree","slice","reverse","push","depth","currentTreeAndDepth","pop","currentTree","currentDepth","statusIcon","status","Success","Failure","leftPadding","Array","value","children","preFormatTooManySkipped","out","message","seed","numRuns","numSkips","details","verbose","VeryVerbose","executionSummary","preFormatFailure","counterexamplePath","counterexample","numShrinks","error","Verbose","preFormatEarlyInterrupted","defaultReportMessageInternal","failed","interrupted","errorMessage","defaultReportMessage","asyncDefaultReportMessage","pendingStringifieds","stringified","Promise","all","firstTryMessage","registeredValues","Map","stringifySecond","asyncStringifiedIfRegistered","get","undefined","throwIfFailed","Error","asyncThrowIfFailed","reportRunDetails","runConfiguration","asyncReporter","reporter","asyncReportRunDetails"],"sources":["/Users/soheilvafaei/Documents/resume/Web3/web3 simple react web3 js/node_modules/fast-check/lib/esm/check/runner/utils/RunDetailsFormatter.js"],"sourcesContent":["import { stringify, possiblyAsyncStringify } from '../../../utils/stringify.js';\nimport { VerbosityLevel } from '../configuration/VerbosityLevel.js';\nimport { ExecutionStatus } from '../reporter/ExecutionStatus.js';\nfunction formatHints(hints) {\n    if (hints.length === 1) {\n        return `Hint: ${hints[0]}`;\n    }\n    return hints.map((h, idx) => `Hint (${idx + 1}): ${h}`).join('\\n');\n}\nfunction formatFailures(failures, stringifyOne) {\n    return `Encountered failures were:\\n- ${failures.map(stringifyOne).join('\\n- ')}`;\n}\nfunction formatExecutionSummary(executionTrees, stringifyOne) {\n    const summaryLines = [];\n    const remainingTreesAndDepth = [];\n    for (const tree of executionTrees.slice().reverse()) {\n        remainingTreesAndDepth.push({ depth: 1, tree });\n    }\n    while (remainingTreesAndDepth.length !== 0) {\n        const currentTreeAndDepth = remainingTreesAndDepth.pop();\n        const currentTree = currentTreeAndDepth.tree;\n        const currentDepth = currentTreeAndDepth.depth;\n        const statusIcon = currentTree.status === ExecutionStatus.Success\n            ? '\\x1b[32m\\u221A\\x1b[0m'\n            : currentTree.status === ExecutionStatus.Failure\n                ? '\\x1b[31m\\xD7\\x1b[0m'\n                : '\\x1b[33m!\\x1b[0m';\n        const leftPadding = Array(currentDepth).join('. ');\n        summaryLines.push(`${leftPadding}${statusIcon} ${stringifyOne(currentTree.value)}`);\n        for (const tree of currentTree.children.slice().reverse()) {\n            remainingTreesAndDepth.push({ depth: currentDepth + 1, tree });\n        }\n    }\n    return `Execution summary:\\n${summaryLines.join('\\n')}`;\n}\nfunction preFormatTooManySkipped(out, stringifyOne) {\n    const message = `Failed to run property, too many pre-condition failures encountered\\n{ seed: ${out.seed} }\\n\\nRan ${out.numRuns} time(s)\\nSkipped ${out.numSkips} time(s)`;\n    let details = null;\n    const hints = [\n        'Try to reduce the number of rejected values by combining map, flatMap and built-in arbitraries',\n        'Increase failure tolerance by setting maxSkipsPerRun to an higher value',\n    ];\n    if (out.verbose >= VerbosityLevel.VeryVerbose) {\n        details = formatExecutionSummary(out.executionSummary, stringifyOne);\n    }\n    else {\n        hints.push('Enable verbose mode at level VeryVerbose in order to check all generated values and their associated status');\n    }\n    return { message, details, hints };\n}\nfunction preFormatFailure(out, stringifyOne) {\n    const message = `Property failed after ${out.numRuns} tests\\n{ seed: ${out.seed}, path: \"${out.counterexamplePath}\", endOnFailure: true }\\nCounterexample: ${stringifyOne(out.counterexample)}\\nShrunk ${out.numShrinks} time(s)\\nGot error: ${out.error}`;\n    let details = null;\n    const hints = [];\n    if (out.verbose >= VerbosityLevel.VeryVerbose) {\n        details = formatExecutionSummary(out.executionSummary, stringifyOne);\n    }\n    else if (out.verbose === VerbosityLevel.Verbose) {\n        details = formatFailures(out.failures, stringifyOne);\n    }\n    else {\n        hints.push('Enable verbose mode in order to have the list of all failing values encountered during the run');\n    }\n    return { message, details, hints };\n}\nfunction preFormatEarlyInterrupted(out, stringifyOne) {\n    const message = `Property interrupted after ${out.numRuns} tests\\n{ seed: ${out.seed} }`;\n    let details = null;\n    const hints = [];\n    if (out.verbose >= VerbosityLevel.VeryVerbose) {\n        details = formatExecutionSummary(out.executionSummary, stringifyOne);\n    }\n    else {\n        hints.push('Enable verbose mode at level VeryVerbose in order to check all generated values and their associated status');\n    }\n    return { message, details, hints };\n}\nfunction defaultReportMessageInternal(out, stringifyOne) {\n    if (!out.failed)\n        return;\n    const { message, details, hints } = out.counterexamplePath === null\n        ? out.interrupted\n            ? preFormatEarlyInterrupted(out, stringifyOne)\n            : preFormatTooManySkipped(out, stringifyOne)\n        : preFormatFailure(out, stringifyOne);\n    let errorMessage = message;\n    if (details != null)\n        errorMessage += `\\n\\n${details}`;\n    if (hints.length > 0)\n        errorMessage += `\\n\\n${formatHints(hints)}`;\n    return errorMessage;\n}\nfunction defaultReportMessage(out) {\n    return defaultReportMessageInternal(out, stringify);\n}\nasync function asyncDefaultReportMessage(out) {\n    const pendingStringifieds = [];\n    function stringifyOne(value) {\n        const stringified = possiblyAsyncStringify(value);\n        if (typeof stringified === 'string') {\n            return stringified;\n        }\n        pendingStringifieds.push(Promise.all([value, stringified]));\n        return '\\u2026';\n    }\n    const firstTryMessage = defaultReportMessageInternal(out, stringifyOne);\n    if (pendingStringifieds.length === 0) {\n        return firstTryMessage;\n    }\n    const registeredValues = new Map(await Promise.all(pendingStringifieds));\n    function stringifySecond(value) {\n        const asyncStringifiedIfRegistered = registeredValues.get(value);\n        if (asyncStringifiedIfRegistered !== undefined) {\n            return asyncStringifiedIfRegistered;\n        }\n        return stringify(value);\n    }\n    return defaultReportMessageInternal(out, stringifySecond);\n}\nfunction throwIfFailed(out) {\n    if (!out.failed)\n        return;\n    throw new Error(defaultReportMessage(out));\n}\nasync function asyncThrowIfFailed(out) {\n    if (!out.failed)\n        return;\n    throw new Error(await asyncDefaultReportMessage(out));\n}\nexport function reportRunDetails(out) {\n    if (out.runConfiguration.asyncReporter)\n        return out.runConfiguration.asyncReporter(out);\n    else if (out.runConfiguration.reporter)\n        return out.runConfiguration.reporter(out);\n    else\n        return throwIfFailed(out);\n}\nexport async function asyncReportRunDetails(out) {\n    if (out.runConfiguration.asyncReporter)\n        return out.runConfiguration.asyncReporter(out);\n    else if (out.runConfiguration.reporter)\n        return out.runConfiguration.reporter(out);\n    else\n        return asyncThrowIfFailed(out);\n}\nexport { defaultReportMessage, asyncDefaultReportMessage };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}