{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decodeMagic = exports.decodeSpecial = void 0;\n\nconst debug_1 = __importDefault(require(\"debug\"));\n\nconst debug = (0, debug_1.default)(\"codec:special:decode\");\n\nconst Basic = __importStar(require(\"../../basic\"));\n\nconst Bytes = __importStar(require(\"../../bytes\"));\n\nconst Compiler = __importStar(require(\"../../compiler\"));\n\nconst Evm = __importStar(require(\"../../evm\"));\n\nfunction* decodeSpecial(dataType, pointer, info) {\n  if (dataType.typeClass === \"magic\") {\n    return yield* decodeMagic(dataType, pointer, info);\n  } else {\n    return yield* Basic.Decode.decodeBasic(dataType, pointer, info);\n  }\n}\n\nexports.decodeSpecial = decodeSpecial;\n\nfunction* decodeMagic(dataType, pointer, info) {\n  let {\n    state\n  } = info;\n\n  switch (pointer.special) {\n    case \"msg\":\n      return {\n        type: dataType,\n        kind: \"value\",\n        value: {\n          data: yield* Bytes.Decode.decodeBytes({\n            typeClass: \"bytes\",\n            kind: \"dynamic\",\n            location: \"calldata\"\n          }, {\n            location: \"calldata\",\n            start: 0,\n            length: state.calldata.length\n          }, info),\n          sig: yield* Basic.Decode.decodeBasic({\n            typeClass: \"bytes\",\n            kind: \"static\",\n            length: Evm.Utils.SELECTOR_SIZE\n          }, {\n            location: \"calldata\",\n            start: 0,\n            length: Evm.Utils.SELECTOR_SIZE\n          }, info),\n          sender: yield* Basic.Decode.decodeBasic(senderType(info.currentContext.compiler), {\n            location: \"special\",\n            special: \"sender\"\n          }, info),\n          value: yield* Basic.Decode.decodeBasic({\n            typeClass: \"uint\",\n            bits: 256\n          }, {\n            location: \"special\",\n            special: \"value\"\n          }, info)\n        }\n      };\n\n    case \"tx\":\n      return {\n        type: dataType,\n        kind: \"value\",\n        value: {\n          origin: yield* Basic.Decode.decodeBasic(senderType(info.currentContext.compiler), {\n            location: \"special\",\n            special: \"origin\"\n          }, info),\n          gasprice: yield* Basic.Decode.decodeBasic({\n            typeClass: \"uint\",\n            bits: 256\n          }, {\n            location: \"special\",\n            special: \"gasprice\"\n          }, info)\n        }\n      };\n\n    case \"block\":\n      let block = {\n        coinbase: yield* Basic.Decode.decodeBasic(coinbaseType(info.currentContext.compiler), {\n          location: \"special\",\n          special: \"coinbase\"\n        }, info)\n      }; //the other ones are all uint's, so let's handle them all at once; due to\n      //the lack of generator arrow functions, we do it by mutating block\n\n      const variables = [\"difficulty\", \"gaslimit\", \"number\", \"timestamp\"];\n\n      if (solidityVersionHasChainId(info.currentContext.compiler)) {\n        variables.push(\"chainid\");\n      }\n\n      if (solidityVersionHasBaseFee(info.currentContext.compiler)) {\n        variables.push(\"basefee\");\n      }\n\n      for (let variable of variables) {\n        block[variable] = yield* Basic.Decode.decodeBasic({\n          typeClass: \"uint\",\n          bits: 256\n        }, {\n          location: \"special\",\n          special: variable\n        }, info);\n      }\n\n      return {\n        type: dataType,\n        kind: \"value\",\n        value: block\n      };\n  }\n}\n\nexports.decodeMagic = decodeMagic;\n\nfunction senderType(compiler) {\n  switch (Compiler.Utils.solidityFamily(compiler)) {\n    case \"unknown\":\n    case \"pre-0.5.0\":\n      return {\n        typeClass: \"address\",\n        kind: \"general\"\n      };\n\n    case \"0.5.x\":\n      return {\n        typeClass: \"address\",\n        kind: \"specific\",\n        payable: true\n      };\n\n    default:\n      return {\n        typeClass: \"address\",\n        kind: \"specific\",\n        payable: false\n      };\n  }\n}\n\nfunction coinbaseType(compiler) {\n  switch (Compiler.Utils.solidityFamily(compiler)) {\n    case \"unknown\":\n    case \"pre-0.5.0\":\n      return {\n        typeClass: \"address\",\n        kind: \"general\"\n      };\n\n    case \"0.5.x\":\n    case \"0.8.x\":\n    case \"0.8.7+\":\n    case \"0.8.9+\":\n      return {\n        typeClass: \"address\",\n        kind: \"specific\",\n        payable: true\n      };\n  }\n}\n\nfunction solidityVersionHasChainId(compiler) {\n  switch (Compiler.Utils.solidityFamily(compiler)) {\n    case \"unknown\":\n    case \"pre-0.5.0\":\n    case \"0.5.x\":\n      return false;\n\n    default:\n      return true;\n  }\n}\n\nfunction solidityVersionHasBaseFee(compiler) {\n  switch (Compiler.Utils.solidityFamily(compiler)) {\n    case \"unknown\":\n    case \"pre-0.5.0\":\n    case \"0.5.x\":\n    case \"0.8.x\":\n      return false;\n\n    default:\n      return true;\n  }\n}","map":{"version":3,"mappings":"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","names":["debug","decodeSpecial","dataType","pointer","info","typeClass","decodeMagic","Basic","Decode","decodeBasic","exports","state","special","type","kind","value","data","Bytes","decodeBytes","location","start","length","calldata","sig","Evm","Utils","SELECTOR_SIZE","sender","senderType","currentContext","compiler","bits","origin","gasprice","block","coinbase","coinbaseType","variables","solidityVersionHasChainId","push","solidityVersionHasBaseFee","variable","Compiler","solidityFamily","payable"],"sourceRoot":"","sources":["../../../../lib/special/decode/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}