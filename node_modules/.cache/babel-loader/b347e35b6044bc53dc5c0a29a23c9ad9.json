{"ast":null,"code":"import { Value } from '../../../check/arbitrary/definition/Value.js';\nexport class SlicedBasedGenerator {\n  constructor(arb, mrng, slices, biasFactor) {\n    this.arb = arb;\n    this.mrng = mrng;\n    this.slices = slices;\n    this.biasFactor = biasFactor;\n    this.activeSliceIndex = 0;\n    this.nextIndexInSlice = 0;\n    this.lastIndexInSlice = -1;\n  }\n\n  attemptExact(targetLength) {\n    if (targetLength !== 0 && this.mrng.nextInt(1, this.biasFactor) === 1) {\n      const eligibleIndices = [];\n\n      for (let index = 0; index !== this.slices.length; ++index) {\n        const slice = this.slices[index];\n\n        if (slice.length === targetLength) {\n          eligibleIndices.push(index);\n        }\n      }\n\n      if (eligibleIndices.length === 0) {\n        return;\n      }\n\n      this.activeSliceIndex = eligibleIndices[this.mrng.nextInt(0, eligibleIndices.length - 1)];\n      this.nextIndexInSlice = 0;\n      this.lastIndexInSlice = targetLength - 1;\n    }\n  }\n\n  next() {\n    if (this.nextIndexInSlice <= this.lastIndexInSlice) {\n      return new Value(this.slices[this.activeSliceIndex][this.nextIndexInSlice++], undefined);\n    }\n\n    if (this.mrng.nextInt(1, this.biasFactor) !== 1) {\n      return this.arb.generate(this.mrng, this.biasFactor);\n    }\n\n    this.activeSliceIndex = this.mrng.nextInt(0, this.slices.length - 1);\n    const slice = this.slices[this.activeSliceIndex];\n\n    if (this.mrng.nextInt(1, this.biasFactor) !== 1) {\n      this.nextIndexInSlice = 1;\n      this.lastIndexInSlice = slice.length - 1;\n      return new Value(slice[0], undefined);\n    }\n\n    const rangeBoundaryA = this.mrng.nextInt(0, slice.length - 1);\n    const rangeBoundaryB = this.mrng.nextInt(0, slice.length - 1);\n    this.nextIndexInSlice = Math.min(rangeBoundaryA, rangeBoundaryB);\n    this.lastIndexInSlice = Math.max(rangeBoundaryA, rangeBoundaryB);\n    return new Value(slice[this.nextIndexInSlice++], undefined);\n  }\n\n}","map":{"version":3,"names":["Value","SlicedBasedGenerator","constructor","arb","mrng","slices","biasFactor","activeSliceIndex","nextIndexInSlice","lastIndexInSlice","attemptExact","targetLength","nextInt","eligibleIndices","index","length","slice","push","next","undefined","generate","rangeBoundaryA","rangeBoundaryB","Math","min","max"],"sources":["/Users/soheilvafaei/Documents/project/web/resume/ex7/node_modules/fast-check/lib/esm/arbitrary/_internals/implementations/SlicedBasedGenerator.js"],"sourcesContent":["import { Value } from '../../../check/arbitrary/definition/Value.js';\nexport class SlicedBasedGenerator {\n    constructor(arb, mrng, slices, biasFactor) {\n        this.arb = arb;\n        this.mrng = mrng;\n        this.slices = slices;\n        this.biasFactor = biasFactor;\n        this.activeSliceIndex = 0;\n        this.nextIndexInSlice = 0;\n        this.lastIndexInSlice = -1;\n    }\n    attemptExact(targetLength) {\n        if (targetLength !== 0 && this.mrng.nextInt(1, this.biasFactor) === 1) {\n            const eligibleIndices = [];\n            for (let index = 0; index !== this.slices.length; ++index) {\n                const slice = this.slices[index];\n                if (slice.length === targetLength) {\n                    eligibleIndices.push(index);\n                }\n            }\n            if (eligibleIndices.length === 0) {\n                return;\n            }\n            this.activeSliceIndex = eligibleIndices[this.mrng.nextInt(0, eligibleIndices.length - 1)];\n            this.nextIndexInSlice = 0;\n            this.lastIndexInSlice = targetLength - 1;\n        }\n    }\n    next() {\n        if (this.nextIndexInSlice <= this.lastIndexInSlice) {\n            return new Value(this.slices[this.activeSliceIndex][this.nextIndexInSlice++], undefined);\n        }\n        if (this.mrng.nextInt(1, this.biasFactor) !== 1) {\n            return this.arb.generate(this.mrng, this.biasFactor);\n        }\n        this.activeSliceIndex = this.mrng.nextInt(0, this.slices.length - 1);\n        const slice = this.slices[this.activeSliceIndex];\n        if (this.mrng.nextInt(1, this.biasFactor) !== 1) {\n            this.nextIndexInSlice = 1;\n            this.lastIndexInSlice = slice.length - 1;\n            return new Value(slice[0], undefined);\n        }\n        const rangeBoundaryA = this.mrng.nextInt(0, slice.length - 1);\n        const rangeBoundaryB = this.mrng.nextInt(0, slice.length - 1);\n        this.nextIndexInSlice = Math.min(rangeBoundaryA, rangeBoundaryB);\n        this.lastIndexInSlice = Math.max(rangeBoundaryA, rangeBoundaryB);\n        return new Value(slice[this.nextIndexInSlice++], undefined);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}