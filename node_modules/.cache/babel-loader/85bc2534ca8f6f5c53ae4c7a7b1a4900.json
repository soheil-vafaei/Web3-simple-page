{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.solidityFamily = void 0;\n\nconst debug_1 = __importDefault(require(\"debug\"));\n\nconst debug = (0, debug_1.default)(\"codec:compiler:utils\");\n\nconst semver_1 = __importDefault(require(\"semver\"));\n\nfunction solidityFamily(compiler) {\n  if (!compiler || compiler.name !== \"solc\") {\n    return \"unknown\";\n  }\n\n  if (semver_1.default.satisfies(compiler.version, \">=0.8.9\", {\n    includePrerelease: true\n  })) {\n    return \"0.8.9+\";\n  } else if (semver_1.default.satisfies(compiler.version, \">=0.8.7\", {\n    includePrerelease: true\n  })) {\n    return \"0.8.7+\";\n  } else if ( //see comment below about the weird-looking condition\n  semver_1.default.satisfies(compiler.version, \"~0.8 || >=0.8.0\", {\n    includePrerelease: true\n  })) {\n    return \"0.8.x\";\n  } else if (semver_1.default.satisfies(compiler.version, \"~0.5 || >=0.5.0\", {\n    includePrerelease: true\n  })) {\n    //what's with this weird-looking condition?  Well, I want to be sure to include\n    //prerelease versions of 0.5.0.  But isn't that what the includePrerelease option\n    //does?  No!  That just makes it so that prerelease versions can be included at\n    //all; without that, all prereleases of *any* version of Solidity can be excluded.\n    //A prerelease version of 0.5.0 still wouldn't satisfy >=0.5.0, so I added in ~0.5\n    //as well, which they do satisfy.\n    return \"0.5.x\";\n  } else {\n    return \"pre-0.5.0\";\n  }\n}\n\nexports.solidityFamily = solidityFamily;","map":{"version":3,"mappings":";;;;;;;;;;;;;AAAA;;AACA,MAAMA,KAAK,GAAG,qBAAY,sBAAZ,CAAd;;AAEA;;AAGA,SAAgBC,cAAhB,CAA+BC,QAA/B,EAAwD;EACtD,IAAI,CAACA,QAAD,IAAaA,QAAQ,CAACC,IAAT,KAAkB,MAAnC,EAA2C;IACzC,OAAO,SAAP;EACD;;EACD,IACEC,iBAAOC,SAAP,CAAiBH,QAAQ,CAACI,OAA1B,EAAmC,SAAnC,EAA8C;IAC5CC,iBAAiB,EAAE;EADyB,CAA9C,CADF,EAIE;IACA,OAAO,QAAP;EACD,CAND,MAMO,IACLH,iBAAOC,SAAP,CAAiBH,QAAQ,CAACI,OAA1B,EAAmC,SAAnC,EAA8C;IAC5CC,iBAAiB,EAAE;EADyB,CAA9C,CADK,EAIL;IACA,OAAO,QAAP;EACD,CANM,MAMA,KACL;EACAH,iBAAOC,SAAP,CAAiBH,QAAQ,CAACI,OAA1B,EAAmC,iBAAnC,EAAsD;IACpDC,iBAAiB,EAAE;EADiC,CAAtD,CAFK,EAKL;IACA,OAAO,OAAP;EACD,CAPM,MAOA,IACLH,iBAAOC,SAAP,CAAiBH,QAAQ,CAACI,OAA1B,EAAmC,iBAAnC,EAAsD;IACpDC,iBAAiB,EAAE;EADiC,CAAtD,CADK,EAIL;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,OAAP;EACD,CAZM,MAYA;IACL,OAAO,WAAP;EACD;AACF;;AAtCDC","names":["debug","solidityFamily","compiler","name","semver_1","satisfies","version","includePrerelease","exports"],"sourceRoot":"","sources":["../../../lib/compiler/utils.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}