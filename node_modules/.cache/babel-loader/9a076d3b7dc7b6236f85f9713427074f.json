{"ast":null,"code":"import { Parser } from './parser/index.js';\nexport { defaultTreeAdapter } from './tree-adapters/default.js';\nexport {\n/** @internal */\nParser } from './parser/index.js';\nexport { serialize, serializeOuter } from './serializer/index.js';\n/** @internal */\n\nimport * as _foreignContent from './common/foreign-content.js';\nexport { _foreignContent as foreignContent };\n/** @internal */\n\nimport * as _html from './common/html.js';\nexport { _html as html };\n/** @internal */\n\nimport * as _Token from './common/token.js';\nexport { _Token as Token };\n/** @internal */\n\nexport { Tokenizer, TokenizerMode } from './tokenizer/index.js'; // Shorthands\n\n/**\n * Parses an HTML string.\n *\n * @param html Input HTML string.\n * @param options Parsing options.\n * @returns Document\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * console.log(document.childNodes[1].tagName); //> 'html'\n *```\n */\n\nexport function parse(html, options) {\n  return Parser.parse(html, options);\n}\nexport function parseFragment(fragmentContext, html, options) {\n  if (typeof fragmentContext === 'string') {\n    options = html;\n    html = fragmentContext;\n    fragmentContext = null;\n  }\n\n  const parser = Parser.getFragmentParser(fragmentContext, options);\n  parser.tokenizer.write(html, true);\n  return parser.getFragment();\n}","map":{"version":3,"names":["Parser","defaultTreeAdapter","serialize","serializeOuter","foreignContent","html","Token","Tokenizer","TokenizerMode","parse","options","parseFragment","fragmentContext","parser","getFragmentParser","tokenizer","write","getFragment"],"sources":["/Users/soheilvafaei/Documents/project/web/web3/ex7/node_modules/cheerio/node_modules/parse5/dist/index.js"],"sourcesContent":["import { Parser } from './parser/index.js';\nexport { defaultTreeAdapter } from './tree-adapters/default.js';\nexport { /** @internal */ Parser } from './parser/index.js';\nexport { serialize, serializeOuter } from './serializer/index.js';\n/** @internal */\nexport * as foreignContent from './common/foreign-content.js';\n/** @internal */\nexport * as html from './common/html.js';\n/** @internal */\nexport * as Token from './common/token.js';\n/** @internal */\nexport { Tokenizer, TokenizerMode } from './tokenizer/index.js';\n// Shorthands\n/**\n * Parses an HTML string.\n *\n * @param html Input HTML string.\n * @param options Parsing options.\n * @returns Document\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * console.log(document.childNodes[1].tagName); //> 'html'\n *```\n */\nexport function parse(html, options) {\n    return Parser.parse(html, options);\n}\nexport function parseFragment(fragmentContext, html, options) {\n    if (typeof fragmentContext === 'string') {\n        options = html;\n        html = fragmentContext;\n        fragmentContext = null;\n    }\n    const parser = Parser.getFragmentParser(fragmentContext, options);\n    parser.tokenizer.write(html, true);\n    return parser.getFragment();\n}\n//# sourceMappingURL=index.js.map"],"mappings":"AAAA,SAASA,MAAT,QAAuB,mBAAvB;AACA,SAASC,kBAAT,QAAmC,4BAAnC;AACA;AAAS;AAAiBD,MAA1B,QAAwC,mBAAxC;AACA,SAASE,SAAT,EAAoBC,cAApB,QAA0C,uBAA1C;AACA;;iCACgC,6B;4BAApBC,c;AACZ;;uBACsB,kB;kBAAVC,I;AACZ;;wBACuB,mB;mBAAXC,K;AACZ;;AACA,SAASC,SAAT,EAAoBC,aAApB,QAAyC,sBAAzC,C,CACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,KAAT,CAAeJ,IAAf,EAAqBK,OAArB,EAA8B;EACjC,OAAOV,MAAM,CAACS,KAAP,CAAaJ,IAAb,EAAmBK,OAAnB,CAAP;AACH;AACD,OAAO,SAASC,aAAT,CAAuBC,eAAvB,EAAwCP,IAAxC,EAA8CK,OAA9C,EAAuD;EAC1D,IAAI,OAAOE,eAAP,KAA2B,QAA/B,EAAyC;IACrCF,OAAO,GAAGL,IAAV;IACAA,IAAI,GAAGO,eAAP;IACAA,eAAe,GAAG,IAAlB;EACH;;EACD,MAAMC,MAAM,GAAGb,MAAM,CAACc,iBAAP,CAAyBF,eAAzB,EAA0CF,OAA1C,CAAf;EACAG,MAAM,CAACE,SAAP,CAAiBC,KAAjB,CAAuBX,IAAvB,EAA6B,IAA7B;EACA,OAAOQ,MAAM,CAACI,WAAP,EAAP;AACH"},"metadata":{},"sourceType":"module"}