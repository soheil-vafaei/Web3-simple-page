{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Web3InterfaceAdapter = void 0;\n\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\n\nconst shim_1 = require(\"../../shim\");\n\nclass Web3InterfaceAdapter {\n  constructor() {\n    let {\n      provider,\n      networkType\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.web3 = new shim_1.Web3Shim({\n      provider,\n      networkType\n    });\n  }\n\n  getNetworkId() {\n    return this.web3.eth.net.getId();\n  }\n\n  getBlock(block) {\n    return this.web3.eth.getBlock(block);\n  }\n\n  getTransaction(tx) {\n    return this.web3.eth.getTransaction(tx);\n  }\n\n  getTransactionReceipt(tx) {\n    return this.web3.eth.getTransactionReceipt(tx);\n  }\n\n  getBalance(address) {\n    return this.web3.eth.getBalance(address);\n  }\n\n  getCode(address) {\n    return this.web3.eth.getCode(address);\n  }\n\n  getAccounts() {\n    return this.web3.eth.getAccounts();\n  }\n\n  estimateGas(transactionConfig) {\n    let stacktrace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    return __awaiter(this, void 0, void 0, function* () {\n      // web3 does not error gracefully when gas estimation fails due to a revert,\n      // so in cases where we want to get past this (debugging/stacktracing), we must\n      // catch the error and return null instead\n      if (stacktrace === true) {\n        try {\n          const gasEstimate = yield this.web3.eth.estimateGas(transactionConfig);\n          return gasEstimate;\n        } catch (_a) {\n          return null;\n        }\n      } else {\n        return this.web3.eth.estimateGas(transactionConfig);\n      }\n    });\n  }\n\n  getBlockNumber() {\n    return this.web3.eth.getBlockNumber();\n  }\n\n  getTransactionCostReport(receipt) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const tx = yield this.getTransaction(receipt.transactionHash);\n      const block = yield this.getBlock(receipt.blockNumber);\n      if (!block) return null;\n      const balance = yield this.getBalance(tx.from);\n      const gasPrice = new bn_js_1.default(tx.gasPrice);\n      const gas = new bn_js_1.default(receipt.gasUsed);\n      const value = new bn_js_1.default(tx.value);\n      const cost = gasPrice.mul(gas).add(value);\n      const timestamp = typeof block.timestamp === \"string\" ? parseInt(block.timestamp) : block.timestamp;\n      return {\n        timestamp,\n        from: tx.from,\n        balance: shim_1.Web3Shim.utils.fromWei(balance, \"ether\"),\n        gasUnit: \"gwei\",\n        gasPrice: shim_1.Web3Shim.utils.fromWei(gasPrice, \"gwei\"),\n        gas,\n        valueUnit: \"ETH\",\n        value: shim_1.Web3Shim.utils.fromWei(value, \"ether\"),\n        cost\n      };\n    });\n  }\n\n  displayCost(value) {\n    return shim_1.Web3Shim.utils.fromWei(value, \"ether\");\n  }\n\n}\n\nexports.Web3InterfaceAdapter = Web3InterfaceAdapter;","map":{"version":3,"mappings":"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","names":["Web3InterfaceAdapter","constructor","provider","networkType","web3","shim_1","getNetworkId","eth","net","getId","getBlock","block","getTransaction","tx","getTransactionReceipt","getBalance","address","getCode","getAccounts","estimateGas","transactionConfig","stacktrace","gasEstimate","getBlockNumber","getTransactionCostReport","receipt","transactionHash","blockNumber","balance","from","gasPrice","bn_js_1","gas","gasUsed","value","cost","mul","add","timestamp","parseInt","utils","fromWei","gasUnit","valueUnit","displayCost","exports"],"sourceRoot":"","sources":["../../../lib/adapter/web3/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}