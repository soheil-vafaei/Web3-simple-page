{"ast":null,"code":"/*\nLanguage: Makefile\nAuthor: Ivan Sagalaev <maniac@softwaremaniacs.org>\nContributors: Joël Porquet <joel@porquet.org>\nWebsite: https://www.gnu.org/software/make/manual/html_node/Introduction.html\nCategory: common\n*/\nfunction makefile(hljs) {\n  /* Variables: simple (eg $(var)) and special (eg $@) */\n  const VARIABLE = {\n    className: 'variable',\n    variants: [{\n      begin: '\\\\$\\\\(' + hljs.UNDERSCORE_IDENT_RE + '\\\\)',\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      begin: /\\$[@%<?\\^\\+\\*]/\n    }]\n  };\n  /* Quoted string with variables inside */\n\n  const QUOTE_STRING = {\n    className: 'string',\n    begin: /\"/,\n    end: /\"/,\n    contains: [hljs.BACKSLASH_ESCAPE, VARIABLE]\n  };\n  /* Function: $(func arg,...) */\n\n  const FUNC = {\n    className: 'variable',\n    begin: /\\$\\([\\w-]+\\s/,\n    end: /\\)/,\n    keywords: {\n      built_in: 'subst patsubst strip findstring filter filter-out sort ' + 'word wordlist firstword lastword dir notdir suffix basename ' + 'addsuffix addprefix join wildcard realpath abspath error warning ' + 'shell origin flavor foreach if or and call eval file value'\n    },\n    contains: [VARIABLE]\n  };\n  /* Variable assignment */\n\n  const ASSIGNMENT = {\n    begin: '^' + hljs.UNDERSCORE_IDENT_RE + '\\\\s*(?=[:+?]?=)'\n  };\n  /* Meta targets (.PHONY) */\n\n  const META = {\n    className: 'meta',\n    begin: /^\\.PHONY:/,\n    end: /$/,\n    keywords: {\n      $pattern: /[\\.\\w]+/,\n      'meta-keyword': '.PHONY'\n    }\n  };\n  /* Targets */\n\n  const TARGET = {\n    className: 'section',\n    begin: /^[^\\s]+:/,\n    end: /$/,\n    contains: [VARIABLE]\n  };\n  return {\n    name: 'Makefile',\n    aliases: ['mk', 'mak', 'make'],\n    keywords: {\n      $pattern: /[\\w-]+/,\n      keyword: 'define endef undefine ifdef ifndef ifeq ifneq else endif ' + 'include -include sinclude override export unexport private vpath'\n    },\n    contains: [hljs.HASH_COMMENT_MODE, VARIABLE, QUOTE_STRING, FUNC, ASSIGNMENT, META, TARGET]\n  };\n}\n\nmodule.exports = makefile;","map":{"version":3,"names":["makefile","hljs","VARIABLE","className","variants","begin","UNDERSCORE_IDENT_RE","contains","BACKSLASH_ESCAPE","QUOTE_STRING","end","FUNC","keywords","built_in","ASSIGNMENT","META","$pattern","TARGET","name","aliases","keyword","HASH_COMMENT_MODE","module","exports"],"sources":["/Users/soheilvafaei/Documents/project/web/resume/ex7/node_modules/highlight.js/lib/languages/makefile.js"],"sourcesContent":["/*\nLanguage: Makefile\nAuthor: Ivan Sagalaev <maniac@softwaremaniacs.org>\nContributors: Joël Porquet <joel@porquet.org>\nWebsite: https://www.gnu.org/software/make/manual/html_node/Introduction.html\nCategory: common\n*/\n\nfunction makefile(hljs) {\n  /* Variables: simple (eg $(var)) and special (eg $@) */\n  const VARIABLE = {\n    className: 'variable',\n    variants: [\n      {\n        begin: '\\\\$\\\\(' + hljs.UNDERSCORE_IDENT_RE + '\\\\)',\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      },\n      {\n        begin: /\\$[@%<?\\^\\+\\*]/\n      }\n    ]\n  };\n  /* Quoted string with variables inside */\n  const QUOTE_STRING = {\n    className: 'string',\n    begin: /\"/,\n    end: /\"/,\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      VARIABLE\n    ]\n  };\n  /* Function: $(func arg,...) */\n  const FUNC = {\n    className: 'variable',\n    begin: /\\$\\([\\w-]+\\s/,\n    end: /\\)/,\n    keywords: {\n      built_in:\n        'subst patsubst strip findstring filter filter-out sort ' +\n        'word wordlist firstword lastword dir notdir suffix basename ' +\n        'addsuffix addprefix join wildcard realpath abspath error warning ' +\n        'shell origin flavor foreach if or and call eval file value'\n    },\n    contains: [ VARIABLE ]\n  };\n  /* Variable assignment */\n  const ASSIGNMENT = {\n    begin: '^' + hljs.UNDERSCORE_IDENT_RE + '\\\\s*(?=[:+?]?=)'\n  };\n  /* Meta targets (.PHONY) */\n  const META = {\n    className: 'meta',\n    begin: /^\\.PHONY:/,\n    end: /$/,\n    keywords: {\n      $pattern: /[\\.\\w]+/,\n      'meta-keyword': '.PHONY'\n    }\n  };\n  /* Targets */\n  const TARGET = {\n    className: 'section',\n    begin: /^[^\\s]+:/,\n    end: /$/,\n    contains: [ VARIABLE ]\n  };\n  return {\n    name: 'Makefile',\n    aliases: [\n      'mk',\n      'mak',\n      'make',\n    ],\n    keywords: {\n      $pattern: /[\\w-]+/,\n      keyword: 'define endef undefine ifdef ifndef ifeq ifneq else endif ' +\n      'include -include sinclude override export unexport private vpath'\n    },\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      VARIABLE,\n      QUOTE_STRING,\n      FUNC,\n      ASSIGNMENT,\n      META,\n      TARGET\n    ]\n  };\n}\n\nmodule.exports = makefile;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,QAAT,CAAkBC,IAAlB,EAAwB;EACtB;EACA,MAAMC,QAAQ,GAAG;IACfC,SAAS,EAAE,UADI;IAEfC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,WAAWJ,IAAI,CAACK,mBAAhB,GAAsC,KAD/C;MAEEC,QAAQ,EAAE,CAAEN,IAAI,CAACO,gBAAP;IAFZ,CADQ,EAKR;MACEH,KAAK,EAAE;IADT,CALQ;EAFK,CAAjB;EAYA;;EACA,MAAMI,YAAY,GAAG;IACnBN,SAAS,EAAE,QADQ;IAEnBE,KAAK,EAAE,GAFY;IAGnBK,GAAG,EAAE,GAHc;IAInBH,QAAQ,EAAE,CACRN,IAAI,CAACO,gBADG,EAERN,QAFQ;EAJS,CAArB;EASA;;EACA,MAAMS,IAAI,GAAG;IACXR,SAAS,EAAE,UADA;IAEXE,KAAK,EAAE,cAFI;IAGXK,GAAG,EAAE,IAHM;IAIXE,QAAQ,EAAE;MACRC,QAAQ,EACN,4DACA,8DADA,GAEA,mEAFA,GAGA;IALM,CAJC;IAWXN,QAAQ,EAAE,CAAEL,QAAF;EAXC,CAAb;EAaA;;EACA,MAAMY,UAAU,GAAG;IACjBT,KAAK,EAAE,MAAMJ,IAAI,CAACK,mBAAX,GAAiC;EADvB,CAAnB;EAGA;;EACA,MAAMS,IAAI,GAAG;IACXZ,SAAS,EAAE,MADA;IAEXE,KAAK,EAAE,WAFI;IAGXK,GAAG,EAAE,GAHM;IAIXE,QAAQ,EAAE;MACRI,QAAQ,EAAE,SADF;MAER,gBAAgB;IAFR;EAJC,CAAb;EASA;;EACA,MAAMC,MAAM,GAAG;IACbd,SAAS,EAAE,SADE;IAEbE,KAAK,EAAE,UAFM;IAGbK,GAAG,EAAE,GAHQ;IAIbH,QAAQ,EAAE,CAAEL,QAAF;EAJG,CAAf;EAMA,OAAO;IACLgB,IAAI,EAAE,UADD;IAELC,OAAO,EAAE,CACP,IADO,EAEP,KAFO,EAGP,MAHO,CAFJ;IAOLP,QAAQ,EAAE;MACRI,QAAQ,EAAE,QADF;MAERI,OAAO,EAAE,8DACT;IAHQ,CAPL;IAYLb,QAAQ,EAAE,CACRN,IAAI,CAACoB,iBADG,EAERnB,QAFQ,EAGRO,YAHQ,EAIRE,IAJQ,EAKRG,UALQ,EAMRC,IANQ,EAORE,MAPQ;EAZL,CAAP;AAsBD;;AAEDK,MAAM,CAACC,OAAP,GAAiBvB,QAAjB"},"metadata":{},"sourceType":"script"}