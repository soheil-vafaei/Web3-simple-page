{"ast":null,"code":"export function addArrayIntToNew(arrayIntA, arrayIntB) {\n  if (arrayIntA.sign !== arrayIntB.sign) {\n    return substractArrayIntToNew(arrayIntA, {\n      sign: -arrayIntB.sign,\n      data: arrayIntB.data\n    });\n  }\n\n  var data = [];\n  var reminder = 0;\n  var dataA = arrayIntA.data;\n  var dataB = arrayIntB.data;\n\n  for (var indexA = dataA.length - 1, indexB = dataB.length - 1; indexA >= 0 || indexB >= 0; --indexA, --indexB) {\n    var vA = indexA >= 0 ? dataA[indexA] : 0;\n    var vB = indexB >= 0 ? dataB[indexB] : 0;\n    var current = vA + vB + reminder;\n    data.push(current >>> 0);\n    reminder = ~~(current / 0x100000000);\n  }\n\n  if (reminder !== 0) {\n    data.push(reminder);\n  }\n\n  return {\n    sign: arrayIntA.sign,\n    data: data.reverse()\n  };\n}\nexport function addOneToPositiveArrayInt(arrayInt) {\n  arrayInt.sign = 1;\n  var data = arrayInt.data;\n\n  for (var index = data.length - 1; index >= 0; --index) {\n    if (data[index] === 0xffffffff) {\n      data[index] = 0;\n    } else {\n      data[index] += 1;\n      return arrayInt;\n    }\n  }\n\n  data.unshift(1);\n  return arrayInt;\n}\n\nfunction isStrictlySmaller(dataA, dataB) {\n  var maxLength = Math.max(dataA.length, dataB.length);\n\n  for (var index = 0; index < maxLength; ++index) {\n    var indexA = index + dataA.length - maxLength;\n    var indexB = index + dataB.length - maxLength;\n    var vA = indexA >= 0 ? dataA[indexA] : 0;\n    var vB = indexB >= 0 ? dataB[indexB] : 0;\n    if (vA < vB) return true;\n    if (vA > vB) return false;\n  }\n\n  return false;\n}\n\nexport function substractArrayIntToNew(arrayIntA, arrayIntB) {\n  if (arrayIntA.sign !== arrayIntB.sign) {\n    return addArrayIntToNew(arrayIntA, {\n      sign: -arrayIntB.sign,\n      data: arrayIntB.data\n    });\n  }\n\n  var dataA = arrayIntA.data;\n  var dataB = arrayIntB.data;\n\n  if (isStrictlySmaller(dataA, dataB)) {\n    var out = substractArrayIntToNew(arrayIntB, arrayIntA);\n    out.sign = -out.sign;\n    return out;\n  }\n\n  var data = [];\n  var reminder = 0;\n\n  for (var indexA = dataA.length - 1, indexB = dataB.length - 1; indexA >= 0 || indexB >= 0; --indexA, --indexB) {\n    var vA = indexA >= 0 ? dataA[indexA] : 0;\n    var vB = indexB >= 0 ? dataB[indexB] : 0;\n    var current = vA - vB - reminder;\n    data.push(current >>> 0);\n    reminder = current < 0 ? 1 : 0;\n  }\n\n  return {\n    sign: arrayIntA.sign,\n    data: data.reverse()\n  };\n}\nexport function trimArrayIntInplace(arrayInt) {\n  var data = arrayInt.data;\n  var firstNonZero = 0;\n\n  for (; firstNonZero !== data.length && data[firstNonZero] === 0; ++firstNonZero) {}\n\n  if (firstNonZero === data.length) {\n    arrayInt.sign = 1;\n    arrayInt.data = [0];\n    return arrayInt;\n  }\n\n  data.splice(0, firstNonZero);\n  return arrayInt;\n}\nexport function fromNumberToArrayInt64(out, n) {\n  if (n < 0) {\n    var posN = -n;\n    out.sign = -1;\n    out.data[0] = ~~(posN / 0x100000000);\n    out.data[1] = posN >>> 0;\n  } else {\n    out.sign = 1;\n    out.data[0] = ~~(n / 0x100000000);\n    out.data[1] = n >>> 0;\n  }\n\n  return out;\n}\nexport function substractArrayInt64(out, arrayIntA, arrayIntB) {\n  var lowA = arrayIntA.data[1];\n  var highA = arrayIntA.data[0];\n  var signA = arrayIntA.sign;\n  var lowB = arrayIntB.data[1];\n  var highB = arrayIntB.data[0];\n  var signB = arrayIntB.sign;\n  out.sign = 1;\n\n  if (signA === 1 && signB === -1) {\n    var low_1 = lowA + lowB;\n    var high = highA + highB + (low_1 > 0xffffffff ? 1 : 0);\n    out.data[0] = high >>> 0;\n    out.data[1] = low_1 >>> 0;\n    return out;\n  }\n\n  var lowFirst = lowA;\n  var highFirst = highA;\n  var lowSecond = lowB;\n  var highSecond = highB;\n\n  if (signA === -1) {\n    lowFirst = lowB;\n    highFirst = highB;\n    lowSecond = lowA;\n    highSecond = highA;\n  }\n\n  var reminderLow = 0;\n  var low = lowFirst - lowSecond;\n\n  if (low < 0) {\n    reminderLow = 1;\n    low = low >>> 0;\n  }\n\n  out.data[0] = highFirst - highSecond - reminderLow;\n  out.data[1] = low;\n  return out;\n}","map":{"version":3,"names":["addArrayIntToNew","arrayIntA","arrayIntB","sign","substractArrayIntToNew","data","reminder","dataA","dataB","indexA","length","indexB","vA","vB","current","push","reverse","addOneToPositiveArrayInt","arrayInt","index","unshift","isStrictlySmaller","maxLength","Math","max","out","trimArrayIntInplace","firstNonZero","splice","fromNumberToArrayInt64","n","posN","substractArrayInt64","lowA","highA","signA","lowB","highB","signB","low_1","high","lowFirst","highFirst","lowSecond","highSecond","reminderLow","low"],"sources":["/Users/soheilvafaei/Documents/resume/Web3/web3 simple react web3 js/node_modules/pure-rand/lib/esm/distribution/internals/ArrayInt.js"],"sourcesContent":["export function addArrayIntToNew(arrayIntA, arrayIntB) {\n    if (arrayIntA.sign !== arrayIntB.sign) {\n        return substractArrayIntToNew(arrayIntA, { sign: -arrayIntB.sign, data: arrayIntB.data });\n    }\n    var data = [];\n    var reminder = 0;\n    var dataA = arrayIntA.data;\n    var dataB = arrayIntB.data;\n    for (var indexA = dataA.length - 1, indexB = dataB.length - 1; indexA >= 0 || indexB >= 0; --indexA, --indexB) {\n        var vA = indexA >= 0 ? dataA[indexA] : 0;\n        var vB = indexB >= 0 ? dataB[indexB] : 0;\n        var current = vA + vB + reminder;\n        data.push(current >>> 0);\n        reminder = ~~(current / 0x100000000);\n    }\n    if (reminder !== 0) {\n        data.push(reminder);\n    }\n    return { sign: arrayIntA.sign, data: data.reverse() };\n}\nexport function addOneToPositiveArrayInt(arrayInt) {\n    arrayInt.sign = 1;\n    var data = arrayInt.data;\n    for (var index = data.length - 1; index >= 0; --index) {\n        if (data[index] === 0xffffffff) {\n            data[index] = 0;\n        }\n        else {\n            data[index] += 1;\n            return arrayInt;\n        }\n    }\n    data.unshift(1);\n    return arrayInt;\n}\nfunction isStrictlySmaller(dataA, dataB) {\n    var maxLength = Math.max(dataA.length, dataB.length);\n    for (var index = 0; index < maxLength; ++index) {\n        var indexA = index + dataA.length - maxLength;\n        var indexB = index + dataB.length - maxLength;\n        var vA = indexA >= 0 ? dataA[indexA] : 0;\n        var vB = indexB >= 0 ? dataB[indexB] : 0;\n        if (vA < vB)\n            return true;\n        if (vA > vB)\n            return false;\n    }\n    return false;\n}\nexport function substractArrayIntToNew(arrayIntA, arrayIntB) {\n    if (arrayIntA.sign !== arrayIntB.sign) {\n        return addArrayIntToNew(arrayIntA, { sign: -arrayIntB.sign, data: arrayIntB.data });\n    }\n    var dataA = arrayIntA.data;\n    var dataB = arrayIntB.data;\n    if (isStrictlySmaller(dataA, dataB)) {\n        var out = substractArrayIntToNew(arrayIntB, arrayIntA);\n        out.sign = -out.sign;\n        return out;\n    }\n    var data = [];\n    var reminder = 0;\n    for (var indexA = dataA.length - 1, indexB = dataB.length - 1; indexA >= 0 || indexB >= 0; --indexA, --indexB) {\n        var vA = indexA >= 0 ? dataA[indexA] : 0;\n        var vB = indexB >= 0 ? dataB[indexB] : 0;\n        var current = vA - vB - reminder;\n        data.push(current >>> 0);\n        reminder = current < 0 ? 1 : 0;\n    }\n    return { sign: arrayIntA.sign, data: data.reverse() };\n}\nexport function trimArrayIntInplace(arrayInt) {\n    var data = arrayInt.data;\n    var firstNonZero = 0;\n    for (; firstNonZero !== data.length && data[firstNonZero] === 0; ++firstNonZero) { }\n    if (firstNonZero === data.length) {\n        arrayInt.sign = 1;\n        arrayInt.data = [0];\n        return arrayInt;\n    }\n    data.splice(0, firstNonZero);\n    return arrayInt;\n}\nexport function fromNumberToArrayInt64(out, n) {\n    if (n < 0) {\n        var posN = -n;\n        out.sign = -1;\n        out.data[0] = ~~(posN / 0x100000000);\n        out.data[1] = posN >>> 0;\n    }\n    else {\n        out.sign = 1;\n        out.data[0] = ~~(n / 0x100000000);\n        out.data[1] = n >>> 0;\n    }\n    return out;\n}\nexport function substractArrayInt64(out, arrayIntA, arrayIntB) {\n    var lowA = arrayIntA.data[1];\n    var highA = arrayIntA.data[0];\n    var signA = arrayIntA.sign;\n    var lowB = arrayIntB.data[1];\n    var highB = arrayIntB.data[0];\n    var signB = arrayIntB.sign;\n    out.sign = 1;\n    if (signA === 1 && signB === -1) {\n        var low_1 = lowA + lowB;\n        var high = highA + highB + (low_1 > 0xffffffff ? 1 : 0);\n        out.data[0] = high >>> 0;\n        out.data[1] = low_1 >>> 0;\n        return out;\n    }\n    var lowFirst = lowA;\n    var highFirst = highA;\n    var lowSecond = lowB;\n    var highSecond = highB;\n    if (signA === -1) {\n        lowFirst = lowB;\n        highFirst = highB;\n        lowSecond = lowA;\n        highSecond = highA;\n    }\n    var reminderLow = 0;\n    var low = lowFirst - lowSecond;\n    if (low < 0) {\n        reminderLow = 1;\n        low = low >>> 0;\n    }\n    out.data[0] = highFirst - highSecond - reminderLow;\n    out.data[1] = low;\n    return out;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}