{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toAddress = exports.equalData = exports.keccak256 = exports.ZERO_ADDRESS = exports.MAX_WORD = exports.PC_SIZE = exports.SELECTOR_SIZE = exports.ADDRESS_SIZE = exports.WORD_SIZE = void 0;\n\nconst debug_1 = __importDefault(require(\"debug\"));\n\nconst debug = (0, debug_1.default)(\"codec:evm:utils\");\n\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\n\nconst web3_utils_1 = __importDefault(require(\"web3-utils\"));\n\nconst Conversion = __importStar(require(\"../conversion\"));\n\nconst abi_utils_1 = require(\"@truffle/abi-utils\");\n\nexports.WORD_SIZE = 0x20;\nexports.ADDRESS_SIZE = 20;\nexports.SELECTOR_SIZE = abi_utils_1.ShortSelectorSize; //equals 4; function & error selectors, not event selectors\n\nexports.PC_SIZE = 4;\nexports.MAX_WORD = new bn_js_1.default(-1).toTwos(exports.WORD_SIZE * 8);\nexports.ZERO_ADDRESS = \"0x\" + \"00\".repeat(exports.ADDRESS_SIZE); //beware of using this for generic strings! (it's fine for bytestrings, or\n//strings representing numbers) if you want to use this on a generic string,\n//you should pass in {type: \"string\", value: theString} instead of the string\n//itself.\n//(maybe I should add a rawKeccak256 function, using sha3 instead of\n//soliditysha3?  not seeing the need atm though)\n\nfunction keccak256() {\n  // debug(\"args %o\", args);\n  const rawSha = web3_utils_1.default.soliditySha3(...arguments);\n  debug(\"rawSha %o\", rawSha);\n  let sha;\n\n  if (rawSha === null) {\n    sha = \"\"; //HACK, I guess?\n  } else {\n    sha = rawSha.replace(/0x/, \"\");\n  }\n\n  return Conversion.toBN(sha);\n}\n\nexports.keccak256 = keccak256; //checks if two bytearrays (which may be undefined) are equal.\n//does not consider undefined to be equal to itself.\n\nfunction equalData(bytes1, bytes2) {\n  if (!bytes1 || !bytes2) {\n    return false;\n  }\n\n  if (bytes1.length !== bytes2.length) {\n    return false;\n  }\n\n  for (let i = 0; i < bytes1.length; i++) {\n    if (bytes1[i] !== bytes2[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexports.equalData = equalData;\n\nfunction toAddress(bytes) {\n  if (typeof bytes === \"string\") {\n    //in this case, we can do some simple string manipulation and\n    //then pass to web3\n    let hex = bytes; //just renaming for clarity\n\n    if (hex.startsWith(\"0x\")) {\n      hex = hex.slice(2);\n    }\n\n    if (hex.length < 2 * exports.ADDRESS_SIZE) {\n      hex = hex.padStart(2 * exports.ADDRESS_SIZE, \"0\");\n    }\n\n    if (hex.length > 2 * exports.ADDRESS_SIZE) {\n      hex = \"0x\" + hex.slice(hex.length - 2 * exports.ADDRESS_SIZE);\n    }\n\n    return web3_utils_1.default.toChecksumAddress(hex);\n  } //otherwise, we're in the Uint8Array case, which we can't fully handle ourself\n  //truncate *on left* to 20 bytes\n\n\n  if (bytes.length > exports.ADDRESS_SIZE) {\n    bytes = bytes.slice(bytes.length - exports.ADDRESS_SIZE, bytes.length);\n  } //now, convert to hex string and apply checksum case that second argument\n  //(which ensures it's padded to 20 bytes) shouldn't actually ever be\n  //needed, but I'll be safe and include it\n\n\n  return web3_utils_1.default.toChecksumAddress(Conversion.toHexString(bytes, exports.ADDRESS_SIZE));\n}\n\nexports.toAddress = toAddress;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA,MAAMA,KAAK,GAAG,qBAAY,iBAAZ,CAAd;;AAEA;;AACA;;AACA;;AACA;;AAEaC,oBAAY,IAAZ;AACAA,uBAAe,EAAf;AACAA,wBAAgBC,6BAAhB,C,CAAmC;;AACnCD,kBAAU,CAAV;AACAA,mBAAW,IAAIE,eAAJ,CAAO,CAAC,CAAR,EAAWC,MAAX,CAAkBH,oBAAY,CAA9B,CAAX;AACAA,uBAAe,OAAO,KAAKI,MAAL,CAAYJ,oBAAZ,CAAtB,C,CAEb;AACA;AACA;AACA;AACA;AACA;;AACA,SAAgBK,SAAhB,GAAwC;EACtC;EAEA,MAAMC,MAAM,GAAkBC,qBAAUC,YAAV,CAAuB,YAAvB,CAA9B;EACAT,KAAK,CAAC,WAAD,EAAcO,MAAd,CAAL;EACA,IAAIG,GAAJ;;EACA,IAAIH,MAAM,KAAK,IAAf,EAAqB;IACnBG,GAAG,GAAG,EAAN,CADmB,CACT;EACX,CAFD,MAEO;IACLA,GAAG,GAAGH,MAAM,CAACI,OAAP,CAAe,IAAf,EAAqB,EAArB,CAAN;EACD;;EACD,OAAOC,UAAU,CAACC,IAAX,CAAgBH,GAAhB,CAAP;AACD;;AAZDT,8B,CAcA;AACA;;AACA,SAAgBa,SAAhB,CACEC,MADF,EAEEC,MAFF,EAEgC;EAE9B,IAAI,CAACD,MAAD,IAAW,CAACC,MAAhB,EAAwB;IACtB,OAAO,KAAP;EACD;;EACD,IAAID,MAAM,CAACE,MAAP,KAAkBD,MAAM,CAACC,MAA7B,EAAqC;IACnC,OAAO,KAAP;EACD;;EACD,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,MAAM,CAACE,MAA3B,EAAmCC,CAAC,EAApC,EAAwC;IACtC,IAAIH,MAAM,CAACG,CAAD,CAAN,KAAcF,MAAM,CAACE,CAAD,CAAxB,EAA6B;MAC3B,OAAO,KAAP;IACD;EACF;;EACD,OAAO,IAAP;AACD;;AAhBDjB;;AAkBA,SAAgBkB,SAAhB,CAA0BC,KAA1B,EAAoD;EAClD,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;IAC7B;IACA;IACA,IAAIC,GAAG,GAAGD,KAAV,CAH6B,CAGZ;;IACjB,IAAIC,GAAG,CAACC,UAAJ,CAAe,IAAf,CAAJ,EAA0B;MACxBD,GAAG,GAAGA,GAAG,CAACE,KAAJ,CAAU,CAAV,CAAN;IACD;;IACD,IAAIF,GAAG,CAACJ,MAAJ,GAAa,IAAIhB,oBAArB,EAAmC;MACjCoB,GAAG,GAAGA,GAAG,CAACG,QAAJ,CAAa,IAAIvB,oBAAjB,EAA+B,GAA/B,CAAN;IACD;;IACD,IAAIoB,GAAG,CAACJ,MAAJ,GAAa,IAAIhB,oBAArB,EAAmC;MACjCoB,GAAG,GAAG,OAAOA,GAAG,CAACE,KAAJ,CAAUF,GAAG,CAACJ,MAAJ,GAAa,IAAIhB,oBAA3B,CAAb;IACD;;IACD,OAAOO,qBAAUiB,iBAAV,CAA4BJ,GAA5B,CAAP;EACD,CAfiD,CAgBlD;EAEA;;;EACA,IAAID,KAAK,CAACH,MAAN,GAAehB,oBAAnB,EAAiC;IAC/BmB,KAAK,GAAGA,KAAK,CAACG,KAAN,CAAYH,KAAK,CAACH,MAAN,GAAehB,oBAA3B,EAAyCmB,KAAK,CAACH,MAA/C,CAAR;EACD,CArBiD,CAuBlD;EACA;EACA;;;EACA,OAAOT,qBAAUiB,iBAAV,CACLb,UAAU,CAACc,WAAX,CAAuBN,KAAvB,EAA8BnB,oBAA9B,CADK,CAAP;AAGD;;AA7BDA","names":["debug","exports","abi_utils_1","bn_js_1","toTwos","repeat","keccak256","rawSha","web3_utils_1","soliditySha3","sha","replace","Conversion","toBN","equalData","bytes1","bytes2","length","i","toAddress","bytes","hex","startsWith","slice","padStart","toChecksumAddress","toHexString"],"sourceRoot":"","sources":["../../../lib/evm/utils.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}