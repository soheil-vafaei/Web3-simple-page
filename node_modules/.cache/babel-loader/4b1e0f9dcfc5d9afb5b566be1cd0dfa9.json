{"ast":null,"code":"export const toStringMethod = Symbol('fast-check/toStringMethod');\nexport function hasToStringMethod(instance) {\n  return instance !== null && (typeof instance === 'object' || typeof instance === 'function') && toStringMethod in instance && typeof instance[toStringMethod] === 'function';\n}\nexport const asyncToStringMethod = Symbol('fast-check/asyncToStringMethod');\nexport function hasAsyncToStringMethod(instance) {\n  return instance !== null && (typeof instance === 'object' || typeof instance === 'function') && asyncToStringMethod in instance && typeof instance[asyncToStringMethod] === 'function';\n}\nconst findSymbolNameRegex = /^Symbol\\((.*)\\)$/;\n\nfunction getSymbolDescription(s) {\n  if (s.description !== undefined) return s.description;\n  const m = findSymbolNameRegex.exec(String(s));\n  return m && m[1].length ? m[1] : null;\n}\n\nfunction stringifyNumber(numValue) {\n  switch (numValue) {\n    case 0:\n      return 1 / numValue === Number.NEGATIVE_INFINITY ? '-0' : '0';\n\n    case Number.NEGATIVE_INFINITY:\n      return 'Number.NEGATIVE_INFINITY';\n\n    case Number.POSITIVE_INFINITY:\n      return 'Number.POSITIVE_INFINITY';\n\n    default:\n      return numValue === numValue ? String(numValue) : 'Number.NaN';\n  }\n}\n\nfunction isSparseArray(arr) {\n  let previousNumberedIndex = -1;\n\n  for (const index in arr) {\n    const numberedIndex = Number(index);\n    if (numberedIndex !== previousNumberedIndex + 1) return true;\n    previousNumberedIndex = numberedIndex;\n  }\n\n  return previousNumberedIndex + 1 !== arr.length;\n}\n\nexport function stringifyInternal(value, previousValues, getAsyncContent) {\n  const currentValues = previousValues.concat([value]);\n\n  if (typeof value === 'object') {\n    if (previousValues.indexOf(value) !== -1) {\n      return '[cyclic]';\n    }\n  }\n\n  if (hasAsyncToStringMethod(value)) {\n    const content = getAsyncContent(value);\n\n    if (content.state === 'fulfilled') {\n      return content.value;\n    }\n  }\n\n  if (hasToStringMethod(value)) {\n    try {\n      return value[toStringMethod]();\n    } catch (err) {}\n  }\n\n  switch (Object.prototype.toString.call(value)) {\n    case '[object Array]':\n      {\n        const arr = value;\n\n        if (arr.length >= 50 && isSparseArray(arr)) {\n          const assignments = [];\n\n          for (const index in arr) {\n            if (!Number.isNaN(Number(index))) assignments.push(`${index}:${stringifyInternal(arr[index], currentValues, getAsyncContent)}`);\n          }\n\n          return assignments.length !== 0 ? `Object.assign(Array(${arr.length}),{${assignments.join(',')}})` : `Array(${arr.length})`;\n        }\n\n        const stringifiedArray = arr.map(v => stringifyInternal(v, currentValues, getAsyncContent)).join(',');\n        return arr.length === 0 || arr.length - 1 in arr ? `[${stringifiedArray}]` : `[${stringifiedArray},]`;\n      }\n\n    case '[object BigInt]':\n      return `${value}n`;\n\n    case '[object Boolean]':\n      return typeof value === 'boolean' ? JSON.stringify(value) : `new Boolean(${JSON.stringify(value)})`;\n\n    case '[object Date]':\n      {\n        const d = value;\n        return Number.isNaN(d.getTime()) ? `new Date(NaN)` : `new Date(${JSON.stringify(d.toISOString())})`;\n      }\n\n    case '[object Map]':\n      return `new Map(${stringifyInternal(Array.from(value), currentValues, getAsyncContent)})`;\n\n    case '[object Null]':\n      return `null`;\n\n    case '[object Number]':\n      return typeof value === 'number' ? stringifyNumber(value) : `new Number(${stringifyNumber(Number(value))})`;\n\n    case '[object Object]':\n      {\n        try {\n          const toStringAccessor = value.toString;\n\n          if (typeof toStringAccessor === 'function' && toStringAccessor !== Object.prototype.toString) {\n            return value.toString();\n          }\n        } catch (err) {\n          return '[object Object]';\n        }\n\n        const mapper = k => `${k === '__proto__' ? '[\"__proto__\"]' : typeof k === 'symbol' ? `[${stringifyInternal(k, currentValues, getAsyncContent)}]` : JSON.stringify(k)}:${stringifyInternal(value[k], currentValues, getAsyncContent)}`;\n\n        const stringifiedProperties = [...Object.keys(value).map(mapper), ...Object.getOwnPropertySymbols(value).filter(s => {\n          const descriptor = Object.getOwnPropertyDescriptor(value, s);\n          return descriptor && descriptor.enumerable;\n        }).map(mapper)];\n        const rawRepr = '{' + stringifiedProperties.join(',') + '}';\n\n        if (Object.getPrototypeOf(value) === null) {\n          return rawRepr === '{}' ? 'Object.create(null)' : `Object.assign(Object.create(null),${rawRepr})`;\n        }\n\n        return rawRepr;\n      }\n\n    case '[object Set]':\n      return `new Set(${stringifyInternal(Array.from(value), currentValues, getAsyncContent)})`;\n\n    case '[object String]':\n      return typeof value === 'string' ? JSON.stringify(value) : `new String(${JSON.stringify(value)})`;\n\n    case '[object Symbol]':\n      {\n        const s = value;\n\n        if (Symbol.keyFor(s) !== undefined) {\n          return `Symbol.for(${JSON.stringify(Symbol.keyFor(s))})`;\n        }\n\n        const desc = getSymbolDescription(s);\n\n        if (desc === null) {\n          return 'Symbol()';\n        }\n\n        const knownSymbol = desc.startsWith('Symbol.') && Symbol[desc.substring(7)];\n        return s === knownSymbol ? desc : `Symbol(${JSON.stringify(desc)})`;\n      }\n\n    case '[object Promise]':\n      {\n        const promiseContent = getAsyncContent(value);\n\n        switch (promiseContent.state) {\n          case 'fulfilled':\n            return `Promise.resolve(${stringifyInternal(promiseContent.value, currentValues, getAsyncContent)})`;\n\n          case 'rejected':\n            return `Promise.reject(${stringifyInternal(promiseContent.value, currentValues, getAsyncContent)})`;\n\n          case 'pending':\n            return `new Promise(() => {/*pending*/})`;\n\n          case 'unknown':\n          default:\n            return `new Promise(() => {/*unknown*/})`;\n        }\n      }\n\n    case '[object Error]':\n      if (value instanceof Error) {\n        return `new Error(${stringifyInternal(value.message, currentValues, getAsyncContent)})`;\n      }\n\n      break;\n\n    case '[object Undefined]':\n      return `undefined`;\n\n    case '[object Int8Array]':\n    case '[object Uint8Array]':\n    case '[object Uint8ClampedArray]':\n    case '[object Int16Array]':\n    case '[object Uint16Array]':\n    case '[object Int32Array]':\n    case '[object Uint32Array]':\n    case '[object Float32Array]':\n    case '[object Float64Array]':\n    case '[object BigInt64Array]':\n    case '[object BigUint64Array]':\n      {\n        if (typeof Buffer !== 'undefined' && typeof Buffer.isBuffer === 'function' && Buffer.isBuffer(value)) {\n          return `Buffer.from(${stringifyInternal(Array.from(value.values()), currentValues, getAsyncContent)})`;\n        }\n\n        const valuePrototype = Object.getPrototypeOf(value);\n        const className = valuePrototype && valuePrototype.constructor && valuePrototype.constructor.name;\n\n        if (typeof className === 'string') {\n          const typedArray = value;\n          const valuesFromTypedArr = typedArray.values();\n          return `${className}.from(${stringifyInternal(Array.from(valuesFromTypedArr), currentValues, getAsyncContent)})`;\n        }\n\n        break;\n      }\n  }\n\n  try {\n    return value.toString();\n  } catch (_a) {\n    return Object.prototype.toString.call(value);\n  }\n}\nexport function stringify(value) {\n  return stringifyInternal(value, [], () => ({\n    state: 'unknown',\n    value: undefined\n  }));\n}\nexport function possiblyAsyncStringify(value) {\n  const stillPendingMarker = Symbol();\n  const pendingPromisesForCache = [];\n  const cache = new Map();\n\n  function createDelay0() {\n    let handleId = null;\n\n    const cancel = () => {\n      if (handleId !== null) {\n        clearTimeout(handleId);\n      }\n    };\n\n    const delay = new Promise(resolve => {\n      handleId = setTimeout(() => {\n        handleId = null;\n        resolve(stillPendingMarker);\n      }, 0);\n    });\n    return {\n      delay,\n      cancel\n    };\n  }\n\n  const unknownState = {\n    state: 'unknown',\n    value: undefined\n  };\n\n  const getAsyncContent = function getAsyncContent(data) {\n    const cacheKey = data;\n\n    if (cache.has(cacheKey)) {\n      return cache.get(cacheKey);\n    }\n\n    const delay0 = createDelay0();\n    const p = asyncToStringMethod in data ? Promise.resolve().then(() => data[asyncToStringMethod]()) : data;\n    p.catch(() => {});\n    pendingPromisesForCache.push(Promise.race([p, delay0.delay]).then(successValue => {\n      if (successValue === stillPendingMarker) cache.set(cacheKey, {\n        state: 'pending',\n        value: undefined\n      });else cache.set(cacheKey, {\n        state: 'fulfilled',\n        value: successValue\n      });\n      delay0.cancel();\n    }, errorValue => {\n      cache.set(cacheKey, {\n        state: 'rejected',\n        value: errorValue\n      });\n      delay0.cancel();\n    }));\n    cache.set(cacheKey, unknownState);\n    return unknownState;\n  };\n\n  function loop() {\n    const stringifiedValue = stringifyInternal(value, [], getAsyncContent);\n\n    if (pendingPromisesForCache.length === 0) {\n      return stringifiedValue;\n    }\n\n    return Promise.all(pendingPromisesForCache.splice(0)).then(loop);\n  }\n\n  return loop();\n}\nexport async function asyncStringify(value) {\n  return Promise.resolve(possiblyAsyncStringify(value));\n}","map":{"version":3,"names":["toStringMethod","Symbol","hasToStringMethod","instance","asyncToStringMethod","hasAsyncToStringMethod","findSymbolNameRegex","getSymbolDescription","s","description","undefined","m","exec","String","length","stringifyNumber","numValue","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","isSparseArray","arr","previousNumberedIndex","index","numberedIndex","stringifyInternal","value","previousValues","getAsyncContent","currentValues","concat","indexOf","content","state","err","Object","prototype","toString","call","assignments","isNaN","push","join","stringifiedArray","map","v","JSON","stringify","d","getTime","toISOString","Array","from","toStringAccessor","mapper","k","stringifiedProperties","keys","getOwnPropertySymbols","filter","descriptor","getOwnPropertyDescriptor","enumerable","rawRepr","getPrototypeOf","keyFor","desc","knownSymbol","startsWith","substring","promiseContent","Error","message","Buffer","isBuffer","values","valuePrototype","className","constructor","name","typedArray","valuesFromTypedArr","_a","possiblyAsyncStringify","stillPendingMarker","pendingPromisesForCache","cache","Map","createDelay0","handleId","cancel","clearTimeout","delay","Promise","resolve","setTimeout","unknownState","data","cacheKey","has","get","delay0","p","then","catch","race","successValue","set","errorValue","loop","stringifiedValue","all","splice","asyncStringify"],"sources":["/Users/soheilvafaei/Documents/project/web/web3/ex7/node_modules/fast-check/lib/esm/utils/stringify.js"],"sourcesContent":["export const toStringMethod = Symbol('fast-check/toStringMethod');\nexport function hasToStringMethod(instance) {\n    return (instance !== null &&\n        (typeof instance === 'object' || typeof instance === 'function') &&\n        toStringMethod in instance &&\n        typeof instance[toStringMethod] === 'function');\n}\nexport const asyncToStringMethod = Symbol('fast-check/asyncToStringMethod');\nexport function hasAsyncToStringMethod(instance) {\n    return (instance !== null &&\n        (typeof instance === 'object' || typeof instance === 'function') &&\n        asyncToStringMethod in instance &&\n        typeof instance[asyncToStringMethod] === 'function');\n}\nconst findSymbolNameRegex = /^Symbol\\((.*)\\)$/;\nfunction getSymbolDescription(s) {\n    if (s.description !== undefined)\n        return s.description;\n    const m = findSymbolNameRegex.exec(String(s));\n    return m && m[1].length ? m[1] : null;\n}\nfunction stringifyNumber(numValue) {\n    switch (numValue) {\n        case 0:\n            return 1 / numValue === Number.NEGATIVE_INFINITY ? '-0' : '0';\n        case Number.NEGATIVE_INFINITY:\n            return 'Number.NEGATIVE_INFINITY';\n        case Number.POSITIVE_INFINITY:\n            return 'Number.POSITIVE_INFINITY';\n        default:\n            return numValue === numValue ? String(numValue) : 'Number.NaN';\n    }\n}\nfunction isSparseArray(arr) {\n    let previousNumberedIndex = -1;\n    for (const index in arr) {\n        const numberedIndex = Number(index);\n        if (numberedIndex !== previousNumberedIndex + 1)\n            return true;\n        previousNumberedIndex = numberedIndex;\n    }\n    return previousNumberedIndex + 1 !== arr.length;\n}\nexport function stringifyInternal(value, previousValues, getAsyncContent) {\n    const currentValues = previousValues.concat([value]);\n    if (typeof value === 'object') {\n        if (previousValues.indexOf(value) !== -1) {\n            return '[cyclic]';\n        }\n    }\n    if (hasAsyncToStringMethod(value)) {\n        const content = getAsyncContent(value);\n        if (content.state === 'fulfilled') {\n            return content.value;\n        }\n    }\n    if (hasToStringMethod(value)) {\n        try {\n            return value[toStringMethod]();\n        }\n        catch (err) {\n        }\n    }\n    switch (Object.prototype.toString.call(value)) {\n        case '[object Array]': {\n            const arr = value;\n            if (arr.length >= 50 && isSparseArray(arr)) {\n                const assignments = [];\n                for (const index in arr) {\n                    if (!Number.isNaN(Number(index)))\n                        assignments.push(`${index}:${stringifyInternal(arr[index], currentValues, getAsyncContent)}`);\n                }\n                return assignments.length !== 0\n                    ? `Object.assign(Array(${arr.length}),{${assignments.join(',')}})`\n                    : `Array(${arr.length})`;\n            }\n            const stringifiedArray = arr.map((v) => stringifyInternal(v, currentValues, getAsyncContent)).join(',');\n            return arr.length === 0 || arr.length - 1 in arr ? `[${stringifiedArray}]` : `[${stringifiedArray},]`;\n        }\n        case '[object BigInt]':\n            return `${value}n`;\n        case '[object Boolean]':\n            return typeof value === 'boolean' ? JSON.stringify(value) : `new Boolean(${JSON.stringify(value)})`;\n        case '[object Date]': {\n            const d = value;\n            return Number.isNaN(d.getTime()) ? `new Date(NaN)` : `new Date(${JSON.stringify(d.toISOString())})`;\n        }\n        case '[object Map]':\n            return `new Map(${stringifyInternal(Array.from(value), currentValues, getAsyncContent)})`;\n        case '[object Null]':\n            return `null`;\n        case '[object Number]':\n            return typeof value === 'number' ? stringifyNumber(value) : `new Number(${stringifyNumber(Number(value))})`;\n        case '[object Object]': {\n            try {\n                const toStringAccessor = value.toString;\n                if (typeof toStringAccessor === 'function' && toStringAccessor !== Object.prototype.toString) {\n                    return value.toString();\n                }\n            }\n            catch (err) {\n                return '[object Object]';\n            }\n            const mapper = (k) => `${k === '__proto__'\n                ? '[\"__proto__\"]'\n                : typeof k === 'symbol'\n                    ? `[${stringifyInternal(k, currentValues, getAsyncContent)}]`\n                    : JSON.stringify(k)}:${stringifyInternal(value[k], currentValues, getAsyncContent)}`;\n            const stringifiedProperties = [\n                ...Object.keys(value).map(mapper),\n                ...Object.getOwnPropertySymbols(value)\n                    .filter((s) => {\n                    const descriptor = Object.getOwnPropertyDescriptor(value, s);\n                    return descriptor && descriptor.enumerable;\n                })\n                    .map(mapper),\n            ];\n            const rawRepr = '{' + stringifiedProperties.join(',') + '}';\n            if (Object.getPrototypeOf(value) === null) {\n                return rawRepr === '{}' ? 'Object.create(null)' : `Object.assign(Object.create(null),${rawRepr})`;\n            }\n            return rawRepr;\n        }\n        case '[object Set]':\n            return `new Set(${stringifyInternal(Array.from(value), currentValues, getAsyncContent)})`;\n        case '[object String]':\n            return typeof value === 'string' ? JSON.stringify(value) : `new String(${JSON.stringify(value)})`;\n        case '[object Symbol]': {\n            const s = value;\n            if (Symbol.keyFor(s) !== undefined) {\n                return `Symbol.for(${JSON.stringify(Symbol.keyFor(s))})`;\n            }\n            const desc = getSymbolDescription(s);\n            if (desc === null) {\n                return 'Symbol()';\n            }\n            const knownSymbol = desc.startsWith('Symbol.') && Symbol[desc.substring(7)];\n            return s === knownSymbol ? desc : `Symbol(${JSON.stringify(desc)})`;\n        }\n        case '[object Promise]': {\n            const promiseContent = getAsyncContent(value);\n            switch (promiseContent.state) {\n                case 'fulfilled':\n                    return `Promise.resolve(${stringifyInternal(promiseContent.value, currentValues, getAsyncContent)})`;\n                case 'rejected':\n                    return `Promise.reject(${stringifyInternal(promiseContent.value, currentValues, getAsyncContent)})`;\n                case 'pending':\n                    return `new Promise(() => {/*pending*/})`;\n                case 'unknown':\n                default:\n                    return `new Promise(() => {/*unknown*/})`;\n            }\n        }\n        case '[object Error]':\n            if (value instanceof Error) {\n                return `new Error(${stringifyInternal(value.message, currentValues, getAsyncContent)})`;\n            }\n            break;\n        case '[object Undefined]':\n            return `undefined`;\n        case '[object Int8Array]':\n        case '[object Uint8Array]':\n        case '[object Uint8ClampedArray]':\n        case '[object Int16Array]':\n        case '[object Uint16Array]':\n        case '[object Int32Array]':\n        case '[object Uint32Array]':\n        case '[object Float32Array]':\n        case '[object Float64Array]':\n        case '[object BigInt64Array]':\n        case '[object BigUint64Array]': {\n            if (typeof Buffer !== 'undefined' && typeof Buffer.isBuffer === 'function' && Buffer.isBuffer(value)) {\n                return `Buffer.from(${stringifyInternal(Array.from(value.values()), currentValues, getAsyncContent)})`;\n            }\n            const valuePrototype = Object.getPrototypeOf(value);\n            const className = valuePrototype && valuePrototype.constructor && valuePrototype.constructor.name;\n            if (typeof className === 'string') {\n                const typedArray = value;\n                const valuesFromTypedArr = typedArray.values();\n                return `${className}.from(${stringifyInternal(Array.from(valuesFromTypedArr), currentValues, getAsyncContent)})`;\n            }\n            break;\n        }\n    }\n    try {\n        return value.toString();\n    }\n    catch (_a) {\n        return Object.prototype.toString.call(value);\n    }\n}\nexport function stringify(value) {\n    return stringifyInternal(value, [], () => ({ state: 'unknown', value: undefined }));\n}\nexport function possiblyAsyncStringify(value) {\n    const stillPendingMarker = Symbol();\n    const pendingPromisesForCache = [];\n    const cache = new Map();\n    function createDelay0() {\n        let handleId = null;\n        const cancel = () => {\n            if (handleId !== null) {\n                clearTimeout(handleId);\n            }\n        };\n        const delay = new Promise((resolve) => {\n            handleId = setTimeout(() => {\n                handleId = null;\n                resolve(stillPendingMarker);\n            }, 0);\n        });\n        return { delay, cancel };\n    }\n    const unknownState = { state: 'unknown', value: undefined };\n    const getAsyncContent = function getAsyncContent(data) {\n        const cacheKey = data;\n        if (cache.has(cacheKey)) {\n            return cache.get(cacheKey);\n        }\n        const delay0 = createDelay0();\n        const p = asyncToStringMethod in data\n            ? Promise.resolve().then(() => data[asyncToStringMethod]())\n            : data;\n        p.catch(() => { });\n        pendingPromisesForCache.push(Promise.race([p, delay0.delay]).then((successValue) => {\n            if (successValue === stillPendingMarker)\n                cache.set(cacheKey, { state: 'pending', value: undefined });\n            else\n                cache.set(cacheKey, { state: 'fulfilled', value: successValue });\n            delay0.cancel();\n        }, (errorValue) => {\n            cache.set(cacheKey, { state: 'rejected', value: errorValue });\n            delay0.cancel();\n        }));\n        cache.set(cacheKey, unknownState);\n        return unknownState;\n    };\n    function loop() {\n        const stringifiedValue = stringifyInternal(value, [], getAsyncContent);\n        if (pendingPromisesForCache.length === 0) {\n            return stringifiedValue;\n        }\n        return Promise.all(pendingPromisesForCache.splice(0)).then(loop);\n    }\n    return loop();\n}\nexport async function asyncStringify(value) {\n    return Promise.resolve(possiblyAsyncStringify(value));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}