{"ast":null,"code":"import { buildPartialRecordArbitrary } from './_internals/builders/PartialRecordArbitraryBuilder.js';\n\nfunction record(recordModel, constraints) {\n  if (constraints == null) {\n    return buildPartialRecordArbitrary(recordModel, undefined);\n  }\n\n  if ('withDeletedKeys' in constraints && 'requiredKeys' in constraints) {\n    throw new Error(`requiredKeys and withDeletedKeys cannot be used together in fc.record`);\n  }\n\n  const requireDeletedKeys = 'requiredKeys' in constraints && constraints.requiredKeys !== undefined || 'withDeletedKeys' in constraints && !!constraints.withDeletedKeys;\n\n  if (!requireDeletedKeys) {\n    return buildPartialRecordArbitrary(recordModel, undefined);\n  }\n\n  const requiredKeys = ('requiredKeys' in constraints ? constraints.requiredKeys : undefined) || [];\n\n  for (let idx = 0; idx !== requiredKeys.length; ++idx) {\n    const descriptor = Object.getOwnPropertyDescriptor(recordModel, requiredKeys[idx]);\n\n    if (descriptor === undefined) {\n      throw new Error(`requiredKeys cannot reference keys that have not been defined in recordModel`);\n    }\n\n    if (!descriptor.enumerable) {\n      throw new Error(`requiredKeys cannot reference keys that have are enumerable in recordModel`);\n    }\n  }\n\n  return buildPartialRecordArbitrary(recordModel, requiredKeys);\n}\n\nexport { record };","map":{"version":3,"names":["buildPartialRecordArbitrary","record","recordModel","constraints","undefined","Error","requireDeletedKeys","requiredKeys","withDeletedKeys","idx","length","descriptor","Object","getOwnPropertyDescriptor","enumerable"],"sources":["/Users/soheilvafaei/Documents/project/web/resume/ex7/node_modules/fast-check/lib/esm/arbitrary/record.js"],"sourcesContent":["import { buildPartialRecordArbitrary } from './_internals/builders/PartialRecordArbitraryBuilder.js';\nfunction record(recordModel, constraints) {\n    if (constraints == null) {\n        return buildPartialRecordArbitrary(recordModel, undefined);\n    }\n    if ('withDeletedKeys' in constraints && 'requiredKeys' in constraints) {\n        throw new Error(`requiredKeys and withDeletedKeys cannot be used together in fc.record`);\n    }\n    const requireDeletedKeys = ('requiredKeys' in constraints && constraints.requiredKeys !== undefined) ||\n        ('withDeletedKeys' in constraints && !!constraints.withDeletedKeys);\n    if (!requireDeletedKeys) {\n        return buildPartialRecordArbitrary(recordModel, undefined);\n    }\n    const requiredKeys = ('requiredKeys' in constraints ? constraints.requiredKeys : undefined) || [];\n    for (let idx = 0; idx !== requiredKeys.length; ++idx) {\n        const descriptor = Object.getOwnPropertyDescriptor(recordModel, requiredKeys[idx]);\n        if (descriptor === undefined) {\n            throw new Error(`requiredKeys cannot reference keys that have not been defined in recordModel`);\n        }\n        if (!descriptor.enumerable) {\n            throw new Error(`requiredKeys cannot reference keys that have are enumerable in recordModel`);\n        }\n    }\n    return buildPartialRecordArbitrary(recordModel, requiredKeys);\n}\nexport { record };\n"],"mappings":"AAAA,SAASA,2BAAT,QAA4C,wDAA5C;;AACA,SAASC,MAAT,CAAgBC,WAAhB,EAA6BC,WAA7B,EAA0C;EACtC,IAAIA,WAAW,IAAI,IAAnB,EAAyB;IACrB,OAAOH,2BAA2B,CAACE,WAAD,EAAcE,SAAd,CAAlC;EACH;;EACD,IAAI,qBAAqBD,WAArB,IAAoC,kBAAkBA,WAA1D,EAAuE;IACnE,MAAM,IAAIE,KAAJ,CAAW,uEAAX,CAAN;EACH;;EACD,MAAMC,kBAAkB,GAAI,kBAAkBH,WAAlB,IAAiCA,WAAW,CAACI,YAAZ,KAA6BH,SAA/D,IACtB,qBAAqBD,WAArB,IAAoC,CAAC,CAACA,WAAW,CAACK,eADvD;;EAEA,IAAI,CAACF,kBAAL,EAAyB;IACrB,OAAON,2BAA2B,CAACE,WAAD,EAAcE,SAAd,CAAlC;EACH;;EACD,MAAMG,YAAY,GAAG,CAAC,kBAAkBJ,WAAlB,GAAgCA,WAAW,CAACI,YAA5C,GAA2DH,SAA5D,KAA0E,EAA/F;;EACA,KAAK,IAAIK,GAAG,GAAG,CAAf,EAAkBA,GAAG,KAAKF,YAAY,CAACG,MAAvC,EAA+C,EAAED,GAAjD,EAAsD;IAClD,MAAME,UAAU,GAAGC,MAAM,CAACC,wBAAP,CAAgCX,WAAhC,EAA6CK,YAAY,CAACE,GAAD,CAAzD,CAAnB;;IACA,IAAIE,UAAU,KAAKP,SAAnB,EAA8B;MAC1B,MAAM,IAAIC,KAAJ,CAAW,8EAAX,CAAN;IACH;;IACD,IAAI,CAACM,UAAU,CAACG,UAAhB,EAA4B;MACxB,MAAM,IAAIT,KAAJ,CAAW,4EAAX,CAAN;IACH;EACJ;;EACD,OAAOL,2BAA2B,CAACE,WAAD,EAAcK,YAAd,CAAlC;AACH;;AACD,SAASN,MAAT"},"metadata":{},"sourceType":"module"}