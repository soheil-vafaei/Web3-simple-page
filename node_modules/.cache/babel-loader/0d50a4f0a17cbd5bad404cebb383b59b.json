{"ast":null,"code":"import { array } from './array.js';\nimport { buildLowerAlphaArbitrary, buildLowerAlphaNumericArbitrary } from './_internals/builders/CharacterRangeArbitraryBuilder.js';\nimport { option } from './option.js';\nimport { stringOf } from './stringOf.js';\nimport { tuple } from './tuple.js';\nimport { filterInvalidSubdomainLabel } from './_internals/helpers/InvalidSubdomainLabelFiIter.js';\nimport { resolveSize, relativeSizeToSize } from './_internals/helpers/MaxLengthFromMinLength.js';\nimport { adapter } from './_internals/AdapterArbitrary.js';\n\nfunction toSubdomainLabelMapper(_ref) {\n  let [f, d] = _ref;\n  return d === null ? f : `${f}${d[0]}${d[1]}`;\n}\n\nfunction toSubdomainLabelUnmapper(value) {\n  if (typeof value !== 'string' || value.length === 0) {\n    throw new Error('Unsupported');\n  }\n\n  if (value.length === 1) {\n    return [value[0], null];\n  }\n\n  return [value[0], [value.substring(1, value.length - 1), value[value.length - 1]]];\n}\n\nfunction subdomainLabel(size) {\n  const alphaNumericArb = buildLowerAlphaNumericArbitrary([]);\n  const alphaNumericHyphenArb = buildLowerAlphaNumericArbitrary(['-']);\n  return tuple(alphaNumericArb, option(tuple(stringOf(alphaNumericHyphenArb, {\n    size,\n    maxLength: 61\n  }), alphaNumericArb))).map(toSubdomainLabelMapper, toSubdomainLabelUnmapper).filter(filterInvalidSubdomainLabel);\n}\n\nfunction labelsMapper(elements) {\n  return `${elements[0].join('.')}.${elements[1]}`;\n}\n\nfunction labelsUnmapper(value) {\n  if (typeof value !== 'string') {\n    throw new Error('Unsupported type');\n  }\n\n  const lastDotIndex = value.lastIndexOf('.');\n  return [value.substring(0, lastDotIndex).split('.'), value.substring(lastDotIndex + 1)];\n}\n\nfunction labelsAdapter(labels) {\n  const [subDomains, suffix] = labels;\n  let lengthNotIncludingIndex = suffix.length;\n\n  for (let index = 0; index !== subDomains.length; ++index) {\n    lengthNotIncludingIndex += 1 + subDomains[index].length;\n\n    if (lengthNotIncludingIndex > 255) {\n      return {\n        adapted: true,\n        value: [subDomains.slice(0, index), suffix]\n      };\n    }\n  }\n\n  return {\n    adapted: false,\n    value: labels\n  };\n}\n\nexport function domain() {\n  let constraints = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const resolvedSize = resolveSize(constraints.size);\n  const resolvedSizeMinusOne = relativeSizeToSize('-1', resolvedSize);\n  const alphaNumericArb = buildLowerAlphaArbitrary([]);\n  const publicSuffixArb = stringOf(alphaNumericArb, {\n    minLength: 2,\n    maxLength: 63,\n    size: resolvedSizeMinusOne\n  });\n  return adapter(tuple(array(subdomainLabel(resolvedSize), {\n    size: resolvedSizeMinusOne,\n    minLength: 1,\n    maxLength: 127\n  }), publicSuffixArb), labelsAdapter).map(labelsMapper, labelsUnmapper);\n}","map":{"version":3,"names":["array","buildLowerAlphaArbitrary","buildLowerAlphaNumericArbitrary","option","stringOf","tuple","filterInvalidSubdomainLabel","resolveSize","relativeSizeToSize","adapter","toSubdomainLabelMapper","f","d","toSubdomainLabelUnmapper","value","length","Error","substring","subdomainLabel","size","alphaNumericArb","alphaNumericHyphenArb","maxLength","map","filter","labelsMapper","elements","join","labelsUnmapper","lastDotIndex","lastIndexOf","split","labelsAdapter","labels","subDomains","suffix","lengthNotIncludingIndex","index","adapted","slice","domain","constraints","resolvedSize","resolvedSizeMinusOne","publicSuffixArb","minLength"],"sources":["/Users/soheilvafaei/Documents/project/web/web3/ex7/node_modules/fast-check/lib/esm/arbitrary/domain.js"],"sourcesContent":["import { array } from './array.js';\nimport { buildLowerAlphaArbitrary, buildLowerAlphaNumericArbitrary, } from './_internals/builders/CharacterRangeArbitraryBuilder.js';\nimport { option } from './option.js';\nimport { stringOf } from './stringOf.js';\nimport { tuple } from './tuple.js';\nimport { filterInvalidSubdomainLabel } from './_internals/helpers/InvalidSubdomainLabelFiIter.js';\nimport { resolveSize, relativeSizeToSize } from './_internals/helpers/MaxLengthFromMinLength.js';\nimport { adapter } from './_internals/AdapterArbitrary.js';\nfunction toSubdomainLabelMapper([f, d]) {\n    return d === null ? f : `${f}${d[0]}${d[1]}`;\n}\nfunction toSubdomainLabelUnmapper(value) {\n    if (typeof value !== 'string' || value.length === 0) {\n        throw new Error('Unsupported');\n    }\n    if (value.length === 1) {\n        return [value[0], null];\n    }\n    return [value[0], [value.substring(1, value.length - 1), value[value.length - 1]]];\n}\nfunction subdomainLabel(size) {\n    const alphaNumericArb = buildLowerAlphaNumericArbitrary([]);\n    const alphaNumericHyphenArb = buildLowerAlphaNumericArbitrary(['-']);\n    return tuple(alphaNumericArb, option(tuple(stringOf(alphaNumericHyphenArb, { size, maxLength: 61 }), alphaNumericArb)))\n        .map(toSubdomainLabelMapper, toSubdomainLabelUnmapper)\n        .filter(filterInvalidSubdomainLabel);\n}\nfunction labelsMapper(elements) {\n    return `${elements[0].join('.')}.${elements[1]}`;\n}\nfunction labelsUnmapper(value) {\n    if (typeof value !== 'string') {\n        throw new Error('Unsupported type');\n    }\n    const lastDotIndex = value.lastIndexOf('.');\n    return [value.substring(0, lastDotIndex).split('.'), value.substring(lastDotIndex + 1)];\n}\nfunction labelsAdapter(labels) {\n    const [subDomains, suffix] = labels;\n    let lengthNotIncludingIndex = suffix.length;\n    for (let index = 0; index !== subDomains.length; ++index) {\n        lengthNotIncludingIndex += 1 + subDomains[index].length;\n        if (lengthNotIncludingIndex > 255) {\n            return { adapted: true, value: [subDomains.slice(0, index), suffix] };\n        }\n    }\n    return { adapted: false, value: labels };\n}\nexport function domain(constraints = {}) {\n    const resolvedSize = resolveSize(constraints.size);\n    const resolvedSizeMinusOne = relativeSizeToSize('-1', resolvedSize);\n    const alphaNumericArb = buildLowerAlphaArbitrary([]);\n    const publicSuffixArb = stringOf(alphaNumericArb, { minLength: 2, maxLength: 63, size: resolvedSizeMinusOne });\n    return (adapter(tuple(array(subdomainLabel(resolvedSize), { size: resolvedSizeMinusOne, minLength: 1, maxLength: 127 }), publicSuffixArb), labelsAdapter).map(labelsMapper, labelsUnmapper));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}