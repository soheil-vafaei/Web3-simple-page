{"ast":null,"code":"import { fullUnicode } from '../../fullUnicode.js';\nimport { oneof } from '../../oneof.js';\nimport { mapToConstant } from '../../mapToConstant.js';\nconst lowerCaseMapper = {\n  num: 26,\n  build: v => String.fromCharCode(v + 0x61)\n};\nconst upperCaseMapper = {\n  num: 26,\n  build: v => String.fromCharCode(v + 0x41)\n};\nconst numericMapper = {\n  num: 10,\n  build: v => String.fromCharCode(v + 0x30)\n};\n\nfunction percentCharArbMapper(c) {\n  const encoded = encodeURIComponent(c);\n  return c !== encoded ? encoded : `%${c.charCodeAt(0).toString(16)}`;\n}\n\nfunction percentCharArbUnmapper(value) {\n  if (typeof value !== 'string') {\n    throw new Error('Unsupported');\n  }\n\n  const decoded = decodeURIComponent(value);\n  return decoded;\n}\n\nconst percentCharArb = fullUnicode().map(percentCharArbMapper, percentCharArbUnmapper);\nexport const buildLowerAlphaArbitrary = others => mapToConstant(lowerCaseMapper, {\n  num: others.length,\n  build: v => others[v]\n});\nexport const buildLowerAlphaNumericArbitrary = others => mapToConstant(lowerCaseMapper, numericMapper, {\n  num: others.length,\n  build: v => others[v]\n});\nexport const buildAlphaNumericArbitrary = others => mapToConstant(lowerCaseMapper, upperCaseMapper, numericMapper, {\n  num: others.length,\n  build: v => others[v]\n});\nexport const buildAlphaNumericPercentArbitrary = others => oneof({\n  weight: 10,\n  arbitrary: buildAlphaNumericArbitrary(others)\n}, {\n  weight: 1,\n  arbitrary: percentCharArb\n});","map":{"version":3,"names":["fullUnicode","oneof","mapToConstant","lowerCaseMapper","num","build","v","String","fromCharCode","upperCaseMapper","numericMapper","percentCharArbMapper","c","encoded","encodeURIComponent","charCodeAt","toString","percentCharArbUnmapper","value","Error","decoded","decodeURIComponent","percentCharArb","map","buildLowerAlphaArbitrary","others","length","buildLowerAlphaNumericArbitrary","buildAlphaNumericArbitrary","buildAlphaNumericPercentArbitrary","weight","arbitrary"],"sources":["/Users/soheilvafaei/Documents/resume/Web3/web3 simple react web3 js/node_modules/fast-check/lib/esm/arbitrary/_internals/builders/CharacterRangeArbitraryBuilder.js"],"sourcesContent":["import { fullUnicode } from '../../fullUnicode.js';\nimport { oneof } from '../../oneof.js';\nimport { mapToConstant } from '../../mapToConstant.js';\nconst lowerCaseMapper = { num: 26, build: (v) => String.fromCharCode(v + 0x61) };\nconst upperCaseMapper = { num: 26, build: (v) => String.fromCharCode(v + 0x41) };\nconst numericMapper = { num: 10, build: (v) => String.fromCharCode(v + 0x30) };\nfunction percentCharArbMapper(c) {\n    const encoded = encodeURIComponent(c);\n    return c !== encoded ? encoded : `%${c.charCodeAt(0).toString(16)}`;\n}\nfunction percentCharArbUnmapper(value) {\n    if (typeof value !== 'string') {\n        throw new Error('Unsupported');\n    }\n    const decoded = decodeURIComponent(value);\n    return decoded;\n}\nconst percentCharArb = fullUnicode().map(percentCharArbMapper, percentCharArbUnmapper);\nexport const buildLowerAlphaArbitrary = (others) => mapToConstant(lowerCaseMapper, { num: others.length, build: (v) => others[v] });\nexport const buildLowerAlphaNumericArbitrary = (others) => mapToConstant(lowerCaseMapper, numericMapper, { num: others.length, build: (v) => others[v] });\nexport const buildAlphaNumericArbitrary = (others) => mapToConstant(lowerCaseMapper, upperCaseMapper, numericMapper, { num: others.length, build: (v) => others[v] });\nexport const buildAlphaNumericPercentArbitrary = (others) => oneof({ weight: 10, arbitrary: buildAlphaNumericArbitrary(others) }, { weight: 1, arbitrary: percentCharArb });\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,sBAA5B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,MAAMC,eAAe,GAAG;EAAEC,GAAG,EAAE,EAAP;EAAWC,KAAK,EAAGC,CAAD,IAAOC,MAAM,CAACC,YAAP,CAAoBF,CAAC,GAAG,IAAxB;AAAzB,CAAxB;AACA,MAAMG,eAAe,GAAG;EAAEL,GAAG,EAAE,EAAP;EAAWC,KAAK,EAAGC,CAAD,IAAOC,MAAM,CAACC,YAAP,CAAoBF,CAAC,GAAG,IAAxB;AAAzB,CAAxB;AACA,MAAMI,aAAa,GAAG;EAAEN,GAAG,EAAE,EAAP;EAAWC,KAAK,EAAGC,CAAD,IAAOC,MAAM,CAACC,YAAP,CAAoBF,CAAC,GAAG,IAAxB;AAAzB,CAAtB;;AACA,SAASK,oBAAT,CAA8BC,CAA9B,EAAiC;EAC7B,MAAMC,OAAO,GAAGC,kBAAkB,CAACF,CAAD,CAAlC;EACA,OAAOA,CAAC,KAAKC,OAAN,GAAgBA,OAAhB,GAA2B,IAAGD,CAAC,CAACG,UAAF,CAAa,CAAb,EAAgBC,QAAhB,CAAyB,EAAzB,CAA6B,EAAlE;AACH;;AACD,SAASC,sBAAT,CAAgCC,KAAhC,EAAuC;EACnC,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;IAC3B,MAAM,IAAIC,KAAJ,CAAU,aAAV,CAAN;EACH;;EACD,MAAMC,OAAO,GAAGC,kBAAkB,CAACH,KAAD,CAAlC;EACA,OAAOE,OAAP;AACH;;AACD,MAAME,cAAc,GAAGtB,WAAW,GAAGuB,GAAd,CAAkBZ,oBAAlB,EAAwCM,sBAAxC,CAAvB;AACA,OAAO,MAAMO,wBAAwB,GAAIC,MAAD,IAAYvB,aAAa,CAACC,eAAD,EAAkB;EAAEC,GAAG,EAAEqB,MAAM,CAACC,MAAd;EAAsBrB,KAAK,EAAGC,CAAD,IAAOmB,MAAM,CAACnB,CAAD;AAA1C,CAAlB,CAA1D;AACP,OAAO,MAAMqB,+BAA+B,GAAIF,MAAD,IAAYvB,aAAa,CAACC,eAAD,EAAkBO,aAAlB,EAAiC;EAAEN,GAAG,EAAEqB,MAAM,CAACC,MAAd;EAAsBrB,KAAK,EAAGC,CAAD,IAAOmB,MAAM,CAACnB,CAAD;AAA1C,CAAjC,CAAjE;AACP,OAAO,MAAMsB,0BAA0B,GAAIH,MAAD,IAAYvB,aAAa,CAACC,eAAD,EAAkBM,eAAlB,EAAmCC,aAAnC,EAAkD;EAAEN,GAAG,EAAEqB,MAAM,CAACC,MAAd;EAAsBrB,KAAK,EAAGC,CAAD,IAAOmB,MAAM,CAACnB,CAAD;AAA1C,CAAlD,CAA5D;AACP,OAAO,MAAMuB,iCAAiC,GAAIJ,MAAD,IAAYxB,KAAK,CAAC;EAAE6B,MAAM,EAAE,EAAV;EAAcC,SAAS,EAAEH,0BAA0B,CAACH,MAAD;AAAnD,CAAD,EAAgE;EAAEK,MAAM,EAAE,CAAV;EAAaC,SAAS,EAAET;AAAxB,CAAhE,CAA3D"},"metadata":{},"sourceType":"module"}