{"ast":null,"code":"import { domEach, isTag } from '../utils.js';\n/**\n * Set multiple CSS properties for every matched element.\n *\n * @category CSS\n * @param prop - The names of the properties.\n * @param val - The new values.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/css/}\n */\n\nexport function css(prop, val) {\n  if (prop != null && val != null || // When `prop` is a \"plain\" object\n  typeof prop === 'object' && !Array.isArray(prop)) {\n    return domEach(this, (el, i) => {\n      if (isTag(el)) {\n        // `prop` can't be an array here anymore.\n        setCss(el, prop, val, i);\n      }\n    });\n  }\n\n  if (this.length === 0) {\n    return undefined;\n  }\n\n  return getCss(this[0], prop);\n}\n/**\n * Set styles of all elements.\n *\n * @private\n * @param el - Element to set style of.\n * @param prop - Name of property.\n * @param value - Value to set property to.\n * @param idx - Optional index within the selection.\n */\n\nfunction setCss(el, prop, value, idx) {\n  if (typeof prop === 'string') {\n    const styles = getCss(el);\n    const val = typeof value === 'function' ? value.call(el, idx, styles[prop]) : value;\n\n    if (val === '') {\n      delete styles[prop];\n    } else if (val != null) {\n      styles[prop] = val;\n    }\n\n    el.attribs['style'] = stringify(styles);\n  } else if (typeof prop === 'object') {\n    Object.keys(prop).forEach((k, i) => {\n      setCss(el, k, prop[k], i);\n    });\n  }\n}\n\nfunction getCss(el, prop) {\n  if (!el || !isTag(el)) return;\n  const styles = parse(el.attribs['style']);\n\n  if (typeof prop === 'string') {\n    return styles[prop];\n  }\n\n  if (Array.isArray(prop)) {\n    const newStyles = {};\n    prop.forEach(item => {\n      if (styles[item] != null) {\n        newStyles[item] = styles[item];\n      }\n    });\n    return newStyles;\n  }\n\n  return styles;\n}\n/**\n * Stringify `obj` to styles.\n *\n * @private\n * @category CSS\n * @param obj - Object to stringify.\n * @returns The serialized styles.\n */\n\n\nfunction stringify(obj) {\n  return Object.keys(obj).reduce((str, prop) => `${str}${str ? ' ' : ''}${prop}: ${obj[prop]};`, '');\n}\n/**\n * Parse `styles`.\n *\n * @private\n * @category CSS\n * @param styles - Styles to be parsed.\n * @returns The parsed styles.\n */\n\n\nfunction parse(styles) {\n  styles = (styles || '').trim();\n  if (!styles) return {};\n  const obj = {};\n  let key;\n\n  for (const str of styles.split(';')) {\n    const n = str.indexOf(':'); // If there is no :, or if it is the first/last character, add to the previous item's value\n\n    if (n < 1 || n === str.length - 1) {\n      const trimmed = str.trimEnd();\n\n      if (trimmed.length > 0 && key !== undefined) {\n        obj[key] += `;${trimmed}`;\n      }\n    } else {\n      key = str.slice(0, n).trim();\n      obj[key] = str.slice(n + 1).trim();\n    }\n  }\n\n  return obj;\n}","map":{"version":3,"mappings":"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","names":["domEach","isTag","css","prop","val","Array","isArray","el","i","setCss","length","undefined","getCss","value","idx","styles","call","attribs","stringify","Object","keys","forEach","k","parse","newStyles","item","obj","reduce","str","trim","key","split","n","indexOf","trimmed","trimEnd","slice"],"sourceRoot":"https://raw.githubusercontent.com/cheeriojs/cheerio/d1cbc66d53392ce8bf6cd0068f675836372d2bf3/src/","sources":["api/css.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}