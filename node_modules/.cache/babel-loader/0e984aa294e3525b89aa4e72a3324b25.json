{"ast":null,"code":"import { Stream } from '../../stream/Stream.js';\nimport { Arbitrary } from '../../check/arbitrary/definition/Arbitrary.js';\nimport { Value } from '../../check/arbitrary/definition/Value.js';\nimport { biasNumericRange, bigIntLogLike } from './helpers/BiasNumericRange.js';\nimport { shrinkBigInt } from './helpers/ShrinkBigInt.js';\nexport class BigIntArbitrary extends Arbitrary {\n  constructor(min, max) {\n    super();\n    this.min = min;\n    this.max = max;\n  }\n\n  generate(mrng, biasFactor) {\n    const range = this.computeGenerateRange(mrng, biasFactor);\n    return new Value(mrng.nextBigInt(range.min, range.max), undefined);\n  }\n\n  computeGenerateRange(mrng, biasFactor) {\n    if (biasFactor === undefined || mrng.nextInt(1, biasFactor) !== 1) {\n      return {\n        min: this.min,\n        max: this.max\n      };\n    }\n\n    const ranges = biasNumericRange(this.min, this.max, bigIntLogLike);\n\n    if (ranges.length === 1) {\n      return ranges[0];\n    }\n\n    const id = mrng.nextInt(-2 * (ranges.length - 1), ranges.length - 2);\n    return id < 0 ? ranges[0] : ranges[id + 1];\n  }\n\n  canShrinkWithoutContext(value) {\n    return typeof value === 'bigint' && this.min <= value && value <= this.max;\n  }\n\n  shrink(current, context) {\n    if (!BigIntArbitrary.isValidContext(current, context)) {\n      const target = this.defaultTarget();\n      return shrinkBigInt(current, target, true);\n    }\n\n    if (this.isLastChanceTry(current, context)) {\n      return Stream.of(new Value(context, undefined));\n    }\n\n    return shrinkBigInt(current, context, false);\n  }\n\n  defaultTarget() {\n    if (this.min <= 0 && this.max >= 0) {\n      return BigInt(0);\n    }\n\n    return this.min < 0 ? this.max : this.min;\n  }\n\n  isLastChanceTry(current, context) {\n    if (current > 0) return current === context + BigInt(1) && current > this.min;\n    if (current < 0) return current === context - BigInt(1) && current < this.max;\n    return false;\n  }\n\n  static isValidContext(current, context) {\n    if (context === undefined) {\n      return false;\n    }\n\n    if (typeof context !== 'bigint') {\n      throw new Error(`Invalid context type passed to BigIntArbitrary (#1)`);\n    }\n\n    const differentSigns = current > 0 && context < 0 || current < 0 && context > 0;\n\n    if (context !== BigInt(0) && differentSigns) {\n      throw new Error(`Invalid context value passed to BigIntArbitrary (#2)`);\n    }\n\n    return true;\n  }\n\n}","map":{"version":3,"names":["Stream","Arbitrary","Value","biasNumericRange","bigIntLogLike","shrinkBigInt","BigIntArbitrary","constructor","min","max","generate","mrng","biasFactor","range","computeGenerateRange","nextBigInt","undefined","nextInt","ranges","length","id","canShrinkWithoutContext","value","shrink","current","context","isValidContext","target","defaultTarget","isLastChanceTry","of","BigInt","Error","differentSigns"],"sources":["/Users/soheilvafaei/Documents/project/web/web3/ex7/node_modules/fast-check/lib/esm/arbitrary/_internals/BigIntArbitrary.js"],"sourcesContent":["import { Stream } from '../../stream/Stream.js';\nimport { Arbitrary } from '../../check/arbitrary/definition/Arbitrary.js';\nimport { Value } from '../../check/arbitrary/definition/Value.js';\nimport { biasNumericRange, bigIntLogLike } from './helpers/BiasNumericRange.js';\nimport { shrinkBigInt } from './helpers/ShrinkBigInt.js';\nexport class BigIntArbitrary extends Arbitrary {\n    constructor(min, max) {\n        super();\n        this.min = min;\n        this.max = max;\n    }\n    generate(mrng, biasFactor) {\n        const range = this.computeGenerateRange(mrng, biasFactor);\n        return new Value(mrng.nextBigInt(range.min, range.max), undefined);\n    }\n    computeGenerateRange(mrng, biasFactor) {\n        if (biasFactor === undefined || mrng.nextInt(1, biasFactor) !== 1) {\n            return { min: this.min, max: this.max };\n        }\n        const ranges = biasNumericRange(this.min, this.max, bigIntLogLike);\n        if (ranges.length === 1) {\n            return ranges[0];\n        }\n        const id = mrng.nextInt(-2 * (ranges.length - 1), ranges.length - 2);\n        return id < 0 ? ranges[0] : ranges[id + 1];\n    }\n    canShrinkWithoutContext(value) {\n        return typeof value === 'bigint' && this.min <= value && value <= this.max;\n    }\n    shrink(current, context) {\n        if (!BigIntArbitrary.isValidContext(current, context)) {\n            const target = this.defaultTarget();\n            return shrinkBigInt(current, target, true);\n        }\n        if (this.isLastChanceTry(current, context)) {\n            return Stream.of(new Value(context, undefined));\n        }\n        return shrinkBigInt(current, context, false);\n    }\n    defaultTarget() {\n        if (this.min <= 0 && this.max >= 0) {\n            return BigInt(0);\n        }\n        return this.min < 0 ? this.max : this.min;\n    }\n    isLastChanceTry(current, context) {\n        if (current > 0)\n            return current === context + BigInt(1) && current > this.min;\n        if (current < 0)\n            return current === context - BigInt(1) && current < this.max;\n        return false;\n    }\n    static isValidContext(current, context) {\n        if (context === undefined) {\n            return false;\n        }\n        if (typeof context !== 'bigint') {\n            throw new Error(`Invalid context type passed to BigIntArbitrary (#1)`);\n        }\n        const differentSigns = (current > 0 && context < 0) || (current < 0 && context > 0);\n        if (context !== BigInt(0) && differentSigns) {\n            throw new Error(`Invalid context value passed to BigIntArbitrary (#2)`);\n        }\n        return true;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}