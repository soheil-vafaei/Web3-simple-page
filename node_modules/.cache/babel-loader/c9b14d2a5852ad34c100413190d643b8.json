{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.N_DIV_2 = exports.isAccessList = exports.isAccessListBuffer = exports.Capability = void 0;\n\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\n/**\n * Can be used in conjunction with {@link Transaction.supports}\n * to query on tx capabilities\n */\n\n\nvar Capability;\n\n(function (Capability) {\n  /**\n   * Tx supports EIP-155 replay protection\n   * See: [155](https://eips.ethereum.org/EIPS/eip-155) Replay Attack Protection EIP\n   */\n  Capability[Capability[\"EIP155ReplayProtection\"] = 155] = \"EIP155ReplayProtection\";\n  /**\n   * Tx supports EIP-1559 gas fee market mechansim\n   * See: [1559](https://eips.ethereum.org/EIPS/eip-1559) Fee Market EIP\n   */\n\n  Capability[Capability[\"EIP1559FeeMarket\"] = 1559] = \"EIP1559FeeMarket\";\n  /**\n   * Tx is a typed transaction as defined in EIP-2718\n   * See: [2718](https://eips.ethereum.org/EIPS/eip-2718) Transaction Type EIP\n   */\n\n  Capability[Capability[\"EIP2718TypedTransaction\"] = 2718] = \"EIP2718TypedTransaction\";\n  /**\n   * Tx supports access list generation as defined in EIP-2930\n   * See: [2930](https://eips.ethereum.org/EIPS/eip-2930) Access Lists EIP\n   */\n\n  Capability[Capability[\"EIP2930AccessLists\"] = 2930] = \"EIP2930AccessLists\";\n})(Capability = exports.Capability || (exports.Capability = {}));\n\nfunction isAccessListBuffer(input) {\n  if (input.length === 0) {\n    return true;\n  }\n\n  var firstItem = input[0];\n\n  if (Array.isArray(firstItem)) {\n    return true;\n  }\n\n  return false;\n}\n\nexports.isAccessListBuffer = isAccessListBuffer;\n\nfunction isAccessList(input) {\n  return !isAccessListBuffer(input); // This is exactly the same method, except the output is negated.\n}\n\nexports.isAccessList = isAccessList;\n/**\n * A const defining secp256k1n/2\n */\n\nexports.N_DIV_2 = new ethereumjs_util_1.BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);","map":{"version":3,"mappings":";;;;;;;AAAA;AAMA;;;;;;AAIA,IAAYA,UAAZ;;AAAA,WAAYA,UAAZ,EAAsB;EACpB;;;;EAIAA;EAEA;;;;;EAIAA;EAEA;;;;;EAIAA;EAEA;;;;;EAIAA;AACD,CAxBD,EAAYA,UAAU,GAAVC,4CAAU,EAAV,CAAZ;;AAuEA,SAAgBC,kBAAhB,CACEC,KADF,EACsC;EAEpC,IAAIA,KAAK,CAACC,MAAN,KAAiB,CAArB,EAAwB;IACtB,OAAO,IAAP;EACD;;EACD,IAAMC,SAAS,GAAGF,KAAK,CAAC,CAAD,CAAvB;;EACA,IAAIG,KAAK,CAACC,OAAN,CAAcF,SAAd,CAAJ,EAA8B;IAC5B,OAAO,IAAP;EACD;;EACD,OAAO,KAAP;AACD;;AAXDJ;;AAaA,SAAgBO,YAAhB,CAA6BL,KAA7B,EAAiE;EAC/D,OAAO,CAACD,kBAAkB,CAACC,KAAD,CAA1B,CAD+D,CAC7B;AACnC;;AAFDF;AA4KA;;;;AAGaA,kBAAU,IAAIQ,oBAAJ,CACrB,kEADqB,EAErB,EAFqB,CAAV","names":["Capability","exports","isAccessListBuffer","input","length","firstItem","Array","isArray","isAccessList","ethereumjs_util_1"],"sourceRoot":"","sources":["../src/types.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}