{"ast":null,"code":"\"use strict\";\n\nconst Blockchain = {\n  getBlockByNumber(blockNumber, provider, callback) {\n    const params = [blockNumber, true];\n    provider.send({\n      jsonrpc: \"2.0\",\n      method: \"eth_getBlockByNumber\",\n      params,\n      id: Date.now()\n    }, callback);\n  },\n\n  getBlockByHash(blockHash, provider, callback) {\n    const params = [blockHash, true];\n    provider.send({\n      jsonrpc: \"2.0\",\n      method: \"eth_getBlockByHash\",\n      params,\n      id: Date.now()\n    }, callback);\n  },\n\n  parse(uri) {\n    const parsed = {};\n    if (uri.indexOf(\"blockchain://\") !== 0) return parsed;\n    const cleanUri = uri.replace(\"blockchain://\", \"\");\n    const pieces = cleanUri.split(\"/block/\");\n    parsed.genesis_hash = `0x${pieces[0]}`;\n    parsed.block_hash = `0x${pieces[1]}`;\n    return parsed;\n  },\n\n  asURI(provider) {\n    return new Promise((resolve, reject) => {\n      let genesis, latest;\n      this.getBlockByNumber(\"0x0\", provider, (err, _ref) => {\n        let {\n          result\n        } = _ref;\n        if (err) return reject(err);\n        genesis = result;\n        this.getBlockByNumber(\"latest\", provider, (err, _ref2) => {\n          let {\n            result\n          } = _ref2;\n          if (err) return reject(err);\n          latest = result;\n          const url = `blockchain://${genesis.hash.replace(\"0x\", \"\")}/block/${latest.hash.replace(\"0x\", \"\")}`;\n          resolve(url);\n        });\n      });\n    });\n  },\n\n  matches(uri, provider) {\n    return new Promise((resolve, reject) => {\n      const parsedUri = this.parse(uri);\n      const expectedGenesis = parsedUri.genesis_hash;\n      const expectedBlock = parsedUri.block_hash;\n      this.getBlockByNumber(\"0x0\", provider, (err, _ref3) => {\n        let {\n          result\n        } = _ref3;\n        if (err) return reject(err);\n        const block = result;\n        if (block.hash !== expectedGenesis) return resolve(false);\n        this.getBlockByHash(expectedBlock, provider, (err, _ref4) => {\n          let {\n            result\n          } = _ref4;\n          // Treat an error as if the block didn't exist. This is because\n          // some clients respond differently.\n          const block = result;\n\n          if (err || block == null) {\n            return resolve(false);\n          }\n\n          resolve(true);\n        });\n      });\n    });\n  }\n\n};\nmodule.exports = Blockchain;","map":{"version":3,"mappings":"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","names":["Blockchain","getBlockByNumber","blockNumber","provider","callback","params","send","jsonrpc","method","id","Date","now","getBlockByHash","blockHash","parse","uri","parsed","indexOf","cleanUri","replace","pieces","split","genesis_hash","block_hash","asURI","Promise","resolve","reject","genesis","latest","err","result","url","hash","matches","parsedUri","expectedGenesis","expectedBlock","block","module"],"sourceRoot":"","sources":["../index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}