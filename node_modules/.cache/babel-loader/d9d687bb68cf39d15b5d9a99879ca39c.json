{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.forBytecode = exports.forContract = exports.forContracts = void 0;\n\nfunction forContracts(contracts) {\n  // convert to list\n  return Object.values(contracts).map(forContract);\n}\n\nexports.forContracts = forContracts;\n\nfunction forContract(contract) {\n  const {\n    contractName,\n    contract_name,\n    sourcePath,\n    source,\n    sourceMap,\n    deployedSourceMap,\n    legacyAST,\n    ast,\n    abi,\n    metadata,\n    bytecode,\n    deployedBytecode,\n    compiler,\n    devdoc,\n    userdoc,\n    immutableReferences,\n    generatedSources,\n    deployedGeneratedSources,\n    db\n  } = contract;\n  return {\n    contractName: contract_name || contractName,\n    sourcePath,\n    source,\n    sourceMap,\n    deployedSourceMap,\n    legacyAST,\n    ast,\n    abi,\n    metadata,\n    bytecode: forBytecode(bytecode),\n    deployedBytecode: forBytecode(deployedBytecode),\n    compiler,\n    devdoc,\n    userdoc,\n    immutableReferences,\n    generatedSources,\n    deployedGeneratedSources,\n    db\n  };\n}\n\nexports.forContract = forContract;\n\nfunction forBytecode(bytecode) {\n  if (!bytecode) {\n    return undefined;\n  }\n\n  if (typeof bytecode === \"object\") {\n    return bytecode;\n  }\n\n  const linkReferences = [];\n  const bytes = bytecode.slice(2) // remove 0x prefix\n  .replace(/__[^_]+_*/g, (linkReference, characterOffset) => {\n    const [, name] = linkReference.match(/__([^_]+)_*/);\n    const characterLength = linkReference.length;\n    const offset = characterOffset / 2;\n    const length = characterLength / 2;\n    linkReferences.push({\n      offsets: [offset],\n      name,\n      length\n    });\n    return \"0\".repeat(characterLength);\n  });\n  return {\n    bytes,\n    linkReferences\n  };\n}\n\nexports.forBytecode = forBytecode;","map":{"version":3,"mappings":";;;;;;;AAEA,SAAgBA,YAAhB,CAA6BC,SAA7B,EAA6C;EAC3C;EACA,OAAOC,MAAM,CAACC,MAAP,CAAcF,SAAd,EAAyBG,GAAzB,CAA6BC,WAA7B,CAAP;AACD;;AAHDC;;AAKA,SAAgBD,WAAhB,CAA4BE,QAA5B,EAAyC;EACvC,MAAM;IACJC,YADI;IAEJC,aAFI;IAGJC,UAHI;IAIJC,MAJI;IAKJC,SALI;IAMJC,iBANI;IAOJC,SAPI;IAQJC,GARI;IASJC,GATI;IAUJC,QAVI;IAWJC,QAXI;IAYJC,gBAZI;IAaJC,QAbI;IAcJC,MAdI;IAeJC,OAfI;IAgBJC,mBAhBI;IAiBJC,gBAjBI;IAkBJC,wBAlBI;IAmBJC;EAnBI,IAoBFnB,QApBJ;EAsBA,OAAO;IACLC,YAAY,EAAEC,aAAa,IAAID,YAD1B;IAELE,UAFK;IAGLC,MAHK;IAILC,SAJK;IAKLC,iBALK;IAMLC,SANK;IAOLC,GAPK;IAQLC,GARK;IASLC,QATK;IAULC,QAAQ,EAAES,WAAW,CAACT,QAAD,CAVhB;IAWLC,gBAAgB,EAAEQ,WAAW,CAACR,gBAAD,CAXxB;IAYLC,QAZK;IAaLC,MAbK;IAcLC,OAdK;IAeLC,mBAfK;IAgBLC,gBAhBK;IAiBLC,wBAjBK;IAkBLC;EAlBK,CAAP;AAoBD;;AA3CDpB;;AA6CA,SAAgBqB,WAAhB,CAA4BT,QAA5B,EAA4C;EAC1C,IAAI,CAACA,QAAL,EAAe;IACb,OAAOU,SAAP;EACD;;EACD,IAAI,OAAOV,QAAP,KAAoB,QAAxB,EAAkC;IAChC,OAAOA,QAAP;EACD;;EAED,MAAMW,cAAc,GAAoB,EAAxC;EAEA,MAAMC,KAAK,GAAGZ,QAAQ,CACnBa,KADW,CACL,CADK,EACF;EADE,CAEXC,OAFW,CAEH,YAFG,EAEW,CAACC,aAAD,EAAgBC,eAAhB,KAAmC;IACxD,MAAM,GAAGC,IAAH,IAAWF,aAAa,CAACG,KAAd,CAAoB,aAApB,CAAjB;IAEA,MAAMC,eAAe,GAAGJ,aAAa,CAACK,MAAtC;IAEA,MAAMC,MAAM,GAAGL,eAAe,GAAG,CAAjC;IACA,MAAMI,MAAM,GAAGD,eAAe,GAAG,CAAjC;IAEAR,cAAc,CAACW,IAAf,CAAoB;MAClBC,OAAO,EAAE,CAACF,MAAD,CADS;MAElBJ,IAFkB;MAGlBG;IAHkB,CAApB;IAMA,OAAO,IAAII,MAAJ,CAAWL,eAAX,CAAP;EACD,CAjBW,CAAd;EAmBA,OAAO;IAAEP,KAAF;IAASD;EAAT,CAAP;AACD;;AA9BDvB","names":["forContracts","contracts","Object","values","map","forContract","exports","contract","contractName","contract_name","sourcePath","source","sourceMap","deployedSourceMap","legacyAST","ast","abi","metadata","bytecode","deployedBytecode","compiler","devdoc","userdoc","immutableReferences","generatedSources","deployedGeneratedSources","db","forBytecode","undefined","linkReferences","bytes","slice","replace","linkReference","characterOffset","name","match","characterLength","length","offset","push","offsets","repeat"],"sourceRoot":"","sources":["../../../src/shims/LegacyToNew.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}