{"ast":null,"code":"export var SelectorType;\n\n(function (SelectorType) {\n  SelectorType[\"Attribute\"] = \"attribute\";\n  SelectorType[\"Pseudo\"] = \"pseudo\";\n  SelectorType[\"PseudoElement\"] = \"pseudo-element\";\n  SelectorType[\"Tag\"] = \"tag\";\n  SelectorType[\"Universal\"] = \"universal\"; // Traversals\n\n  SelectorType[\"Adjacent\"] = \"adjacent\";\n  SelectorType[\"Child\"] = \"child\";\n  SelectorType[\"Descendant\"] = \"descendant\";\n  SelectorType[\"Parent\"] = \"parent\";\n  SelectorType[\"Sibling\"] = \"sibling\";\n  SelectorType[\"ColumnCombinator\"] = \"column-combinator\";\n})(SelectorType || (SelectorType = {}));\n/**\n * Modes for ignore case.\n *\n * This could be updated to an enum, and the object is\n * the current stand-in that will allow code to be updated\n * without big changes.\n */\n\n\nexport const IgnoreCaseMode = {\n  Unknown: null,\n  QuirksMode: \"quirks\",\n  IgnoreCase: true,\n  CaseSensitive: false\n};\nexport var AttributeAction;\n\n(function (AttributeAction) {\n  AttributeAction[\"Any\"] = \"any\";\n  AttributeAction[\"Element\"] = \"element\";\n  AttributeAction[\"End\"] = \"end\";\n  AttributeAction[\"Equals\"] = \"equals\";\n  AttributeAction[\"Exists\"] = \"exists\";\n  AttributeAction[\"Hyphen\"] = \"hyphen\";\n  AttributeAction[\"Not\"] = \"not\";\n  AttributeAction[\"Start\"] = \"start\";\n})(AttributeAction || (AttributeAction = {}));","map":{"version":3,"names":["SelectorType","IgnoreCaseMode","Unknown","QuirksMode","IgnoreCase","CaseSensitive","AttributeAction"],"sources":["/Users/soheilvafaei/Documents/resume/Web3/web3 simple react web3 js/node_modules/css-what/lib/es/types.js"],"sourcesContent":["export var SelectorType;\n(function (SelectorType) {\n    SelectorType[\"Attribute\"] = \"attribute\";\n    SelectorType[\"Pseudo\"] = \"pseudo\";\n    SelectorType[\"PseudoElement\"] = \"pseudo-element\";\n    SelectorType[\"Tag\"] = \"tag\";\n    SelectorType[\"Universal\"] = \"universal\";\n    // Traversals\n    SelectorType[\"Adjacent\"] = \"adjacent\";\n    SelectorType[\"Child\"] = \"child\";\n    SelectorType[\"Descendant\"] = \"descendant\";\n    SelectorType[\"Parent\"] = \"parent\";\n    SelectorType[\"Sibling\"] = \"sibling\";\n    SelectorType[\"ColumnCombinator\"] = \"column-combinator\";\n})(SelectorType || (SelectorType = {}));\n/**\n * Modes for ignore case.\n *\n * This could be updated to an enum, and the object is\n * the current stand-in that will allow code to be updated\n * without big changes.\n */\nexport const IgnoreCaseMode = {\n    Unknown: null,\n    QuirksMode: \"quirks\",\n    IgnoreCase: true,\n    CaseSensitive: false,\n};\nexport var AttributeAction;\n(function (AttributeAction) {\n    AttributeAction[\"Any\"] = \"any\";\n    AttributeAction[\"Element\"] = \"element\";\n    AttributeAction[\"End\"] = \"end\";\n    AttributeAction[\"Equals\"] = \"equals\";\n    AttributeAction[\"Exists\"] = \"exists\";\n    AttributeAction[\"Hyphen\"] = \"hyphen\";\n    AttributeAction[\"Not\"] = \"not\";\n    AttributeAction[\"Start\"] = \"start\";\n})(AttributeAction || (AttributeAction = {}));\n"],"mappings":"AAAA,OAAO,IAAIA,YAAJ;;AACP,CAAC,UAAUA,YAAV,EAAwB;EACrBA,YAAY,CAAC,WAAD,CAAZ,GAA4B,WAA5B;EACAA,YAAY,CAAC,QAAD,CAAZ,GAAyB,QAAzB;EACAA,YAAY,CAAC,eAAD,CAAZ,GAAgC,gBAAhC;EACAA,YAAY,CAAC,KAAD,CAAZ,GAAsB,KAAtB;EACAA,YAAY,CAAC,WAAD,CAAZ,GAA4B,WAA5B,CALqB,CAMrB;;EACAA,YAAY,CAAC,UAAD,CAAZ,GAA2B,UAA3B;EACAA,YAAY,CAAC,OAAD,CAAZ,GAAwB,OAAxB;EACAA,YAAY,CAAC,YAAD,CAAZ,GAA6B,YAA7B;EACAA,YAAY,CAAC,QAAD,CAAZ,GAAyB,QAAzB;EACAA,YAAY,CAAC,SAAD,CAAZ,GAA0B,SAA1B;EACAA,YAAY,CAAC,kBAAD,CAAZ,GAAmC,mBAAnC;AACH,CAbD,EAaGA,YAAY,KAAKA,YAAY,GAAG,EAApB,CAbf;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,MAAMC,cAAc,GAAG;EAC1BC,OAAO,EAAE,IADiB;EAE1BC,UAAU,EAAE,QAFc;EAG1BC,UAAU,EAAE,IAHc;EAI1BC,aAAa,EAAE;AAJW,CAAvB;AAMP,OAAO,IAAIC,eAAJ;;AACP,CAAC,UAAUA,eAAV,EAA2B;EACxBA,eAAe,CAAC,KAAD,CAAf,GAAyB,KAAzB;EACAA,eAAe,CAAC,SAAD,CAAf,GAA6B,SAA7B;EACAA,eAAe,CAAC,KAAD,CAAf,GAAyB,KAAzB;EACAA,eAAe,CAAC,QAAD,CAAf,GAA4B,QAA5B;EACAA,eAAe,CAAC,QAAD,CAAf,GAA4B,QAA5B;EACAA,eAAe,CAAC,QAAD,CAAf,GAA4B,QAA5B;EACAA,eAAe,CAAC,KAAD,CAAf,GAAyB,KAAzB;EACAA,eAAe,CAAC,OAAD,CAAf,GAA2B,OAA3B;AACH,CATD,EASGA,eAAe,KAAKA,eAAe,GAAG,EAAvB,CATlB"},"metadata":{},"sourceType":"module"}