{"ast":null,"code":"export function integerLogLike(v) {\n  return Math.floor(Math.log(v) / Math.log(2));\n}\nexport function bigIntLogLike(v) {\n  if (v === BigInt(0)) return BigInt(0);\n  return BigInt(v.toString().length);\n}\n\nfunction biasNumericRange(min, max, logLike) {\n  if (min === max) {\n    return [{\n      min: min,\n      max: max\n    }];\n  }\n\n  if (min < 0 && max > 0) {\n    const logMin = logLike(-min);\n    const logMax = logLike(max);\n    return [{\n      min: -logMin,\n      max: logMax\n    }, {\n      min: max - logMax,\n      max: max\n    }, {\n      min: min,\n      max: min + logMin\n    }];\n  }\n\n  const logGap = logLike(max - min);\n  const arbCloseToMin = {\n    min: min,\n    max: min + logGap\n  };\n  const arbCloseToMax = {\n    min: max - logGap,\n    max: max\n  };\n  return min < 0 ? [arbCloseToMax, arbCloseToMin] : [arbCloseToMin, arbCloseToMax];\n}\n\nexport { biasNumericRange };","map":{"version":3,"names":["integerLogLike","v","Math","floor","log","bigIntLogLike","BigInt","toString","length","biasNumericRange","min","max","logLike","logMin","logMax","logGap","arbCloseToMin","arbCloseToMax"],"sources":["/Users/soheilvafaei/Documents/project/web/web3/ex7/node_modules/fast-check/lib/esm/arbitrary/_internals/helpers/BiasNumericRange.js"],"sourcesContent":["export function integerLogLike(v) {\n    return Math.floor(Math.log(v) / Math.log(2));\n}\nexport function bigIntLogLike(v) {\n    if (v === BigInt(0))\n        return BigInt(0);\n    return BigInt(v.toString().length);\n}\nfunction biasNumericRange(min, max, logLike) {\n    if (min === max) {\n        return [{ min: min, max: max }];\n    }\n    if (min < 0 && max > 0) {\n        const logMin = logLike(-min);\n        const logMax = logLike(max);\n        return [\n            { min: -logMin, max: logMax },\n            { min: (max - logMax), max: max },\n            { min: min, max: min + logMin },\n        ];\n    }\n    const logGap = logLike((max - min));\n    const arbCloseToMin = { min: min, max: min + logGap };\n    const arbCloseToMax = { min: (max - logGap), max: max };\n    return min < 0\n        ? [arbCloseToMax, arbCloseToMin]\n        : [arbCloseToMin, arbCloseToMax];\n}\nexport { biasNumericRange };\n"],"mappings":"AAAA,OAAO,SAASA,cAAT,CAAwBC,CAAxB,EAA2B;EAC9B,OAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,GAAL,CAASH,CAAT,IAAcC,IAAI,CAACE,GAAL,CAAS,CAAT,CAAzB,CAAP;AACH;AACD,OAAO,SAASC,aAAT,CAAuBJ,CAAvB,EAA0B;EAC7B,IAAIA,CAAC,KAAKK,MAAM,CAAC,CAAD,CAAhB,EACI,OAAOA,MAAM,CAAC,CAAD,CAAb;EACJ,OAAOA,MAAM,CAACL,CAAC,CAACM,QAAF,GAAaC,MAAd,CAAb;AACH;;AACD,SAASC,gBAAT,CAA0BC,GAA1B,EAA+BC,GAA/B,EAAoCC,OAApC,EAA6C;EACzC,IAAIF,GAAG,KAAKC,GAAZ,EAAiB;IACb,OAAO,CAAC;MAAED,GAAG,EAAEA,GAAP;MAAYC,GAAG,EAAEA;IAAjB,CAAD,CAAP;EACH;;EACD,IAAID,GAAG,GAAG,CAAN,IAAWC,GAAG,GAAG,CAArB,EAAwB;IACpB,MAAME,MAAM,GAAGD,OAAO,CAAC,CAACF,GAAF,CAAtB;IACA,MAAMI,MAAM,GAAGF,OAAO,CAACD,GAAD,CAAtB;IACA,OAAO,CACH;MAAED,GAAG,EAAE,CAACG,MAAR;MAAgBF,GAAG,EAAEG;IAArB,CADG,EAEH;MAAEJ,GAAG,EAAGC,GAAG,GAAGG,MAAd;MAAuBH,GAAG,EAAEA;IAA5B,CAFG,EAGH;MAAED,GAAG,EAAEA,GAAP;MAAYC,GAAG,EAAED,GAAG,GAAGG;IAAvB,CAHG,CAAP;EAKH;;EACD,MAAME,MAAM,GAAGH,OAAO,CAAED,GAAG,GAAGD,GAAR,CAAtB;EACA,MAAMM,aAAa,GAAG;IAAEN,GAAG,EAAEA,GAAP;IAAYC,GAAG,EAAED,GAAG,GAAGK;EAAvB,CAAtB;EACA,MAAME,aAAa,GAAG;IAAEP,GAAG,EAAGC,GAAG,GAAGI,MAAd;IAAuBJ,GAAG,EAAEA;EAA5B,CAAtB;EACA,OAAOD,GAAG,GAAG,CAAN,GACD,CAACO,aAAD,EAAgBD,aAAhB,CADC,GAED,CAACA,aAAD,EAAgBC,aAAhB,CAFN;AAGH;;AACD,SAASR,gBAAT"},"metadata":{},"sourceType":"module"}