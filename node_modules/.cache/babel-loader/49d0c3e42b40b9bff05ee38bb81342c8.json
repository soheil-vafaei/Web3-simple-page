{"ast":null,"code":"import { default as defaultOptions, flatten as flattenOptions } from './options.js';\nimport * as staticMethods from './static.js';\nimport { Cheerio } from './cheerio.js';\nimport { isHtml, isCheerio } from './utils.js';\nexport function getLoad(parse, render) {\n  /**\n   * Create a querying function, bound to a document created from the provided markup.\n   *\n   * Note that similar to web browser contexts, this operation may introduce\n   * `<html>`, `<head>`, and `<body>` elements; set `isDocument` to `false` to\n   * switch to fragment mode and disable this.\n   *\n   * @param content - Markup to be loaded.\n   * @param options - Options for the created instance.\n   * @param isDocument - Allows parser to be switched to fragment mode.\n   * @returns The loaded document.\n   * @see {@link https://cheerio.js.org#loading} for additional usage information.\n   */\n  return function load(content, options) {\n    let isDocument = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n    if (content == null) {\n      throw new Error('cheerio.load() expects a string');\n    }\n\n    const internalOpts = { ...defaultOptions,\n      ...flattenOptions(options)\n    };\n    const initialRoot = parse(content, internalOpts, isDocument, null);\n    /** Create an extended class here, so that extensions only live on one instance. */\n\n    class LoadedCheerio extends Cheerio {\n      _make(selector, context) {\n        const cheerio = initialize(selector, context);\n        cheerio.prevObject = this;\n        return cheerio;\n      }\n\n      _parse(content, options, isDocument, context) {\n        return parse(content, options, isDocument, context);\n      }\n\n      _render(dom) {\n        return render(dom, this.options);\n      }\n\n    }\n\n    function initialize(selector, context) {\n      let root = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : initialRoot;\n      let opts = arguments.length > 3 ? arguments[3] : undefined;\n      // $($)\n      if (selector && isCheerio(selector)) return selector;\n      const options = { ...internalOpts,\n        ...flattenOptions(opts)\n      };\n      const r = typeof root === 'string' ? [parse(root, options, false, null)] : 'length' in root ? root : [root];\n      const rootInstance = isCheerio(r) ? r : new LoadedCheerio(r, null, options); // Add a cyclic reference, so that calling methods on `_root` never fails.\n\n      rootInstance._root = rootInstance; // $(), $(null), $(undefined), $(false)\n\n      if (!selector) {\n        return new LoadedCheerio(undefined, rootInstance, options);\n      }\n\n      const elements = typeof selector === 'string' && isHtml(selector) ? // $(<html>)\n      parse(selector, options, false, null).children : isNode(selector) ? // $(dom)\n      [selector] : Array.isArray(selector) ? // $([dom])\n      selector : undefined;\n      const instance = new LoadedCheerio(elements, rootInstance, options);\n\n      if (elements) {\n        return instance;\n      }\n\n      if (typeof selector !== 'string') {\n        throw new Error('Unexpected type of selector');\n      } // We know that our selector is a string now.\n\n\n      let search = selector;\n      const searchContext = !context ? // If we don't have a context, maybe we have a root, from loading\n      rootInstance : typeof context === 'string' ? isHtml(context) ? // $('li', '<ul>...</ul>')\n      new LoadedCheerio([parse(context, options, false, null)], rootInstance, options) : ( // $('li', 'ul')\n      search = `${context} ${search}`, rootInstance) : isCheerio(context) ? // $('li', $)\n      context : // $('li', node), $('li', [nodes])\n      new LoadedCheerio(Array.isArray(context) ? context : [context], rootInstance, options); // If we still don't have a context, return\n\n      if (!searchContext) return instance;\n      /*\n       * #id, .class, tag\n       */\n\n      return searchContext.find(search);\n    } // Add in static methods & properties\n\n\n    Object.assign(initialize, staticMethods, {\n      load,\n      // `_root` and `_options` are used in static methods.\n      _root: initialRoot,\n      _options: internalOpts,\n      // Add `fn` for plugins\n      fn: LoadedCheerio.prototype,\n      // Add the prototype here to maintain `instanceof` behavior.\n      prototype: LoadedCheerio.prototype\n    });\n    return initialize;\n  };\n}\n\nfunction isNode(obj) {\n  return !!obj.name || obj.type === 'root' || obj.type === 'text' || obj.type === 'comment';\n}","map":{"version":3,"mappings":"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","names":["default","defaultOptions","flatten","flattenOptions","staticMethods","Cheerio","isHtml","isCheerio","getLoad","parse","render","load","content","options","isDocument","Error","internalOpts","initialRoot","LoadedCheerio","_make","selector","context","cheerio","initialize","prevObject","_parse","_render","dom","root","opts","r","rootInstance","_root","undefined","elements","children","isNode","Array","isArray","instance","search","searchContext","find","Object","assign","_options","fn","prototype","obj","name","type"],"sourceRoot":"https://raw.githubusercontent.com/cheeriojs/cheerio/d1cbc66d53392ce8bf6cd0068f675836372d2bf3/src/","sources":["load.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}