{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\n\nvar baseTransaction_1 = require(\"./baseTransaction\");\n\nvar types_1 = require(\"./types\");\n\nvar util_1 = require(\"./util\");\n\nvar TRANSACTION_TYPE = 2;\nvar TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex');\n/**\n * Typed transaction with a new gas fee market mechanism\n *\n * - TransactionType: 2\n * - EIP: [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559)\n */\n\nvar FeeMarketEIP1559Transaction =\n/** @class */\nfunction (_super) {\n  __extends(FeeMarketEIP1559Transaction, _super);\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n\n\n  function FeeMarketEIP1559Transaction(txData, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    var _this = this;\n\n    var _a, _b;\n\n    _this = _super.call(this, __assign(__assign({}, txData), {\n      type: TRANSACTION_TYPE\n    }), opts) || this;\n    /**\n     * The default HF if the tx type is active on that HF\n     * or the first greater HF where the tx is active.\n     *\n     * @hidden\n     */\n\n    _this.DEFAULT_HARDFORK = 'london';\n    var chainId = txData.chainId,\n        accessList = txData.accessList,\n        maxFeePerGas = txData.maxFeePerGas,\n        maxPriorityFeePerGas = txData.maxPriorityFeePerGas;\n    _this.common = _this._getCommon(opts.common, chainId);\n    _this.chainId = _this.common.chainIdBN();\n\n    if (!_this.common.isActivatedEIP(1559)) {\n      throw new Error('EIP-1559 not enabled on Common');\n    }\n\n    _this.activeCapabilities = _this.activeCapabilities.concat([1559, 2718, 2930]); // Populate the access list fields\n\n    var accessListData = util_1.AccessLists.getAccessListData(accessList !== null && accessList !== void 0 ? accessList : []);\n    _this.accessList = accessListData.accessList;\n    _this.AccessListJSON = accessListData.AccessListJSON; // Verify the access list format.\n\n    util_1.AccessLists.verifyAccessList(_this.accessList);\n    _this.maxFeePerGas = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(maxFeePerGas === '' ? '0x' : maxFeePerGas));\n    _this.maxPriorityFeePerGas = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(maxPriorityFeePerGas === '' ? '0x' : maxPriorityFeePerGas));\n\n    _this._validateCannotExceedMaxInteger({\n      maxFeePerGas: _this.maxFeePerGas,\n      maxPriorityFeePerGas: _this.maxPriorityFeePerGas\n    });\n\n    if (_this.gasLimit.mul(_this.maxFeePerGas).gt(ethereumjs_util_1.MAX_INTEGER)) {\n      var msg = _this._errorMsg('gasLimit * maxFeePerGas cannot exceed MAX_INTEGER (2^256-1)');\n\n      throw new Error(msg);\n    }\n\n    if (_this.maxFeePerGas.lt(_this.maxPriorityFeePerGas)) {\n      var msg = _this._errorMsg('maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)');\n\n      throw new Error(msg);\n    }\n\n    if (_this.v && !_this.v.eqn(0) && !_this.v.eqn(1)) {\n      var msg = _this._errorMsg('The y-parity of the transaction should either be 0 or 1');\n\n      throw new Error(msg);\n    }\n\n    if (_this.common.gteHardfork('homestead') && ((_a = _this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n      var msg = _this._errorMsg('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n\n      throw new Error(msg);\n    }\n\n    if (_this.common.isActivatedEIP(3860)) {\n      (0, util_1.checkMaxInitCodeSize)(_this.common, _this.data.length);\n    }\n\n    var freeze = (_b = opts === null || opts === void 0 ? void 0 : opts.freeze) !== null && _b !== void 0 ? _b : true;\n\n    if (freeze) {\n      Object.freeze(_this);\n    }\n\n    return _this;\n  }\n\n  Object.defineProperty(FeeMarketEIP1559Transaction.prototype, \"senderR\", {\n    /**\n     * EIP-2930 alias for `r`\n     *\n     * @deprecated use `r` instead\n     */\n    get: function () {\n      return this.r;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FeeMarketEIP1559Transaction.prototype, \"senderS\", {\n    /**\n     * EIP-2930 alias for `s`\n     *\n     * @deprecated use `s` instead\n     */\n    get: function () {\n      return this.s;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FeeMarketEIP1559Transaction.prototype, \"yParity\", {\n    /**\n     * EIP-2930 alias for `v`\n     *\n     * @deprecated use `v` instead\n     */\n    get: function () {\n      return this.v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, v, r, s }\n   *\n   * Notes:\n   * - `chainId` will be set automatically if not provided\n   * - All parameters are optional and have some basic default values\n   */\n\n  FeeMarketEIP1559Transaction.fromTxData = function (txData, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    return new FeeMarketEIP1559Transaction(txData, opts);\n  };\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS])`\n   */\n\n\n  FeeMarketEIP1559Transaction.fromSerializedTx = function (serialized, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n      throw new Error(\"Invalid serialized tx input: not an EIP-1559 transaction (wrong tx type, expected: \".concat(TRANSACTION_TYPE, \", received: \").concat(serialized.slice(0, 1).toString('hex')));\n    }\n\n    var values = ethereumjs_util_1.rlp.decode(serialized.slice(1));\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input: must be array');\n    }\n\n    return FeeMarketEIP1559Transaction.fromValuesArray(values, opts);\n  };\n  /**\n   * Instantiate a transaction from the serialized tx.\n   * (alias of {@link FeeMarketEIP1559Transaction.fromSerializedTx})\n   *\n   * Note: This means that the Buffer should start with 0x01.\n   *\n   * @deprecated this constructor alias is deprecated and will be removed\n   * in favor of the {@link FeeMarketEIP1559Transaction.fromSerializedTx} constructor\n   */\n\n\n  FeeMarketEIP1559Transaction.fromRlpSerializedTx = function (serialized, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    return FeeMarketEIP1559Transaction.fromSerializedTx(serialized, opts);\n  };\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS]`\n   */\n\n\n  FeeMarketEIP1559Transaction.fromValuesArray = function (values, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    if (values.length !== 9 && values.length !== 12) {\n      throw new Error('Invalid EIP-1559 transaction. Only expecting 9 values (for unsigned tx) or 12 values (for signed tx).');\n    }\n\n    var _a = __read(values, 12),\n        chainId = _a[0],\n        nonce = _a[1],\n        maxPriorityFeePerGas = _a[2],\n        maxFeePerGas = _a[3],\n        gasLimit = _a[4],\n        to = _a[5],\n        value = _a[6],\n        data = _a[7],\n        accessList = _a[8],\n        v = _a[9],\n        r = _a[10],\n        s = _a[11];\n\n    (0, ethereumjs_util_1.validateNoLeadingZeroes)({\n      nonce: nonce,\n      maxPriorityFeePerGas: maxPriorityFeePerGas,\n      maxFeePerGas: maxFeePerGas,\n      gasLimit: gasLimit,\n      value: value,\n      v: v,\n      r: r,\n      s: s\n    });\n    return new FeeMarketEIP1559Transaction({\n      chainId: new ethereumjs_util_1.BN(chainId),\n      nonce: nonce,\n      maxPriorityFeePerGas: maxPriorityFeePerGas,\n      maxFeePerGas: maxFeePerGas,\n      gasLimit: gasLimit,\n      to: to,\n      value: value,\n      data: data,\n      accessList: accessList !== null && accessList !== void 0 ? accessList : [],\n      v: v !== undefined ? new ethereumjs_util_1.BN(v) : undefined,\n      r: r,\n      s: s\n    }, opts);\n  };\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n\n\n  FeeMarketEIP1559Transaction.prototype.getDataFee = function () {\n    if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n      return this.cache.dataFee.value;\n    }\n\n    var cost = _super.prototype.getDataFee.call(this);\n\n    cost.iaddn(util_1.AccessLists.getDataFeeEIP2930(this.accessList, this.common));\n\n    if (Object.isFrozen(this)) {\n      this.cache.dataFee = {\n        value: cost,\n        hardfork: this.common.hardfork()\n      };\n    }\n\n    return cost;\n  };\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   * @param baseFee The base fee of the block (will be set to 0 if not provided)\n   */\n\n\n  FeeMarketEIP1559Transaction.prototype.getUpfrontCost = function (baseFee) {\n    if (baseFee === void 0) {\n      baseFee = new ethereumjs_util_1.BN(0);\n    }\n\n    var inclusionFeePerGas = ethereumjs_util_1.BN.min(this.maxPriorityFeePerGas, this.maxFeePerGas.sub(baseFee));\n    var gasPrice = inclusionFeePerGas.add(baseFee);\n    return this.gasLimit.mul(gasPrice).add(this.value);\n  };\n  /**\n   * Returns a Buffer Array of the raw Buffers of the EIP-1559 transaction, in order.\n   *\n   * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS]`\n   *\n   * Use {@link FeeMarketEIP1559Transaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link FeeMarketEIP1559Transaction.getMessageToSign}.\n   */\n\n\n  FeeMarketEIP1559Transaction.prototype.raw = function () {\n    return [(0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.chainId), (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.nonce), (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.maxPriorityFeePerGas), (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.maxFeePerGas), (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasLimit), this.to !== undefined ? this.to.buf : Buffer.from([]), (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.value), this.data, this.accessList, this.v !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.v) : Buffer.from([]), this.r !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.r) : Buffer.from([]), this.s !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.s) : Buffer.from([])];\n  };\n  /**\n   * Returns the serialized encoding of the EIP-1559 transaction.\n   *\n   * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS])`\n   *\n   * Note that in contrast to the legacy tx serialization format this is not\n   * valid RLP any more due to the raw tx type preceding and concatenated to\n   * the RLP encoding of the values.\n   */\n\n\n  FeeMarketEIP1559Transaction.prototype.serialize = function () {\n    var base = this.raw();\n    return Buffer.concat([TRANSACTION_TYPE_BUFFER, ethereumjs_util_1.rlp.encode(base)]);\n  };\n  /**\n   * Returns the serialized unsigned tx (hashed or raw), which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: in contrast to the legacy tx the raw message format is already\n   * serialized and doesn't need to be RLP encoded any more.\n   *\n   * ```javascript\n   * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n   * ```\n   *\n   * @param hashMessage - Return hashed message if set to true (default: true)\n   */\n\n\n  FeeMarketEIP1559Transaction.prototype.getMessageToSign = function (hashMessage) {\n    if (hashMessage === void 0) {\n      hashMessage = true;\n    }\n\n    var base = this.raw().slice(0, 9);\n    var message = Buffer.concat([TRANSACTION_TYPE_BUFFER, ethereumjs_util_1.rlp.encode(base)]);\n\n    if (hashMessage) {\n      return (0, ethereumjs_util_1.keccak256)(message);\n    } else {\n      return message;\n    }\n  };\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link FeeMarketEIP1559Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n\n\n  FeeMarketEIP1559Transaction.prototype.hash = function () {\n    if (!this.isSigned()) {\n      var msg = this._errorMsg('Cannot call hash method if transaction is not signed');\n\n      throw new Error(msg);\n    }\n\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = (0, ethereumjs_util_1.keccak256)(this.serialize());\n      }\n\n      return this.cache.hash;\n    }\n\n    return (0, ethereumjs_util_1.keccak256)(this.serialize());\n  };\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n\n\n  FeeMarketEIP1559Transaction.prototype.getMessageToVerifySignature = function () {\n    return this.getMessageToSign();\n  };\n  /**\n   * Returns the public key of the sender\n   */\n\n\n  FeeMarketEIP1559Transaction.prototype.getSenderPublicKey = function () {\n    var _a;\n\n    if (!this.isSigned()) {\n      var msg = this._errorMsg('Cannot call this method if transaction is not signed');\n\n      throw new Error(msg);\n    }\n\n    var msgHash = this.getMessageToVerifySignature(); // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n    // Reasoning: https://ethereum.stackexchange.com/a/55728\n\n    if (this.common.gteHardfork('homestead') && ((_a = this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n      var msg = this._errorMsg('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n\n      throw new Error(msg);\n    }\n\n    var _b = this,\n        v = _b.v,\n        r = _b.r,\n        s = _b.s;\n\n    try {\n      return (0, ethereumjs_util_1.ecrecover)(msgHash, v.addn(27), // Recover the 27 which was stripped from ecsign\n      (0, ethereumjs_util_1.bnToUnpaddedBuffer)(r), (0, ethereumjs_util_1.bnToUnpaddedBuffer)(s));\n    } catch (e) {\n      var msg = this._errorMsg('Invalid Signature');\n\n      throw new Error(msg);\n    }\n  };\n\n  FeeMarketEIP1559Transaction.prototype._processSignature = function (v, r, s) {\n    var opts = __assign(__assign({}, this.txOptions), {\n      common: this.common\n    });\n\n    return FeeMarketEIP1559Transaction.fromTxData({\n      chainId: this.chainId,\n      nonce: this.nonce,\n      maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n      maxFeePerGas: this.maxFeePerGas,\n      gasLimit: this.gasLimit,\n      to: this.to,\n      value: this.value,\n      data: this.data,\n      accessList: this.accessList,\n      v: new ethereumjs_util_1.BN(v - 27),\n      r: new ethereumjs_util_1.BN(r),\n      s: new ethereumjs_util_1.BN(s)\n    }, opts);\n  };\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n\n\n  FeeMarketEIP1559Transaction.prototype.toJSON = function () {\n    var accessListJSON = util_1.AccessLists.getAccessListJSON(this.accessList);\n    return {\n      chainId: (0, ethereumjs_util_1.bnToHex)(this.chainId),\n      nonce: (0, ethereumjs_util_1.bnToHex)(this.nonce),\n      maxPriorityFeePerGas: (0, ethereumjs_util_1.bnToHex)(this.maxPriorityFeePerGas),\n      maxFeePerGas: (0, ethereumjs_util_1.bnToHex)(this.maxFeePerGas),\n      gasLimit: (0, ethereumjs_util_1.bnToHex)(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: (0, ethereumjs_util_1.bnToHex)(this.value),\n      data: '0x' + this.data.toString('hex'),\n      accessList: accessListJSON,\n      v: this.v !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.v) : undefined,\n      r: this.r !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.r) : undefined,\n      s: this.s !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.s) : undefined\n    };\n  };\n  /**\n   * Return a compact error string representation of the object\n   */\n\n\n  FeeMarketEIP1559Transaction.prototype.errorStr = function () {\n    var errorStr = this._getSharedErrorPostfix();\n\n    errorStr += \" maxFeePerGas=\".concat(this.maxFeePerGas, \" maxPriorityFeePerGas=\").concat(this.maxPriorityFeePerGas);\n    return errorStr;\n  };\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n\n\n  FeeMarketEIP1559Transaction.prototype._errorMsg = function (msg) {\n    return \"\".concat(msg, \" (\").concat(this.errorStr(), \")\");\n  };\n\n  return FeeMarketEIP1559Transaction;\n}(baseTransaction_1.BaseTransaction);\n\nexports.default = FeeMarketEIP1559Transaction;","map":{"version":3,"mappings":"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","names":["TRANSACTION_TYPE","TRANSACTION_TYPE_BUFFER","Buffer","from","toString","padStart","__extends","txData","opts","_super","type","_this","accessList","maxFeePerGas","maxPriorityFeePerGas","common","_getCommon","chainId","chainIdBN","isActivatedEIP","Error","activeCapabilities","concat","accessListData","util_1","getAccessListData","AccessListJSON","verifyAccessList","ethereumjs_util_1","_validateCannotExceedMaxInteger","gasLimit","mul","gt","msg","_errorMsg","lt","v","eqn","gteHardfork","s","_a","types_1","data","length","freeze","_b","Object","FeeMarketEIP1559Transaction","r","serialized","slice","equals","values","decode","Array","isArray","fromValuesArray","fromSerializedTx","nonce","to","value","undefined","cache","dataFee","hardfork","cost","getDataFee","call","iaddn","getDataFeeEIP2930","isFrozen","baseFee","inclusionFeePerGas","min","sub","gasPrice","add","buf","base","raw","encode","hashMessage","message","isSigned","hash","serialize","getMessageToSign","msgHash","getMessageToVerifySignature","addn","e","txOptions","fromTxData","accessListJSON","getAccessListJSON","errorStr","_getSharedErrorPostfix","baseTransaction_1"],"sourceRoot":"","sources":["../src/eip1559Transaction.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}