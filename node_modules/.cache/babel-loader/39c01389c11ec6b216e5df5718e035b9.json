{"ast":null,"code":"/*\nLanguage: SML (Standard ML)\nAuthor: Edwin Dalorzo <edwin@dalorzo.org>\nDescription: SML language definition.\nWebsite: https://www.smlnj.org\nOrigin: ocaml.js\nCategory: functional\n*/\nfunction sml(hljs) {\n  return {\n    name: 'SML (Standard ML)',\n    aliases: ['ml'],\n    keywords: {\n      $pattern: '[a-z_]\\\\w*!?',\n      keyword:\n      /* according to Definition of Standard ML 97  */\n      'abstype and andalso as case datatype do else end eqtype ' + 'exception fn fun functor handle if in include infix infixr ' + 'let local nonfix of op open orelse raise rec sharing sig ' + 'signature struct structure then type val with withtype where while',\n      built_in:\n      /* built-in types according to basis library */\n      'array bool char exn int list option order real ref string substring vector unit word',\n      literal: 'true false NONE SOME LESS EQUAL GREATER nil'\n    },\n    illegal: /\\/\\/|>>/,\n    contains: [{\n      className: 'literal',\n      begin: /\\[(\\|\\|)?\\]|\\(\\)/,\n      relevance: 0\n    }, hljs.COMMENT('\\\\(\\\\*', '\\\\*\\\\)', {\n      contains: ['self']\n    }), {\n      /* type variable */\n      className: 'symbol',\n      begin: '\\'[A-Za-z_](?!\\')[\\\\w\\']*'\n      /* the grammar is ambiguous on how 'a'b should be interpreted but not the compiler */\n\n    }, {\n      /* polymorphic variant */\n      className: 'type',\n      begin: '`[A-Z][\\\\w\\']*'\n    }, {\n      /* module or constructor */\n      className: 'type',\n      begin: '\\\\b[A-Z][\\\\w\\']*',\n      relevance: 0\n    }, {\n      /* don't color identifiers, but safely catch all identifiers with ' */\n      begin: '[a-z_]\\\\w*\\'[\\\\w\\']*'\n    }, hljs.inherit(hljs.APOS_STRING_MODE, {\n      className: 'string',\n      relevance: 0\n    }), hljs.inherit(hljs.QUOTE_STRING_MODE, {\n      illegal: null\n    }), {\n      className: 'number',\n      begin: '\\\\b(0[xX][a-fA-F0-9_]+[Lln]?|' + '0[oO][0-7_]+[Lln]?|' + '0[bB][01_]+[Lln]?|' + '[0-9][0-9_]*([Lln]|(\\\\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)',\n      relevance: 0\n    }, {\n      begin: /[-=]>/ // relevance booster\n\n    }]\n  };\n}\n\nmodule.exports = sml;","map":{"version":3,"names":["sml","hljs","name","aliases","keywords","$pattern","keyword","built_in","literal","illegal","contains","className","begin","relevance","COMMENT","inherit","APOS_STRING_MODE","QUOTE_STRING_MODE","module","exports"],"sources":["/Users/soheilvafaei/Documents/resume/Web3/web3 simple react web3 js/node_modules/highlight.js/lib/languages/sml.js"],"sourcesContent":["/*\nLanguage: SML (Standard ML)\nAuthor: Edwin Dalorzo <edwin@dalorzo.org>\nDescription: SML language definition.\nWebsite: https://www.smlnj.org\nOrigin: ocaml.js\nCategory: functional\n*/\nfunction sml(hljs) {\n  return {\n    name: 'SML (Standard ML)',\n    aliases: [ 'ml' ],\n    keywords: {\n      $pattern: '[a-z_]\\\\w*!?',\n      keyword:\n        /* according to Definition of Standard ML 97  */\n        'abstype and andalso as case datatype do else end eqtype ' +\n        'exception fn fun functor handle if in include infix infixr ' +\n        'let local nonfix of op open orelse raise rec sharing sig ' +\n        'signature struct structure then type val with withtype where while',\n      built_in:\n        /* built-in types according to basis library */\n        'array bool char exn int list option order real ref string substring vector unit word',\n      literal:\n        'true false NONE SOME LESS EQUAL GREATER nil'\n    },\n    illegal: /\\/\\/|>>/,\n    contains: [\n      {\n        className: 'literal',\n        begin: /\\[(\\|\\|)?\\]|\\(\\)/,\n        relevance: 0\n      },\n      hljs.COMMENT(\n        '\\\\(\\\\*',\n        '\\\\*\\\\)',\n        {\n          contains: [ 'self' ]\n        }\n      ),\n      { /* type variable */\n        className: 'symbol',\n        begin: '\\'[A-Za-z_](?!\\')[\\\\w\\']*'\n        /* the grammar is ambiguous on how 'a'b should be interpreted but not the compiler */\n      },\n      { /* polymorphic variant */\n        className: 'type',\n        begin: '`[A-Z][\\\\w\\']*'\n      },\n      { /* module or constructor */\n        className: 'type',\n        begin: '\\\\b[A-Z][\\\\w\\']*',\n        relevance: 0\n      },\n      { /* don't color identifiers, but safely catch all identifiers with ' */\n        begin: '[a-z_]\\\\w*\\'[\\\\w\\']*'\n      },\n      hljs.inherit(hljs.APOS_STRING_MODE, {\n        className: 'string',\n        relevance: 0\n      }),\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {\n        illegal: null\n      }),\n      {\n        className: 'number',\n        begin:\n          '\\\\b(0[xX][a-fA-F0-9_]+[Lln]?|' +\n          '0[oO][0-7_]+[Lln]?|' +\n          '0[bB][01_]+[Lln]?|' +\n          '[0-9][0-9_]*([Lln]|(\\\\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)',\n        relevance: 0\n      },\n      {\n        begin: /[-=]>/ // relevance booster\n      }\n    ]\n  };\n}\n\nmodule.exports = sml;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,GAAT,CAAaC,IAAb,EAAmB;EACjB,OAAO;IACLC,IAAI,EAAE,mBADD;IAELC,OAAO,EAAE,CAAE,IAAF,CAFJ;IAGLC,QAAQ,EAAE;MACRC,QAAQ,EAAE,cADF;MAERC,OAAO;MACL;MACA,6DACA,6DADA,GAEA,2DAFA,GAGA,oEAPM;MAQRC,QAAQ;MACN;MACA,sFAVM;MAWRC,OAAO,EACL;IAZM,CAHL;IAiBLC,OAAO,EAAE,SAjBJ;IAkBLC,QAAQ,EAAE,CACR;MACEC,SAAS,EAAE,SADb;MAEEC,KAAK,EAAE,kBAFT;MAGEC,SAAS,EAAE;IAHb,CADQ,EAMRZ,IAAI,CAACa,OAAL,CACE,QADF,EAEE,QAFF,EAGE;MACEJ,QAAQ,EAAE,CAAE,MAAF;IADZ,CAHF,CANQ,EAaR;MAAE;MACAC,SAAS,EAAE,QADb;MAEEC,KAAK,EAAE;MACP;;IAHF,CAbQ,EAkBR;MAAE;MACAD,SAAS,EAAE,MADb;MAEEC,KAAK,EAAE;IAFT,CAlBQ,EAsBR;MAAE;MACAD,SAAS,EAAE,MADb;MAEEC,KAAK,EAAE,kBAFT;MAGEC,SAAS,EAAE;IAHb,CAtBQ,EA2BR;MAAE;MACAD,KAAK,EAAE;IADT,CA3BQ,EA8BRX,IAAI,CAACc,OAAL,CAAad,IAAI,CAACe,gBAAlB,EAAoC;MAClCL,SAAS,EAAE,QADuB;MAElCE,SAAS,EAAE;IAFuB,CAApC,CA9BQ,EAkCRZ,IAAI,CAACc,OAAL,CAAad,IAAI,CAACgB,iBAAlB,EAAqC;MACnCR,OAAO,EAAE;IAD0B,CAArC,CAlCQ,EAqCR;MACEE,SAAS,EAAE,QADb;MAEEC,KAAK,EACH,kCACA,qBADA,GAEA,oBAFA,GAGA,wDANJ;MAOEC,SAAS,EAAE;IAPb,CArCQ,EA8CR;MACED,KAAK,EAAE,OADT,CACiB;;IADjB,CA9CQ;EAlBL,CAAP;AAqED;;AAEDM,MAAM,CAACC,OAAP,GAAiBnB,GAAjB"},"metadata":{},"sourceType":"script"}