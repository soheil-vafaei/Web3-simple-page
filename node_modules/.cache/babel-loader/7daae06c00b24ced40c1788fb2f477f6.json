{"ast":null,"code":"import { parse, SelectorType, isTraversal } from \"css-what\";\nimport { _compileToken as compileToken, prepareContext } from \"css-select\";\nimport * as DomUtils from \"domutils\";\nimport * as boolbase from \"boolbase\";\nimport { getDocumentRoot, groupSelectors } from \"./helpers.js\";\nimport { isFilter, getLimit } from \"./positionals.js\"; // Re-export pseudo extension points\n\nexport { filters, pseudos, aliases } from \"css-select\";\nconst UNIVERSAL_SELECTOR = {\n  type: SelectorType.Universal,\n  namespace: null\n};\nconst SCOPE_PSEUDO = {\n  type: SelectorType.Pseudo,\n  name: \"scope\",\n  data: null\n};\nexport function is(element, selector) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return some([element], selector, options);\n}\nexport function some(elements, selector) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (typeof selector === \"function\") return elements.some(selector);\n  const [plain, filtered] = groupSelectors(parse(selector));\n  return plain.length > 0 && elements.some(compileToken(plain, options)) || filtered.some(sel => filterBySelector(sel, elements, options).length > 0);\n}\n\nfunction filterByPosition(filter, elems, data, options) {\n  const num = typeof data === \"string\" ? parseInt(data, 10) : NaN;\n\n  switch (filter) {\n    case \"first\":\n    case \"lt\":\n      // Already done in `getLimit`\n      return elems;\n\n    case \"last\":\n      return elems.length > 0 ? [elems[elems.length - 1]] : elems;\n\n    case \"nth\":\n    case \"eq\":\n      return isFinite(num) && Math.abs(num) < elems.length ? [num < 0 ? elems[elems.length + num] : elems[num]] : [];\n\n    case \"gt\":\n      return isFinite(num) ? elems.slice(num + 1) : [];\n\n    case \"even\":\n      return elems.filter((_, i) => i % 2 === 0);\n\n    case \"odd\":\n      return elems.filter((_, i) => i % 2 === 1);\n\n    case \"not\":\n      {\n        const filtered = new Set(filterParsed(data, elems, options));\n        return elems.filter(e => !filtered.has(e));\n      }\n  }\n}\n\nexport function filter(selector, elements) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return filterParsed(parse(selector), elements, options);\n}\n/**\n * Filter a set of elements by a selector.\n *\n * Will return elements in the original order.\n *\n * @param selector Selector to filter by.\n * @param elements Elements to filter.\n * @param options Options for selector.\n */\n\nfunction filterParsed(selector, elements, options) {\n  if (elements.length === 0) return [];\n  const [plainSelectors, filteredSelectors] = groupSelectors(selector);\n  let found;\n\n  if (plainSelectors.length) {\n    const filtered = filterElements(elements, plainSelectors, options); // If there are no filters, just return\n\n    if (filteredSelectors.length === 0) {\n      return filtered;\n    } // Otherwise, we have to do some filtering\n\n\n    if (filtered.length) {\n      found = new Set(filtered);\n    }\n  }\n\n  for (let i = 0; i < filteredSelectors.length && (found === null || found === void 0 ? void 0 : found.size) !== elements.length; i++) {\n    const filteredSelector = filteredSelectors[i];\n    const missing = found ? elements.filter(e => DomUtils.isTag(e) && !found.has(e)) : elements;\n    if (missing.length === 0) break;\n    const filtered = filterBySelector(filteredSelector, elements, options);\n\n    if (filtered.length) {\n      if (!found) {\n        /*\n         * If we haven't found anything before the last selector,\n         * just return what we found now.\n         */\n        if (i === filteredSelectors.length - 1) {\n          return filtered;\n        }\n\n        found = new Set(filtered);\n      } else {\n        filtered.forEach(el => found.add(el));\n      }\n    }\n  }\n\n  return typeof found !== \"undefined\" ? found.size === elements.length ? elements : // Filter elements to preserve order\n  elements.filter(el => found.has(el)) : [];\n}\n\nfunction filterBySelector(selector, elements, options) {\n  var _a;\n\n  if (selector.some(isTraversal)) {\n    /*\n     * Get root node, run selector with the scope\n     * set to all of our nodes.\n     */\n    const root = (_a = options.root) !== null && _a !== void 0 ? _a : getDocumentRoot(elements[0]);\n    const opts = { ...options,\n      context: elements,\n      relativeSelector: false\n    };\n    selector.push(SCOPE_PSEUDO);\n    return findFilterElements(root, selector, opts, true, elements.length);\n  } // Performance optimization: If we don't have to traverse, just filter set.\n\n\n  return findFilterElements(elements, selector, options, false, elements.length);\n}\n\nexport function select(selector, root) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  let limit = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Infinity;\n\n  if (typeof selector === \"function\") {\n    return find(root, selector);\n  }\n\n  const [plain, filtered] = groupSelectors(parse(selector));\n  const results = filtered.map(sel => findFilterElements(root, sel, options, true, limit)); // Plain selectors can be queried in a single go\n\n  if (plain.length) {\n    results.push(findElements(root, plain, options, limit));\n  }\n\n  if (results.length === 0) {\n    return [];\n  } // If there was only a single selector, just return the result\n\n\n  if (results.length === 1) {\n    return results[0];\n  } // Sort results, filtering for duplicates\n\n\n  return DomUtils.uniqueSort(results.reduce((a, b) => [...a, ...b]));\n}\n/**\n *\n * @param root Element(s) to search from.\n * @param selector Selector to look for.\n * @param options Options for querying.\n * @param queryForSelector Query multiple levels deep for the initial selector, even if it doesn't contain a traversal.\n */\n\nfunction findFilterElements(root, selector, options, queryForSelector, totalLimit) {\n  const filterIndex = selector.findIndex(isFilter);\n  const sub = selector.slice(0, filterIndex);\n  const filter = selector[filterIndex]; // If we are at the end of the selector, we can limit the number of elements to retrieve.\n\n  const partLimit = selector.length - 1 === filterIndex ? totalLimit : Infinity;\n  /*\n   * Set the number of elements to retrieve.\n   * Eg. for :first, we only have to get a single element.\n   */\n\n  const limit = getLimit(filter.name, filter.data, partLimit);\n  if (limit === 0) return [];\n  /*\n   * Skip `findElements` call if our selector starts with a positional\n   * pseudo.\n   */\n\n  const elemsNoLimit = sub.length === 0 && !Array.isArray(root) ? DomUtils.getChildren(root).filter(DomUtils.isTag) : sub.length === 0 ? (Array.isArray(root) ? root : [root]).filter(DomUtils.isTag) : queryForSelector || sub.some(isTraversal) ? findElements(root, [sub], options, limit) : filterElements(root, [sub], options);\n  const elems = elemsNoLimit.slice(0, limit);\n  let result = filterByPosition(filter.name, elems, filter.data, options);\n\n  if (result.length === 0 || selector.length === filterIndex + 1) {\n    return result;\n  }\n\n  const remainingSelector = selector.slice(filterIndex + 1);\n  const remainingHasTraversal = remainingSelector.some(isTraversal);\n\n  if (remainingHasTraversal) {\n    if (isTraversal(remainingSelector[0])) {\n      const {\n        type\n      } = remainingSelector[0];\n\n      if (type === SelectorType.Sibling || type === SelectorType.Adjacent) {\n        // If we have a sibling traversal, we need to also look at the siblings.\n        result = prepareContext(result, DomUtils, true);\n      } // Avoid a traversal-first selector error.\n\n\n      remainingSelector.unshift(UNIVERSAL_SELECTOR);\n    }\n\n    options = { ...options,\n      // Avoid absolutizing the selector\n      relativeSelector: false,\n\n      /*\n       * Add a custom root func, to make sure traversals don't match elements\n       * that aren't a part of the considered tree.\n       */\n      rootFunc: el => result.includes(el)\n    };\n  } else if (options.rootFunc && options.rootFunc !== boolbase.trueFunc) {\n    options = { ...options,\n      rootFunc: boolbase.trueFunc\n    };\n  }\n  /*\n   * If we have another filter, recursively call `findFilterElements`,\n   * with the `recursive` flag disabled. We only have to look for more\n   * elements when we see a traversal.\n   *\n   * Otherwise,\n   */\n\n\n  return remainingSelector.some(isFilter) ? findFilterElements(result, remainingSelector, options, false, totalLimit) : remainingHasTraversal ? // Query existing elements to resolve traversal.\n  findElements(result, [remainingSelector], options, totalLimit) : // If we don't have any more traversals, simply filter elements.\n  filterElements(result, [remainingSelector], options);\n}\n\nfunction findElements(root, sel, options, limit) {\n  const query = compileToken(sel, options, root);\n  return find(root, query, limit);\n}\n\nfunction find(root, query) {\n  let limit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Infinity;\n  const elems = prepareContext(root, DomUtils, query.shouldTestNextSiblings);\n  return DomUtils.find(node => DomUtils.isTag(node) && query(node), elems, true, limit);\n}\n\nfunction filterElements(elements, sel, options) {\n  const els = (Array.isArray(elements) ? elements : [elements]).filter(DomUtils.isTag);\n  if (els.length === 0) return els;\n  const query = compileToken(sel, options);\n  return query === boolbase.trueFunc ? els : els.filter(query);\n}","map":{"version":3,"mappings":"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","names":["parse","SelectorType","isTraversal","_compileToken","compileToken","prepareContext","DomUtils","boolbase","getDocumentRoot","groupSelectors","isFilter","getLimit","filters","pseudos","aliases","UNIVERSAL_SELECTOR","type","Universal","namespace","SCOPE_PSEUDO","Pseudo","name","data","is","element","selector","options","some","elements","plain","filtered","length","sel","filterBySelector","filterByPosition","filter","elems","num","parseInt","NaN","isFinite","Math","abs","slice","_","i","Set","filterParsed","e","has","plainSelectors","filteredSelectors","found","filterElements","size","filteredSelector","missing","isTag","forEach","el","add","root","_a","opts","context","relativeSelector","push","findFilterElements","select","limit","Infinity","find","results","map","findElements","uniqueSort","reduce","a","b","queryForSelector","totalLimit","filterIndex","findIndex","sub","partLimit","elemsNoLimit","Array","isArray","getChildren","result","remainingSelector","remainingHasTraversal","Sibling","Adjacent","unshift","rootFunc","includes","trueFunc","query","shouldTestNextSiblings","node","els"],"sourceRoot":"https://raw.githubusercontent.com/cheeriojs/cheerio-select/ef063a6ca4c3f0d02d2fc3505e750b6fb81c448d/src/","sources":["index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}