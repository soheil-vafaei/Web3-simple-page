{"ast":null,"code":"/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n  return re.source;\n}\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\n\n\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\n\n\nfunction optional(re) {\n  return concat('(', re, ')?');\n}\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\n\n\nfunction concat() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  const joined = args.map(x => source(x)).join(\"\");\n  return joined;\n}\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] } args\n * @returns {string}\n */\n\n\nfunction either() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  const joined = '(' + args.map(x => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n/*\nLanguage: HTML, XML\nWebsite: https://www.w3.org/XML/\nCategory: common\nAudit: 2020\n*/\n\n/** @type LanguageFn */\n\n\nfunction xml(hljs) {\n  // Element names can contain letters, digits, hyphens, underscores, and periods\n  const TAG_NAME_RE = concat(/[A-Z_]/, optional(/[A-Z0-9_.-]*:/), /[A-Z0-9_.-]*/);\n  const XML_IDENT_RE = /[A-Za-z0-9._:-]+/;\n  const XML_ENTITIES = {\n    className: 'symbol',\n    begin: /&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/\n  };\n  const XML_META_KEYWORDS = {\n    begin: /\\s/,\n    contains: [{\n      className: 'meta-keyword',\n      begin: /#?[a-z_][a-z1-9_-]+/,\n      illegal: /\\n/\n    }]\n  };\n  const XML_META_PAR_KEYWORDS = hljs.inherit(XML_META_KEYWORDS, {\n    begin: /\\(/,\n    end: /\\)/\n  });\n  const APOS_META_STRING_MODE = hljs.inherit(hljs.APOS_STRING_MODE, {\n    className: 'meta-string'\n  });\n  const QUOTE_META_STRING_MODE = hljs.inherit(hljs.QUOTE_STRING_MODE, {\n    className: 'meta-string'\n  });\n  const TAG_INTERNALS = {\n    endsWithParent: true,\n    illegal: /</,\n    relevance: 0,\n    contains: [{\n      className: 'attr',\n      begin: XML_IDENT_RE,\n      relevance: 0\n    }, {\n      begin: /=\\s*/,\n      relevance: 0,\n      contains: [{\n        className: 'string',\n        endsParent: true,\n        variants: [{\n          begin: /\"/,\n          end: /\"/,\n          contains: [XML_ENTITIES]\n        }, {\n          begin: /'/,\n          end: /'/,\n          contains: [XML_ENTITIES]\n        }, {\n          begin: /[^\\s\"'=<>`]+/\n        }]\n      }]\n    }]\n  };\n  return {\n    name: 'HTML, XML',\n    aliases: ['html', 'xhtml', 'rss', 'atom', 'xjb', 'xsd', 'xsl', 'plist', 'wsf', 'svg'],\n    case_insensitive: true,\n    contains: [{\n      className: 'meta',\n      begin: /<![a-z]/,\n      end: />/,\n      relevance: 10,\n      contains: [XML_META_KEYWORDS, QUOTE_META_STRING_MODE, APOS_META_STRING_MODE, XML_META_PAR_KEYWORDS, {\n        begin: /\\[/,\n        end: /\\]/,\n        contains: [{\n          className: 'meta',\n          begin: /<![a-z]/,\n          end: />/,\n          contains: [XML_META_KEYWORDS, XML_META_PAR_KEYWORDS, QUOTE_META_STRING_MODE, APOS_META_STRING_MODE]\n        }]\n      }]\n    }, hljs.COMMENT(/<!--/, /-->/, {\n      relevance: 10\n    }), {\n      begin: /<!\\[CDATA\\[/,\n      end: /\\]\\]>/,\n      relevance: 10\n    }, XML_ENTITIES, {\n      className: 'meta',\n      begin: /<\\?xml/,\n      end: /\\?>/,\n      relevance: 10\n    }, {\n      className: 'tag',\n\n      /*\n      The lookahead pattern (?=...) ensures that 'begin' only matches\n      '<style' as a single word, followed by a whitespace or an\n      ending braket. The '$' is needed for the lexeme to be recognized\n      by hljs.subMode() that tests lexemes outside the stream.\n      */\n      begin: /<style(?=\\s|>)/,\n      end: />/,\n      keywords: {\n        name: 'style'\n      },\n      contains: [TAG_INTERNALS],\n      starts: {\n        end: /<\\/style>/,\n        returnEnd: true,\n        subLanguage: ['css', 'xml']\n      }\n    }, {\n      className: 'tag',\n      // See the comment in the <style tag about the lookahead pattern\n      begin: /<script(?=\\s|>)/,\n      end: />/,\n      keywords: {\n        name: 'script'\n      },\n      contains: [TAG_INTERNALS],\n      starts: {\n        end: /<\\/script>/,\n        returnEnd: true,\n        subLanguage: ['javascript', 'handlebars', 'xml']\n      }\n    }, // we need this for now for jSX\n    {\n      className: 'tag',\n      begin: /<>|<\\/>/\n    }, // open tag\n    {\n      className: 'tag',\n      begin: concat(/</, lookahead(concat(TAG_NAME_RE, // <tag/>\n      // <tag>\n      // <tag ...\n      either(/\\/>/, />/, /\\s/)))),\n      end: /\\/?>/,\n      contains: [{\n        className: 'name',\n        begin: TAG_NAME_RE,\n        relevance: 0,\n        starts: TAG_INTERNALS\n      }]\n    }, // close tag\n    {\n      className: 'tag',\n      begin: concat(/<\\//, lookahead(concat(TAG_NAME_RE, />/))),\n      contains: [{\n        className: 'name',\n        begin: TAG_NAME_RE,\n        relevance: 0\n      }, {\n        begin: />/,\n        relevance: 0,\n        endsParent: true\n      }]\n    }]\n  };\n}\n\nmodule.exports = xml;","map":{"version":3,"names":["source","re","lookahead","concat","optional","args","joined","map","x","join","either","xml","hljs","TAG_NAME_RE","XML_IDENT_RE","XML_ENTITIES","className","begin","XML_META_KEYWORDS","contains","illegal","XML_META_PAR_KEYWORDS","inherit","end","APOS_META_STRING_MODE","APOS_STRING_MODE","QUOTE_META_STRING_MODE","QUOTE_STRING_MODE","TAG_INTERNALS","endsWithParent","relevance","endsParent","variants","name","aliases","case_insensitive","COMMENT","keywords","starts","returnEnd","subLanguage","module","exports"],"sources":["/Users/soheilvafaei/Documents/project/web/resume/ex7/node_modules/highlight.js/lib/languages/xml.js"],"sourcesContent":["/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction optional(re) {\n  return concat('(', re, ')?');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] } args\n * @returns {string}\n */\nfunction either(...args) {\n  const joined = '(' + args.map((x) => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\n/*\nLanguage: HTML, XML\nWebsite: https://www.w3.org/XML/\nCategory: common\nAudit: 2020\n*/\n\n/** @type LanguageFn */\nfunction xml(hljs) {\n  // Element names can contain letters, digits, hyphens, underscores, and periods\n  const TAG_NAME_RE = concat(/[A-Z_]/, optional(/[A-Z0-9_.-]*:/), /[A-Z0-9_.-]*/);\n  const XML_IDENT_RE = /[A-Za-z0-9._:-]+/;\n  const XML_ENTITIES = {\n    className: 'symbol',\n    begin: /&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/\n  };\n  const XML_META_KEYWORDS = {\n    begin: /\\s/,\n    contains: [\n      {\n        className: 'meta-keyword',\n        begin: /#?[a-z_][a-z1-9_-]+/,\n        illegal: /\\n/\n      }\n    ]\n  };\n  const XML_META_PAR_KEYWORDS = hljs.inherit(XML_META_KEYWORDS, {\n    begin: /\\(/,\n    end: /\\)/\n  });\n  const APOS_META_STRING_MODE = hljs.inherit(hljs.APOS_STRING_MODE, {\n    className: 'meta-string'\n  });\n  const QUOTE_META_STRING_MODE = hljs.inherit(hljs.QUOTE_STRING_MODE, {\n    className: 'meta-string'\n  });\n  const TAG_INTERNALS = {\n    endsWithParent: true,\n    illegal: /</,\n    relevance: 0,\n    contains: [\n      {\n        className: 'attr',\n        begin: XML_IDENT_RE,\n        relevance: 0\n      },\n      {\n        begin: /=\\s*/,\n        relevance: 0,\n        contains: [\n          {\n            className: 'string',\n            endsParent: true,\n            variants: [\n              {\n                begin: /\"/,\n                end: /\"/,\n                contains: [ XML_ENTITIES ]\n              },\n              {\n                begin: /'/,\n                end: /'/,\n                contains: [ XML_ENTITIES ]\n              },\n              {\n                begin: /[^\\s\"'=<>`]+/\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  };\n  return {\n    name: 'HTML, XML',\n    aliases: [\n      'html',\n      'xhtml',\n      'rss',\n      'atom',\n      'xjb',\n      'xsd',\n      'xsl',\n      'plist',\n      'wsf',\n      'svg'\n    ],\n    case_insensitive: true,\n    contains: [\n      {\n        className: 'meta',\n        begin: /<![a-z]/,\n        end: />/,\n        relevance: 10,\n        contains: [\n          XML_META_KEYWORDS,\n          QUOTE_META_STRING_MODE,\n          APOS_META_STRING_MODE,\n          XML_META_PAR_KEYWORDS,\n          {\n            begin: /\\[/,\n            end: /\\]/,\n            contains: [\n              {\n                className: 'meta',\n                begin: /<![a-z]/,\n                end: />/,\n                contains: [\n                  XML_META_KEYWORDS,\n                  XML_META_PAR_KEYWORDS,\n                  QUOTE_META_STRING_MODE,\n                  APOS_META_STRING_MODE\n                ]\n              }\n            ]\n          }\n        ]\n      },\n      hljs.COMMENT(\n        /<!--/,\n        /-->/,\n        {\n          relevance: 10\n        }\n      ),\n      {\n        begin: /<!\\[CDATA\\[/,\n        end: /\\]\\]>/,\n        relevance: 10\n      },\n      XML_ENTITIES,\n      {\n        className: 'meta',\n        begin: /<\\?xml/,\n        end: /\\?>/,\n        relevance: 10\n      },\n      {\n        className: 'tag',\n        /*\n        The lookahead pattern (?=...) ensures that 'begin' only matches\n        '<style' as a single word, followed by a whitespace or an\n        ending braket. The '$' is needed for the lexeme to be recognized\n        by hljs.subMode() that tests lexemes outside the stream.\n        */\n        begin: /<style(?=\\s|>)/,\n        end: />/,\n        keywords: {\n          name: 'style'\n        },\n        contains: [ TAG_INTERNALS ],\n        starts: {\n          end: /<\\/style>/,\n          returnEnd: true,\n          subLanguage: [\n            'css',\n            'xml'\n          ]\n        }\n      },\n      {\n        className: 'tag',\n        // See the comment in the <style tag about the lookahead pattern\n        begin: /<script(?=\\s|>)/,\n        end: />/,\n        keywords: {\n          name: 'script'\n        },\n        contains: [ TAG_INTERNALS ],\n        starts: {\n          end: /<\\/script>/,\n          returnEnd: true,\n          subLanguage: [\n            'javascript',\n            'handlebars',\n            'xml'\n          ]\n        }\n      },\n      // we need this for now for jSX\n      {\n        className: 'tag',\n        begin: /<>|<\\/>/\n      },\n      // open tag\n      {\n        className: 'tag',\n        begin: concat(\n          /</,\n          lookahead(concat(\n            TAG_NAME_RE,\n            // <tag/>\n            // <tag>\n            // <tag ...\n            either(/\\/>/, />/, /\\s/)\n          ))\n        ),\n        end: /\\/?>/,\n        contains: [\n          {\n            className: 'name',\n            begin: TAG_NAME_RE,\n            relevance: 0,\n            starts: TAG_INTERNALS\n          }\n        ]\n      },\n      // close tag\n      {\n        className: 'tag',\n        begin: concat(\n          /<\\//,\n          lookahead(concat(\n            TAG_NAME_RE, />/\n          ))\n        ),\n        contains: [\n          {\n            className: 'name',\n            begin: TAG_NAME_RE,\n            relevance: 0\n          },\n          {\n            begin: />/,\n            relevance: 0,\n            endsParent: true\n          }\n        ]\n      }\n    ]\n  };\n}\n\nmodule.exports = xml;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}