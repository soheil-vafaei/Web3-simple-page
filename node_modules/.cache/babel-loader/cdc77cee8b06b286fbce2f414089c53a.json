{"ast":null,"code":"import { Arbitrary } from '../../check/arbitrary/definition/Arbitrary.js';\nimport { Value } from '../../check/arbitrary/definition/Value.js';\nimport { Stream } from '../../stream/Stream.js';\nimport { integerLogLike, biasNumericRange } from './helpers/BiasNumericRange.js';\nimport { shrinkInteger } from './helpers/ShrinkInteger.js';\nexport class IntegerArbitrary extends Arbitrary {\n  constructor(min, max) {\n    super();\n    this.min = min;\n    this.max = max;\n  }\n\n  generate(mrng, biasFactor) {\n    const range = this.computeGenerateRange(mrng, biasFactor);\n    return new Value(mrng.nextInt(range.min, range.max), undefined);\n  }\n\n  canShrinkWithoutContext(value) {\n    return typeof value === 'number' && Number.isInteger(value) && !Object.is(value, -0) && this.min <= value && value <= this.max;\n  }\n\n  shrink(current, context) {\n    if (!IntegerArbitrary.isValidContext(current, context)) {\n      const target = this.defaultTarget();\n      return shrinkInteger(current, target, true);\n    }\n\n    if (this.isLastChanceTry(current, context)) {\n      return Stream.of(new Value(context, undefined));\n    }\n\n    return shrinkInteger(current, context, false);\n  }\n\n  defaultTarget() {\n    if (this.min <= 0 && this.max >= 0) {\n      return 0;\n    }\n\n    return this.min < 0 ? this.max : this.min;\n  }\n\n  computeGenerateRange(mrng, biasFactor) {\n    if (biasFactor === undefined || mrng.nextInt(1, biasFactor) !== 1) {\n      return {\n        min: this.min,\n        max: this.max\n      };\n    }\n\n    const ranges = biasNumericRange(this.min, this.max, integerLogLike);\n\n    if (ranges.length === 1) {\n      return ranges[0];\n    }\n\n    const id = mrng.nextInt(-2 * (ranges.length - 1), ranges.length - 2);\n    return id < 0 ? ranges[0] : ranges[id + 1];\n  }\n\n  isLastChanceTry(current, context) {\n    if (current > 0) return current === context + 1 && current > this.min;\n    if (current < 0) return current === context - 1 && current < this.max;\n    return false;\n  }\n\n  static isValidContext(current, context) {\n    if (context === undefined) {\n      return false;\n    }\n\n    if (typeof context !== 'number') {\n      throw new Error(`Invalid context type passed to IntegerArbitrary (#1)`);\n    }\n\n    if (context !== 0 && Math.sign(current) !== Math.sign(context)) {\n      throw new Error(`Invalid context value passed to IntegerArbitrary (#2)`);\n    }\n\n    return true;\n  }\n\n}","map":{"version":3,"names":["Arbitrary","Value","Stream","integerLogLike","biasNumericRange","shrinkInteger","IntegerArbitrary","constructor","min","max","generate","mrng","biasFactor","range","computeGenerateRange","nextInt","undefined","canShrinkWithoutContext","value","Number","isInteger","Object","is","shrink","current","context","isValidContext","target","defaultTarget","isLastChanceTry","of","ranges","length","id","Error","Math","sign"],"sources":["/Users/soheilvafaei/Documents/project/web/resume/ex7/node_modules/fast-check/lib/esm/arbitrary/_internals/IntegerArbitrary.js"],"sourcesContent":["import { Arbitrary } from '../../check/arbitrary/definition/Arbitrary.js';\nimport { Value } from '../../check/arbitrary/definition/Value.js';\nimport { Stream } from '../../stream/Stream.js';\nimport { integerLogLike, biasNumericRange } from './helpers/BiasNumericRange.js';\nimport { shrinkInteger } from './helpers/ShrinkInteger.js';\nexport class IntegerArbitrary extends Arbitrary {\n    constructor(min, max) {\n        super();\n        this.min = min;\n        this.max = max;\n    }\n    generate(mrng, biasFactor) {\n        const range = this.computeGenerateRange(mrng, biasFactor);\n        return new Value(mrng.nextInt(range.min, range.max), undefined);\n    }\n    canShrinkWithoutContext(value) {\n        return (typeof value === 'number' &&\n            Number.isInteger(value) &&\n            !Object.is(value, -0) &&\n            this.min <= value &&\n            value <= this.max);\n    }\n    shrink(current, context) {\n        if (!IntegerArbitrary.isValidContext(current, context)) {\n            const target = this.defaultTarget();\n            return shrinkInteger(current, target, true);\n        }\n        if (this.isLastChanceTry(current, context)) {\n            return Stream.of(new Value(context, undefined));\n        }\n        return shrinkInteger(current, context, false);\n    }\n    defaultTarget() {\n        if (this.min <= 0 && this.max >= 0) {\n            return 0;\n        }\n        return this.min < 0 ? this.max : this.min;\n    }\n    computeGenerateRange(mrng, biasFactor) {\n        if (biasFactor === undefined || mrng.nextInt(1, biasFactor) !== 1) {\n            return { min: this.min, max: this.max };\n        }\n        const ranges = biasNumericRange(this.min, this.max, integerLogLike);\n        if (ranges.length === 1) {\n            return ranges[0];\n        }\n        const id = mrng.nextInt(-2 * (ranges.length - 1), ranges.length - 2);\n        return id < 0 ? ranges[0] : ranges[id + 1];\n    }\n    isLastChanceTry(current, context) {\n        if (current > 0)\n            return current === context + 1 && current > this.min;\n        if (current < 0)\n            return current === context - 1 && current < this.max;\n        return false;\n    }\n    static isValidContext(current, context) {\n        if (context === undefined) {\n            return false;\n        }\n        if (typeof context !== 'number') {\n            throw new Error(`Invalid context type passed to IntegerArbitrary (#1)`);\n        }\n        if (context !== 0 && Math.sign(current) !== Math.sign(context)) {\n            throw new Error(`Invalid context value passed to IntegerArbitrary (#2)`);\n        }\n        return true;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}