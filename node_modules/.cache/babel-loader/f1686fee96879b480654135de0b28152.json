{"ast":null,"code":"/*\nLanguage: Haskell\nAuthor: Jeremy Hull <sourdrums@gmail.com>\nContributors: Zena Treep <zena.treep@gmail.com>\nWebsite: https://www.haskell.org\nCategory: functional\n*/\nfunction haskell(hljs) {\n  const COMMENT = {\n    variants: [hljs.COMMENT('--', '$'), hljs.COMMENT(/\\{-/, /-\\}/, {\n      contains: ['self']\n    })]\n  };\n  const PRAGMA = {\n    className: 'meta',\n    begin: /\\{-#/,\n    end: /#-\\}/\n  };\n  const PREPROCESSOR = {\n    className: 'meta',\n    begin: '^#',\n    end: '$'\n  };\n  const CONSTRUCTOR = {\n    className: 'type',\n    begin: '\\\\b[A-Z][\\\\w\\']*',\n    // TODO: other constructors (build-in, infix).\n    relevance: 0\n  };\n  const LIST = {\n    begin: '\\\\(',\n    end: '\\\\)',\n    illegal: '\"',\n    contains: [PRAGMA, PREPROCESSOR, {\n      className: 'type',\n      begin: '\\\\b[A-Z][\\\\w]*(\\\\((\\\\.\\\\.|,|\\\\w+)\\\\))?'\n    }, hljs.inherit(hljs.TITLE_MODE, {\n      begin: '[_a-z][\\\\w\\']*'\n    }), COMMENT]\n  };\n  const RECORD = {\n    begin: /\\{/,\n    end: /\\}/,\n    contains: LIST.contains\n  };\n  return {\n    name: 'Haskell',\n    aliases: ['hs'],\n    keywords: 'let in if then else case of where do module import hiding ' + 'qualified type data newtype deriving class instance as default ' + 'infix infixl infixr foreign export ccall stdcall cplusplus ' + 'jvm dotnet safe unsafe family forall mdo proc rec',\n    contains: [// Top-level constructions.\n    {\n      beginKeywords: 'module',\n      end: 'where',\n      keywords: 'module where',\n      contains: [LIST, COMMENT],\n      illegal: '\\\\W\\\\.|;'\n    }, {\n      begin: '\\\\bimport\\\\b',\n      end: '$',\n      keywords: 'import qualified as hiding',\n      contains: [LIST, COMMENT],\n      illegal: '\\\\W\\\\.|;'\n    }, {\n      className: 'class',\n      begin: '^(\\\\s*)?(class|instance)\\\\b',\n      end: 'where',\n      keywords: 'class family instance where',\n      contains: [CONSTRUCTOR, LIST, COMMENT]\n    }, {\n      className: 'class',\n      begin: '\\\\b(data|(new)?type)\\\\b',\n      end: '$',\n      keywords: 'data family type newtype deriving',\n      contains: [PRAGMA, CONSTRUCTOR, LIST, RECORD, COMMENT]\n    }, {\n      beginKeywords: 'default',\n      end: '$',\n      contains: [CONSTRUCTOR, LIST, COMMENT]\n    }, {\n      beginKeywords: 'infix infixl infixr',\n      end: '$',\n      contains: [hljs.C_NUMBER_MODE, COMMENT]\n    }, {\n      begin: '\\\\bforeign\\\\b',\n      end: '$',\n      keywords: 'foreign import export ccall stdcall cplusplus jvm ' + 'dotnet safe unsafe',\n      contains: [CONSTRUCTOR, hljs.QUOTE_STRING_MODE, COMMENT]\n    }, {\n      className: 'meta',\n      begin: '#!\\\\/usr\\\\/bin\\\\/env\\ runhaskell',\n      end: '$'\n    }, // \"Whitespaces\".\n    PRAGMA, PREPROCESSOR, // Literals and names.\n    // TODO: characters.\n    hljs.QUOTE_STRING_MODE, hljs.C_NUMBER_MODE, CONSTRUCTOR, hljs.inherit(hljs.TITLE_MODE, {\n      begin: '^[_a-z][\\\\w\\']*'\n    }), COMMENT, {\n      // No markup, relevance booster\n      begin: '->|<-'\n    }]\n  };\n}\n\nmodule.exports = haskell;","map":{"version":3,"names":["haskell","hljs","COMMENT","variants","contains","PRAGMA","className","begin","end","PREPROCESSOR","CONSTRUCTOR","relevance","LIST","illegal","inherit","TITLE_MODE","RECORD","name","aliases","keywords","beginKeywords","C_NUMBER_MODE","QUOTE_STRING_MODE","module","exports"],"sources":["/Users/soheilvafaei/Documents/project/web/web3/ex7/node_modules/highlight.js/lib/languages/haskell.js"],"sourcesContent":["/*\nLanguage: Haskell\nAuthor: Jeremy Hull <sourdrums@gmail.com>\nContributors: Zena Treep <zena.treep@gmail.com>\nWebsite: https://www.haskell.org\nCategory: functional\n*/\n\nfunction haskell(hljs) {\n  const COMMENT = {\n    variants: [\n      hljs.COMMENT('--', '$'),\n      hljs.COMMENT(\n        /\\{-/,\n        /-\\}/,\n        {\n          contains: ['self']\n        }\n      )\n    ]\n  };\n\n  const PRAGMA = {\n    className: 'meta',\n    begin: /\\{-#/,\n    end: /#-\\}/\n  };\n\n  const PREPROCESSOR = {\n    className: 'meta',\n    begin: '^#',\n    end: '$'\n  };\n\n  const CONSTRUCTOR = {\n    className: 'type',\n    begin: '\\\\b[A-Z][\\\\w\\']*', // TODO: other constructors (build-in, infix).\n    relevance: 0\n  };\n\n  const LIST = {\n    begin: '\\\\(',\n    end: '\\\\)',\n    illegal: '\"',\n    contains: [\n      PRAGMA,\n      PREPROCESSOR,\n      {\n        className: 'type',\n        begin: '\\\\b[A-Z][\\\\w]*(\\\\((\\\\.\\\\.|,|\\\\w+)\\\\))?'\n      },\n      hljs.inherit(hljs.TITLE_MODE, {\n        begin: '[_a-z][\\\\w\\']*'\n      }),\n      COMMENT\n    ]\n  };\n\n  const RECORD = {\n    begin: /\\{/,\n    end: /\\}/,\n    contains: LIST.contains\n  };\n\n  return {\n    name: 'Haskell',\n    aliases: ['hs'],\n    keywords:\n      'let in if then else case of where do module import hiding ' +\n      'qualified type data newtype deriving class instance as default ' +\n      'infix infixl infixr foreign export ccall stdcall cplusplus ' +\n      'jvm dotnet safe unsafe family forall mdo proc rec',\n    contains: [\n      // Top-level constructions.\n      {\n        beginKeywords: 'module',\n        end: 'where',\n        keywords: 'module where',\n        contains: [\n          LIST,\n          COMMENT\n        ],\n        illegal: '\\\\W\\\\.|;'\n      },\n      {\n        begin: '\\\\bimport\\\\b',\n        end: '$',\n        keywords: 'import qualified as hiding',\n        contains: [\n          LIST,\n          COMMENT\n        ],\n        illegal: '\\\\W\\\\.|;'\n      },\n      {\n        className: 'class',\n        begin: '^(\\\\s*)?(class|instance)\\\\b',\n        end: 'where',\n        keywords: 'class family instance where',\n        contains: [\n          CONSTRUCTOR,\n          LIST,\n          COMMENT\n        ]\n      },\n      {\n        className: 'class',\n        begin: '\\\\b(data|(new)?type)\\\\b',\n        end: '$',\n        keywords: 'data family type newtype deriving',\n        contains: [\n          PRAGMA,\n          CONSTRUCTOR,\n          LIST,\n          RECORD,\n          COMMENT\n        ]\n      },\n      {\n        beginKeywords: 'default',\n        end: '$',\n        contains: [\n          CONSTRUCTOR,\n          LIST,\n          COMMENT\n        ]\n      },\n      {\n        beginKeywords: 'infix infixl infixr',\n        end: '$',\n        contains: [\n          hljs.C_NUMBER_MODE,\n          COMMENT\n        ]\n      },\n      {\n        begin: '\\\\bforeign\\\\b',\n        end: '$',\n        keywords: 'foreign import export ccall stdcall cplusplus jvm ' +\n                  'dotnet safe unsafe',\n        contains: [\n          CONSTRUCTOR,\n          hljs.QUOTE_STRING_MODE,\n          COMMENT\n        ]\n      },\n      {\n        className: 'meta',\n        begin: '#!\\\\/usr\\\\/bin\\\\/env\\ runhaskell',\n        end: '$'\n      },\n      // \"Whitespaces\".\n      PRAGMA,\n      PREPROCESSOR,\n\n      // Literals and names.\n\n      // TODO: characters.\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE,\n      CONSTRUCTOR,\n      hljs.inherit(hljs.TITLE_MODE, {\n        begin: '^[_a-z][\\\\w\\']*'\n      }),\n      COMMENT,\n      { // No markup, relevance booster\n        begin: '->|<-'\n      }\n    ]\n  };\n}\n\nmodule.exports = haskell;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}