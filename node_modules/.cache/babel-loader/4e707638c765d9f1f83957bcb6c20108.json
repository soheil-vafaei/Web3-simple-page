{"ast":null,"code":"'use strict';\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // We use this for base 36 maths\n\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\n\nvar bytes_1 = require(\"./bytes\");\n\nvar keccak256_1 = require(\"./keccak256\");\n\nvar rlp_1 = require(\"./rlp\");\n\nvar errors = require(\"../errors\"); ///////////////////////////////\n\n\nfunction getChecksumAddress(address) {\n  if (typeof address !== 'string' || !address.match(/^0x[0-9A-Fa-f]{40}$/)) {\n    errors.throwError('invalid address', errors.INVALID_ARGUMENT, {\n      arg: 'address',\n      value: address\n    });\n  }\n\n  address = address.toLowerCase();\n  var chars = address.substring(2).split('');\n  var hashed = new Uint8Array(40);\n\n  for (var i_1 = 0; i_1 < 40; i_1++) {\n    hashed[i_1] = chars[i_1].charCodeAt(0);\n  }\n\n  hashed = bytes_1.arrayify(keccak256_1.keccak256(hashed));\n\n  for (var i = 0; i < 40; i += 2) {\n    if (hashed[i >> 1] >> 4 >= 8) {\n      chars[i] = chars[i].toUpperCase();\n    }\n\n    if ((hashed[i >> 1] & 0x0f) >= 8) {\n      chars[i + 1] = chars[i + 1].toUpperCase();\n    }\n  }\n\n  return '0x' + chars.join('');\n} // Shims for environments that are missing some required constants and functions\n\n\nvar MAX_SAFE_INTEGER = 0x1fffffffffffff;\n\nfunction log10(x) {\n  if (Math.log10) {\n    return Math.log10(x);\n  }\n\n  return Math.log(x) / Math.LN10;\n} // See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n// Create lookup table\n\n\nvar ibanLookup = {};\n\nfor (var i = 0; i < 10; i++) {\n  ibanLookup[String(i)] = String(i);\n}\n\nfor (var i = 0; i < 26; i++) {\n  ibanLookup[String.fromCharCode(65 + i)] = String(10 + i);\n} // How many decimal digits can we process? (for 64-bit float, this is 15)\n\n\nvar safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));\n\nfunction ibanChecksum(address) {\n  address = address.toUpperCase();\n  address = address.substring(4) + address.substring(0, 2) + '00';\n  var expanded = '';\n  address.split('').forEach(function (c) {\n    expanded += ibanLookup[c];\n  }); // Javascript can handle integers safely up to 15 (decimal) digits\n\n  while (expanded.length >= safeDigits) {\n    var block = expanded.substring(0, safeDigits);\n    expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n  }\n\n  var checksum = String(98 - parseInt(expanded, 10) % 97);\n\n  while (checksum.length < 2) {\n    checksum = '0' + checksum;\n  }\n\n  return checksum;\n}\n\n;\n\nfunction getAddress(address) {\n  var result = null;\n\n  if (typeof address !== 'string') {\n    errors.throwError('invalid address', errors.INVALID_ARGUMENT, {\n      arg: 'address',\n      value: address\n    });\n  }\n\n  if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n    // Missing the 0x prefix\n    if (address.substring(0, 2) !== '0x') {\n      address = '0x' + address;\n    }\n\n    result = getChecksumAddress(address); // It is a checksummed address with a bad checksum\n\n    if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n      errors.throwError('bad address checksum', errors.INVALID_ARGUMENT, {\n        arg: 'address',\n        value: address\n      });\n    } // Maybe ICAP? (we only support direct mode)\n\n  } else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n    // It is an ICAP address with a bad checksum\n    if (address.substring(2, 4) !== ibanChecksum(address)) {\n      errors.throwError('bad icap checksum', errors.INVALID_ARGUMENT, {\n        arg: 'address',\n        value: address\n      });\n    }\n\n    result = new bn_js_1.default.BN(address.substring(4), 36).toString(16);\n\n    while (result.length < 40) {\n      result = '0' + result;\n    }\n\n    result = getChecksumAddress('0x' + result);\n  } else {\n    errors.throwError('invalid address', errors.INVALID_ARGUMENT, {\n      arg: 'address',\n      value: address\n    });\n  }\n\n  return result;\n}\n\nexports.getAddress = getAddress;\n\nfunction getIcapAddress(address) {\n  var base36 = new bn_js_1.default.BN(getAddress(address).substring(2), 16).toString(36).toUpperCase();\n\n  while (base36.length < 30) {\n    base36 = '0' + base36;\n  }\n\n  return 'XE' + ibanChecksum('XE00' + base36) + base36;\n}\n\nexports.getIcapAddress = getIcapAddress; // http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\n\nfunction getContractAddress(transaction) {\n  if (!transaction.from) {\n    throw new Error('missing from address');\n  }\n\n  var nonce = transaction.nonce;\n  return getAddress('0x' + keccak256_1.keccak256(rlp_1.encode([getAddress(transaction.from), bytes_1.stripZeros(bytes_1.hexlify(nonce))])).substring(26));\n}\n\nexports.getContractAddress = getContractAddress; // See: https://eips.ethereum.org/EIPS/eip-1014\n\nfunction getCreate2Address(options) {\n  var initCodeHash = options.initCodeHash;\n\n  if (options.initCode) {\n    if (initCodeHash) {\n      if (keccak256_1.keccak256(options.initCode) !== initCodeHash) {\n        errors.throwError(\"initCode/initCodeHash mismatch\", errors.INVALID_ARGUMENT, {\n          arg: \"options\",\n          value: options\n        });\n      }\n    } else {\n      initCodeHash = keccak256_1.keccak256(options.initCode);\n    }\n  }\n\n  if (!initCodeHash) {\n    errors.throwError(\"missing initCode or initCodeHash\", errors.INVALID_ARGUMENT, {\n      arg: \"options\",\n      value: options\n    });\n  }\n\n  var from = getAddress(options.from);\n  var salt = bytes_1.arrayify(options.salt);\n\n  if (salt.length !== 32) {\n    errors.throwError(\"invalid salt\", errors.INVALID_ARGUMENT, {\n      arg: \"options\",\n      value: options\n    });\n  }\n\n  return getAddress(\"0x\" + keccak256_1.keccak256(bytes_1.concat([\"0xff\", from, salt, initCodeHash])).substring(26));\n}\n\nexports.getCreate2Address = getCreate2Address;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","bn_js_1","require","bytes_1","keccak256_1","rlp_1","errors","getChecksumAddress","address","match","throwError","INVALID_ARGUMENT","arg","toLowerCase","chars","substring","split","hashed","Uint8Array","i_1","charCodeAt","arrayify","keccak256","i","toUpperCase","join","MAX_SAFE_INTEGER","log10","x","Math","log","LN10","ibanLookup","String","fromCharCode","safeDigits","floor","ibanChecksum","expanded","forEach","c","length","block","parseInt","checksum","getAddress","result","default","BN","toString","getIcapAddress","base36","getContractAddress","transaction","from","Error","nonce","encode","stripZeros","hexlify","getCreate2Address","options","initCodeHash","initCode","salt","concat"],"sources":["/Users/soheilvafaei/Documents/project/web/resume/ex7/node_modules/ethers/utils/address.js"],"sourcesContent":["'use strict';\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// We use this for base 36 maths\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\nvar bytes_1 = require(\"./bytes\");\nvar keccak256_1 = require(\"./keccak256\");\nvar rlp_1 = require(\"./rlp\");\nvar errors = require(\"../errors\");\n///////////////////////////////\nfunction getChecksumAddress(address) {\n    if (typeof (address) !== 'string' || !address.match(/^0x[0-9A-Fa-f]{40}$/)) {\n        errors.throwError('invalid address', errors.INVALID_ARGUMENT, { arg: 'address', value: address });\n    }\n    address = address.toLowerCase();\n    var chars = address.substring(2).split('');\n    var hashed = new Uint8Array(40);\n    for (var i_1 = 0; i_1 < 40; i_1++) {\n        hashed[i_1] = chars[i_1].charCodeAt(0);\n    }\n    hashed = bytes_1.arrayify(keccak256_1.keccak256(hashed));\n    for (var i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n    return '0x' + chars.join('');\n}\n// Shims for environments that are missing some required constants and functions\nvar MAX_SAFE_INTEGER = 0x1fffffffffffff;\nfunction log10(x) {\n    if (Math.log10) {\n        return Math.log10(x);\n    }\n    return Math.log(x) / Math.LN10;\n}\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n// Create lookup table\nvar ibanLookup = {};\nfor (var i = 0; i < 10; i++) {\n    ibanLookup[String(i)] = String(i);\n}\nfor (var i = 0; i < 26; i++) {\n    ibanLookup[String.fromCharCode(65 + i)] = String(10 + i);\n}\n// How many decimal digits can we process? (for 64-bit float, this is 15)\nvar safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));\nfunction ibanChecksum(address) {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + '00';\n    var expanded = '';\n    address.split('').forEach(function (c) {\n        expanded += ibanLookup[c];\n    });\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits) {\n        var block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n    var checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) {\n        checksum = '0' + checksum;\n    }\n    return checksum;\n}\n;\nfunction getAddress(address) {\n    var result = null;\n    if (typeof (address) !== 'string') {\n        errors.throwError('invalid address', errors.INVALID_ARGUMENT, { arg: 'address', value: address });\n    }\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n        // Missing the 0x prefix\n        if (address.substring(0, 2) !== '0x') {\n            address = '0x' + address;\n        }\n        result = getChecksumAddress(address);\n        // It is a checksummed address with a bad checksum\n        if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n            errors.throwError('bad address checksum', errors.INVALID_ARGUMENT, { arg: 'address', value: address });\n        }\n        // Maybe ICAP? (we only support direct mode)\n    }\n    else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n        // It is an ICAP address with a bad checksum\n        if (address.substring(2, 4) !== ibanChecksum(address)) {\n            errors.throwError('bad icap checksum', errors.INVALID_ARGUMENT, { arg: 'address', value: address });\n        }\n        result = (new bn_js_1.default.BN(address.substring(4), 36)).toString(16);\n        while (result.length < 40) {\n            result = '0' + result;\n        }\n        result = getChecksumAddress('0x' + result);\n    }\n    else {\n        errors.throwError('invalid address', errors.INVALID_ARGUMENT, { arg: 'address', value: address });\n    }\n    return result;\n}\nexports.getAddress = getAddress;\nfunction getIcapAddress(address) {\n    var base36 = (new bn_js_1.default.BN(getAddress(address).substring(2), 16)).toString(36).toUpperCase();\n    while (base36.length < 30) {\n        base36 = '0' + base36;\n    }\n    return 'XE' + ibanChecksum('XE00' + base36) + base36;\n}\nexports.getIcapAddress = getIcapAddress;\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\nfunction getContractAddress(transaction) {\n    if (!transaction.from) {\n        throw new Error('missing from address');\n    }\n    var nonce = transaction.nonce;\n    return getAddress('0x' + keccak256_1.keccak256(rlp_1.encode([\n        getAddress(transaction.from),\n        bytes_1.stripZeros(bytes_1.hexlify(nonce))\n    ])).substring(26));\n}\nexports.getContractAddress = getContractAddress;\n// See: https://eips.ethereum.org/EIPS/eip-1014\nfunction getCreate2Address(options) {\n    var initCodeHash = options.initCodeHash;\n    if (options.initCode) {\n        if (initCodeHash) {\n            if (keccak256_1.keccak256(options.initCode) !== initCodeHash) {\n                errors.throwError(\"initCode/initCodeHash mismatch\", errors.INVALID_ARGUMENT, {\n                    arg: \"options\", value: options\n                });\n            }\n        }\n        else {\n            initCodeHash = keccak256_1.keccak256(options.initCode);\n        }\n    }\n    if (!initCodeHash) {\n        errors.throwError(\"missing initCode or initCodeHash\", errors.INVALID_ARGUMENT, {\n            arg: \"options\", value: options\n        });\n    }\n    var from = getAddress(options.from);\n    var salt = bytes_1.arrayify(options.salt);\n    if (salt.length !== 32) {\n        errors.throwError(\"invalid salt\", errors.INVALID_ARGUMENT, {\n            arg: \"options\", value: options\n        });\n    }\n    return getAddress(\"0x\" + keccak256_1.keccak256(bytes_1.concat([\n        \"0xff\",\n        from,\n        salt,\n        initCodeHash\n    ])).substring(26));\n}\nexports.getCreate2Address = getCreate2Address;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}