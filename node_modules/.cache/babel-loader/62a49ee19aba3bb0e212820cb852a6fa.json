{"ast":null,"code":"import boolbase from \"boolbase\";\n/**\n * All reserved characters in a regex, used for escaping.\n *\n * Taken from XRegExp, (c) 2007-2020 Steven Levithan under the MIT license\n * https://github.com/slevithan/xregexp/blob/95eeebeb8fac8754d54eafe2b4743661ac1cf028/src/xregexp.js#L794\n */\n\nconst reChars = /[-[\\]{}()*+?.,\\\\^$|#\\s]/g;\n\nfunction escapeRegex(value) {\n  return value.replace(reChars, \"\\\\$&\");\n}\n/**\n * Attributes that are case-insensitive in HTML.\n *\n * @private\n * @see https://html.spec.whatwg.org/multipage/semantics-other.html#case-sensitivity-of-selectors\n */\n\n\nconst caseInsensitiveAttributes = new Set([\"accept\", \"accept-charset\", \"align\", \"alink\", \"axis\", \"bgcolor\", \"charset\", \"checked\", \"clear\", \"codetype\", \"color\", \"compact\", \"declare\", \"defer\", \"dir\", \"direction\", \"disabled\", \"enctype\", \"face\", \"frame\", \"hreflang\", \"http-equiv\", \"lang\", \"language\", \"link\", \"media\", \"method\", \"multiple\", \"nohref\", \"noresize\", \"noshade\", \"nowrap\", \"readonly\", \"rel\", \"rev\", \"rules\", \"scope\", \"scrolling\", \"selected\", \"shape\", \"target\", \"text\", \"type\", \"valign\", \"valuetype\", \"vlink\"]);\n\nfunction shouldIgnoreCase(selector, options) {\n  return typeof selector.ignoreCase === \"boolean\" ? selector.ignoreCase : selector.ignoreCase === \"quirks\" ? !!options.quirksMode : !options.xmlMode && caseInsensitiveAttributes.has(selector.name);\n}\n/**\n * Attribute selectors\n */\n\n\nexport const attributeRules = {\n  equals(next, data, options) {\n    const {\n      adapter\n    } = options;\n    const {\n      name\n    } = data;\n    let {\n      value\n    } = data;\n\n    if (shouldIgnoreCase(data, options)) {\n      value = value.toLowerCase();\n      return elem => {\n        const attr = adapter.getAttributeValue(elem, name);\n        return attr != null && attr.length === value.length && attr.toLowerCase() === value && next(elem);\n      };\n    }\n\n    return elem => adapter.getAttributeValue(elem, name) === value && next(elem);\n  },\n\n  hyphen(next, data, options) {\n    const {\n      adapter\n    } = options;\n    const {\n      name\n    } = data;\n    let {\n      value\n    } = data;\n    const len = value.length;\n\n    if (shouldIgnoreCase(data, options)) {\n      value = value.toLowerCase();\n      return function hyphenIC(elem) {\n        const attr = adapter.getAttributeValue(elem, name);\n        return attr != null && (attr.length === len || attr.charAt(len) === \"-\") && attr.substr(0, len).toLowerCase() === value && next(elem);\n      };\n    }\n\n    return function hyphen(elem) {\n      const attr = adapter.getAttributeValue(elem, name);\n      return attr != null && (attr.length === len || attr.charAt(len) === \"-\") && attr.substr(0, len) === value && next(elem);\n    };\n  },\n\n  element(next, data, options) {\n    const {\n      adapter\n    } = options;\n    const {\n      name,\n      value\n    } = data;\n\n    if (/\\s/.test(value)) {\n      return boolbase.falseFunc;\n    }\n\n    const regex = new RegExp(`(?:^|\\\\s)${escapeRegex(value)}(?:$|\\\\s)`, shouldIgnoreCase(data, options) ? \"i\" : \"\");\n    return function element(elem) {\n      const attr = adapter.getAttributeValue(elem, name);\n      return attr != null && attr.length >= value.length && regex.test(attr) && next(elem);\n    };\n  },\n\n  exists(next, _ref, _ref2) {\n    let {\n      name\n    } = _ref;\n    let {\n      adapter\n    } = _ref2;\n    return elem => adapter.hasAttrib(elem, name) && next(elem);\n  },\n\n  start(next, data, options) {\n    const {\n      adapter\n    } = options;\n    const {\n      name\n    } = data;\n    let {\n      value\n    } = data;\n    const len = value.length;\n\n    if (len === 0) {\n      return boolbase.falseFunc;\n    }\n\n    if (shouldIgnoreCase(data, options)) {\n      value = value.toLowerCase();\n      return elem => {\n        const attr = adapter.getAttributeValue(elem, name);\n        return attr != null && attr.length >= len && attr.substr(0, len).toLowerCase() === value && next(elem);\n      };\n    }\n\n    return elem => {\n      var _a;\n\n      return !!((_a = adapter.getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.startsWith(value)) && next(elem);\n    };\n  },\n\n  end(next, data, options) {\n    const {\n      adapter\n    } = options;\n    const {\n      name\n    } = data;\n    let {\n      value\n    } = data;\n    const len = -value.length;\n\n    if (len === 0) {\n      return boolbase.falseFunc;\n    }\n\n    if (shouldIgnoreCase(data, options)) {\n      value = value.toLowerCase();\n      return elem => {\n        var _a;\n\n        return ((_a = adapter.getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.substr(len).toLowerCase()) === value && next(elem);\n      };\n    }\n\n    return elem => {\n      var _a;\n\n      return !!((_a = adapter.getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.endsWith(value)) && next(elem);\n    };\n  },\n\n  any(next, data, options) {\n    const {\n      adapter\n    } = options;\n    const {\n      name,\n      value\n    } = data;\n\n    if (value === \"\") {\n      return boolbase.falseFunc;\n    }\n\n    if (shouldIgnoreCase(data, options)) {\n      const regex = new RegExp(escapeRegex(value), \"i\");\n      return function anyIC(elem) {\n        const attr = adapter.getAttributeValue(elem, name);\n        return attr != null && attr.length >= value.length && regex.test(attr) && next(elem);\n      };\n    }\n\n    return elem => {\n      var _a;\n\n      return !!((_a = adapter.getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.includes(value)) && next(elem);\n    };\n  },\n\n  not(next, data, options) {\n    const {\n      adapter\n    } = options;\n    const {\n      name\n    } = data;\n    let {\n      value\n    } = data;\n\n    if (value === \"\") {\n      return elem => !!adapter.getAttributeValue(elem, name) && next(elem);\n    } else if (shouldIgnoreCase(data, options)) {\n      value = value.toLowerCase();\n      return elem => {\n        const attr = adapter.getAttributeValue(elem, name);\n        return (attr == null || attr.length !== value.length || attr.toLowerCase() !== value) && next(elem);\n      };\n    }\n\n    return elem => adapter.getAttributeValue(elem, name) !== value && next(elem);\n  }\n\n};","map":{"version":3,"mappings":"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","names":["boolbase","reChars","escapeRegex","value","replace","caseInsensitiveAttributes","Set","shouldIgnoreCase","selector","options","ignoreCase","quirksMode","xmlMode","has","name","attributeRules","equals","next","data","adapter","toLowerCase","elem","attr","getAttributeValue","length","hyphen","len","hyphenIC","charAt","substr","element","test","falseFunc","regex","RegExp","exists","hasAttrib","start","_a","startsWith","end","endsWith","any","anyIC","includes","not"],"sourceRoot":"https://raw.githubusercontent.com/fb55/css-select/0f0725a9dfeddd2fdb54eda9656cdbab5bbf6be6/src/","sources":["attributes.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}