{"ast":null,"code":"import { TAG_ID as $, NS, isNumberedHeader } from '../common/html.js'; //Element utils\n\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([...IMPLICIT_END_TAG_REQUIRED, $.CAPTION, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nconst SCOPING_ELEMENT_NS = new Map([[$.APPLET, NS.HTML], [$.CAPTION, NS.HTML], [$.HTML, NS.HTML], [$.MARQUEE, NS.HTML], [$.OBJECT, NS.HTML], [$.TABLE, NS.HTML], [$.TD, NS.HTML], [$.TEMPLATE, NS.HTML], [$.TH, NS.HTML], [$.ANNOTATION_XML, NS.MATHML], [$.MI, NS.MATHML], [$.MN, NS.MATHML], [$.MO, NS.MATHML], [$.MS, NS.MATHML], [$.MTEXT, NS.MATHML], [$.DESC, NS.SVG], [$.FOREIGN_OBJECT, NS.SVG], [$.TITLE, NS.SVG]]);\nconst NAMED_HEADERS = [$.H1, $.H2, $.H3, $.H4, $.H5, $.H6];\nconst TABLE_ROW_CONTEXT = [$.TR, $.TEMPLATE, $.HTML];\nconst TABLE_BODY_CONTEXT = [$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML];\nconst TABLE_CONTEXT = [$.TABLE, $.TEMPLATE, $.HTML];\nconst TABLE_CELLS = [$.TD, $.TH]; //Stack of open elements\n\nexport class OpenElementStack {\n  constructor(document, treeAdapter, handler) {\n    this.treeAdapter = treeAdapter;\n    this.handler = handler;\n    this.items = [];\n    this.tagIDs = [];\n    this.stackTop = -1;\n    this.tmplCount = 0;\n    this.currentTagId = $.UNKNOWN;\n    this.current = document;\n  }\n\n  get currentTmplContentOrNode() {\n    return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n  } //Index of element\n\n\n  _indexOf(element) {\n    return this.items.lastIndexOf(element, this.stackTop);\n  } //Update current element\n\n\n  _isInTemplate() {\n    return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n  }\n\n  _updateCurrentElement() {\n    this.current = this.items[this.stackTop];\n    this.currentTagId = this.tagIDs[this.stackTop];\n  } //Mutations\n\n\n  push(element, tagID) {\n    this.stackTop++;\n    this.items[this.stackTop] = element;\n    this.current = element;\n    this.tagIDs[this.stackTop] = tagID;\n    this.currentTagId = tagID;\n\n    if (this._isInTemplate()) {\n      this.tmplCount++;\n    }\n\n    this.handler.onItemPush(element, tagID, true);\n  }\n\n  pop() {\n    const popped = this.current;\n\n    if (this.tmplCount > 0 && this._isInTemplate()) {\n      this.tmplCount--;\n    }\n\n    this.stackTop--;\n\n    this._updateCurrentElement();\n\n    this.handler.onItemPop(popped, true);\n  }\n\n  replace(oldElement, newElement) {\n    const idx = this._indexOf(oldElement);\n\n    this.items[idx] = newElement;\n\n    if (idx === this.stackTop) {\n      this.current = newElement;\n    }\n  }\n\n  insertAfter(referenceElement, newElement, newElementID) {\n    const insertionIdx = this._indexOf(referenceElement) + 1;\n    this.items.splice(insertionIdx, 0, newElement);\n    this.tagIDs.splice(insertionIdx, 0, newElementID);\n    this.stackTop++;\n\n    if (insertionIdx === this.stackTop) {\n      this._updateCurrentElement();\n    }\n\n    this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n  }\n\n  popUntilTagNamePopped(tagName) {\n    let targetIdx = this.stackTop + 1;\n\n    do {\n      targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n    } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n\n    this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n  }\n\n  shortenToLength(idx) {\n    while (this.stackTop >= idx) {\n      const popped = this.current;\n\n      if (this.tmplCount > 0 && this._isInTemplate()) {\n        this.tmplCount -= 1;\n      }\n\n      this.stackTop--;\n\n      this._updateCurrentElement();\n\n      this.handler.onItemPop(popped, this.stackTop < idx);\n    }\n  }\n\n  popUntilElementPopped(element) {\n    const idx = this._indexOf(element);\n\n    this.shortenToLength(idx < 0 ? 0 : idx);\n  }\n\n  popUntilPopped(tagNames, targetNS) {\n    const idx = this._indexOfTagNames(tagNames, targetNS);\n\n    this.shortenToLength(idx < 0 ? 0 : idx);\n  }\n\n  popUntilNumberedHeaderPopped() {\n    this.popUntilPopped(NAMED_HEADERS, NS.HTML);\n  }\n\n  popUntilTableCellPopped() {\n    this.popUntilPopped(TABLE_CELLS, NS.HTML);\n  }\n\n  popAllUpToHtmlElement() {\n    //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n    //we perform this fast stack clean up.\n    this.tmplCount = 0;\n    this.shortenToLength(1);\n  }\n\n  _indexOfTagNames(tagNames, namespace) {\n    for (let i = this.stackTop; i >= 0; i--) {\n      if (tagNames.includes(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  clearBackTo(tagNames, targetNS) {\n    const idx = this._indexOfTagNames(tagNames, targetNS);\n\n    this.shortenToLength(idx + 1);\n  }\n\n  clearBackToTableContext() {\n    this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n  }\n\n  clearBackToTableBodyContext() {\n    this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n  }\n\n  clearBackToTableRowContext() {\n    this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n  }\n\n  remove(element) {\n    const idx = this._indexOf(element);\n\n    if (idx >= 0) {\n      if (idx === this.stackTop) {\n        this.pop();\n      } else {\n        this.items.splice(idx, 1);\n        this.tagIDs.splice(idx, 1);\n        this.stackTop--;\n\n        this._updateCurrentElement();\n\n        this.handler.onItemPop(element, false);\n      }\n    }\n  } //Search\n\n\n  tryPeekProperlyNestedBodyElement() {\n    //Properly nested <body> element (should be second element in stack).\n    return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n  }\n\n  contains(element) {\n    return this._indexOf(element) > -1;\n  }\n\n  getCommonAncestor(element) {\n    const elementIdx = this._indexOf(element) - 1;\n    return elementIdx >= 0 ? this.items[elementIdx] : null;\n  }\n\n  isRootHtmlElementCurrent() {\n    return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n  } //Element in scope\n\n\n  hasInScope(tagName) {\n    for (let i = this.stackTop; i >= 0; i--) {\n      const tn = this.tagIDs[i];\n      const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n      if (tn === tagName && ns === NS.HTML) {\n        return true;\n      }\n\n      if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hasNumberedHeaderInScope() {\n    for (let i = this.stackTop; i >= 0; i--) {\n      const tn = this.tagIDs[i];\n      const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n      if (isNumberedHeader(tn) && ns === NS.HTML) {\n        return true;\n      }\n\n      if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hasInListItemScope(tagName) {\n    for (let i = this.stackTop; i >= 0; i--) {\n      const tn = this.tagIDs[i];\n      const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n      if (tn === tagName && ns === NS.HTML) {\n        return true;\n      }\n\n      if ((tn === $.UL || tn === $.OL) && ns === NS.HTML || SCOPING_ELEMENT_NS.get(tn) === ns) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hasInButtonScope(tagName) {\n    for (let i = this.stackTop; i >= 0; i--) {\n      const tn = this.tagIDs[i];\n      const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n      if (tn === tagName && ns === NS.HTML) {\n        return true;\n      }\n\n      if (tn === $.BUTTON && ns === NS.HTML || SCOPING_ELEMENT_NS.get(tn) === ns) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hasInTableScope(tagName) {\n    for (let i = this.stackTop; i >= 0; i--) {\n      const tn = this.tagIDs[i];\n      const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n      if (ns !== NS.HTML) {\n        continue;\n      }\n\n      if (tn === tagName) {\n        return true;\n      }\n\n      if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hasTableBodyContextInTableScope() {\n    for (let i = this.stackTop; i >= 0; i--) {\n      const tn = this.tagIDs[i];\n      const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n      if (ns !== NS.HTML) {\n        continue;\n      }\n\n      if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n        return true;\n      }\n\n      if (tn === $.TABLE || tn === $.HTML) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hasInSelectScope(tagName) {\n    for (let i = this.stackTop; i >= 0; i--) {\n      const tn = this.tagIDs[i];\n      const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n      if (ns !== NS.HTML) {\n        continue;\n      }\n\n      if (tn === tagName) {\n        return true;\n      }\n\n      if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n        return false;\n      }\n    }\n\n    return true;\n  } //Implied end tags\n\n\n  generateImpliedEndTags() {\n    while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n      this.pop();\n    }\n  }\n\n  generateImpliedEndTagsThoroughly() {\n    while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n      this.pop();\n    }\n  }\n\n  generateImpliedEndTagsWithExclusion(exclusionId) {\n    while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n      this.pop();\n    }\n  }\n\n}","map":{"version":3,"names":["TAG_ID","$","NS","isNumberedHeader","IMPLICIT_END_TAG_REQUIRED","Set","DD","DT","LI","OPTGROUP","OPTION","P","RB","RP","RT","RTC","IMPLICIT_END_TAG_REQUIRED_THOROUGHLY","CAPTION","COLGROUP","TBODY","TD","TFOOT","TH","THEAD","TR","SCOPING_ELEMENT_NS","Map","APPLET","HTML","MARQUEE","OBJECT","TABLE","TEMPLATE","ANNOTATION_XML","MATHML","MI","MN","MO","MS","MTEXT","DESC","SVG","FOREIGN_OBJECT","TITLE","NAMED_HEADERS","H1","H2","H3","H4","H5","H6","TABLE_ROW_CONTEXT","TABLE_BODY_CONTEXT","TABLE_CONTEXT","TABLE_CELLS","OpenElementStack","constructor","document","treeAdapter","handler","items","tagIDs","stackTop","tmplCount","currentTagId","UNKNOWN","current","currentTmplContentOrNode","_isInTemplate","getTemplateContent","_indexOf","element","lastIndexOf","getNamespaceURI","_updateCurrentElement","push","tagID","onItemPush","pop","popped","onItemPop","replace","oldElement","newElement","idx","insertAfter","referenceElement","newElementID","insertionIdx","splice","popUntilTagNamePopped","tagName","targetIdx","shortenToLength","popUntilElementPopped","popUntilPopped","tagNames","targetNS","_indexOfTagNames","popUntilNumberedHeaderPopped","popUntilTableCellPopped","popAllUpToHtmlElement","namespace","i","includes","clearBackTo","clearBackToTableContext","clearBackToTableBodyContext","clearBackToTableRowContext","remove","tryPeekProperlyNestedBodyElement","BODY","contains","getCommonAncestor","elementIdx","isRootHtmlElementCurrent","hasInScope","tn","ns","get","hasNumberedHeaderInScope","hasInListItemScope","UL","OL","hasInButtonScope","BUTTON","hasInTableScope","hasTableBodyContextInTableScope","hasInSelectScope","generateImpliedEndTags","has","generateImpliedEndTagsThoroughly","generateImpliedEndTagsWithExclusion","exclusionId"],"sources":["/Users/soheilvafaei/Documents/project/web/resume/ex7/node_modules/cheerio/node_modules/parse5/dist/parser/open-element-stack.js"],"sourcesContent":["import { TAG_ID as $, NS, isNumberedHeader } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENT_NS = new Map([\n    [$.APPLET, NS.HTML],\n    [$.CAPTION, NS.HTML],\n    [$.HTML, NS.HTML],\n    [$.MARQUEE, NS.HTML],\n    [$.OBJECT, NS.HTML],\n    [$.TABLE, NS.HTML],\n    [$.TD, NS.HTML],\n    [$.TEMPLATE, NS.HTML],\n    [$.TH, NS.HTML],\n    [$.ANNOTATION_XML, NS.MATHML],\n    [$.MI, NS.MATHML],\n    [$.MN, NS.MATHML],\n    [$.MO, NS.MATHML],\n    [$.MS, NS.MATHML],\n    [$.MTEXT, NS.MATHML],\n    [$.DESC, NS.SVG],\n    [$.FOREIGN_OBJECT, NS.SVG],\n    [$.TITLE, NS.SVG],\n]);\nconst NAMED_HEADERS = [$.H1, $.H2, $.H3, $.H4, $.H5, $.H6];\nconst TABLE_ROW_CONTEXT = [$.TR, $.TEMPLATE, $.HTML];\nconst TABLE_BODY_CONTEXT = [$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML];\nconst TABLE_CONTEXT = [$.TABLE, $.TEMPLATE, $.HTML];\nconst TABLE_CELLS = [$.TD, $.TH];\n//Stack of open elements\nexport class OpenElementStack {\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NAMED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.includes(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (isNumberedHeader(tn) && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInListItemScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInButtonScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if ((tn === $.BUTTON && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n                return false;\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n//# sourceMappingURL=open-element-stack.js.map"],"mappings":"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"},"metadata":{},"sourceType":"module"}