{"ast":null,"code":"\"use strict\";\n/**\n * @protected\n *\n * @packageDocumentation\n */\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.readStorage = exports.readSlot = void 0;\n\nconst debug_1 = __importDefault(require(\"debug\"));\n\nconst debug = (0, debug_1.default)(\"codec:storage:read\");\n\nconst Conversion = __importStar(require(\"../../conversion\"));\n\nconst Utils = __importStar(require(\"../utils\"));\n\nconst Evm = __importStar(require(\"../../evm\"));\n\nconst errors_1 = require(\"../../errors\");\n\nfunction* readSlot(storage, slot) {\n  const address = Utils.slotAddress(slot); // debug(\"reading slot: %o\", Conversion.toHexString(address));\n\n  const hexAddress = Conversion.toHexString(address, Evm.Utils.WORD_SIZE);\n  let word = storage[hexAddress]; //if we can't find the word in the map, we place a request to the invoker to supply it\n  //(contract-decoder will look it up from the blockchain, while the debugger will just\n  //say 0)\n\n  if (word === undefined) {\n    word = yield {\n      type: \"storage\",\n      slot: address\n    };\n\n    if (word === null) {\n      //check for null as a way to deliberately indicate an error\n      throw new errors_1.DecodingError({\n        kind: \"StorageNotSuppliedError\",\n        slot: address\n      });\n    }\n  }\n\n  return word;\n}\n\nexports.readSlot = readSlot;\n\nfunction* readStorage(pointer, state) {\n  const {\n    storage\n  } = state;\n  const {\n    range\n  } = pointer;\n  debug(\"readRange %o\", range);\n  let {\n    from,\n    to,\n    length\n  } = range;\n  from = {\n    slot: from.slot,\n    index: from.index || 0\n  };\n\n  if (length !== undefined) {\n    to = {\n      slot: {\n        path: from.slot.path || undefined,\n        offset: from.slot.offset.addn(Math.floor((from.index + length - 1) / Evm.Utils.WORD_SIZE))\n      },\n      index: (from.index + length - 1) % Evm.Utils.WORD_SIZE\n    };\n  }\n\n  debug(\"normalized readRange %o\", {\n    from,\n    to\n  });\n  let totalWordsAsBN = to.slot.offset.sub(from.slot.offset).addn(1);\n  let totalWords;\n\n  try {\n    totalWords = totalWordsAsBN.toNumber();\n  } catch (_) {\n    throw new errors_1.DecodingError({\n      kind: \"ReadErrorStorage\",\n      range\n    });\n  }\n\n  let data = new Uint8Array(totalWords * Evm.Utils.WORD_SIZE);\n\n  for (let i = 0; i < totalWords; i++) {\n    let offset = from.slot.offset.addn(i);\n    const word = yield* readSlot(storage, Object.assign(Object.assign({}, from.slot), {\n      offset\n    }));\n    data.set(word, i * Evm.Utils.WORD_SIZE);\n  }\n\n  debug(\"words %o\", data);\n  data = data.slice(from.index, (totalWords - 1) * Evm.Utils.WORD_SIZE + to.index + 1);\n  debug(\"data: %o\", data);\n  return data;\n}\n\nexports.readStorage = readStorage;","map":{"version":3,"mappings":"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","names":["debug","readSlot","storage","slot","address","Utils","slotAddress","hexAddress","Conversion","toHexString","Evm","WORD_SIZE","word","undefined","type","errors_1","kind","exports","readStorage","pointer","state","range","from","to","length","index","path","offset","addn","Math","floor","totalWordsAsBN","sub","totalWords","toNumber","_","data","Uint8Array","i","Object","set","slice"],"sourceRoot":"","sources":["../../../../lib/storage/read/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}