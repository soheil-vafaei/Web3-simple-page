{"ast":null,"code":"export function segmentsToPathMapper(segments) {\n  return segments.map(v => `/${v}`).join('');\n}\nexport function segmentsToPathUnmapper(value) {\n  if (typeof value !== 'string') {\n    throw new Error('Incompatible value received: type');\n  }\n\n  if (value.length !== 0 && value[0] !== '/') {\n    throw new Error('Incompatible value received: start');\n  }\n\n  return value.split('/').splice(1);\n}","map":{"version":3,"names":["segmentsToPathMapper","segments","map","v","join","segmentsToPathUnmapper","value","Error","length","split","splice"],"sources":["/Users/soheilvafaei/Documents/project/web/web3/ex7/node_modules/fast-check/lib/esm/arbitrary/_internals/mappers/SegmentsToPath.js"],"sourcesContent":["export function segmentsToPathMapper(segments) {\n    return segments.map((v) => `/${v}`).join('');\n}\nexport function segmentsToPathUnmapper(value) {\n    if (typeof value !== 'string') {\n        throw new Error('Incompatible value received: type');\n    }\n    if (value.length !== 0 && value[0] !== '/') {\n        throw new Error('Incompatible value received: start');\n    }\n    return value.split('/').splice(1);\n}\n"],"mappings":"AAAA,OAAO,SAASA,oBAAT,CAA8BC,QAA9B,EAAwC;EAC3C,OAAOA,QAAQ,CAACC,GAAT,CAAcC,CAAD,IAAQ,IAAGA,CAAE,EAA1B,EAA6BC,IAA7B,CAAkC,EAAlC,CAAP;AACH;AACD,OAAO,SAASC,sBAAT,CAAgCC,KAAhC,EAAuC;EAC1C,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;IAC3B,MAAM,IAAIC,KAAJ,CAAU,mCAAV,CAAN;EACH;;EACD,IAAID,KAAK,CAACE,MAAN,KAAiB,CAAjB,IAAsBF,KAAK,CAAC,CAAD,CAAL,KAAa,GAAvC,EAA4C;IACxC,MAAM,IAAIC,KAAJ,CAAU,oCAAV,CAAN;EACH;;EACD,OAAOD,KAAK,CAACG,KAAN,CAAY,GAAZ,EAAiBC,MAAjB,CAAwB,CAAxB,CAAP;AACH"},"metadata":{},"sourceType":"module"}