{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ConsensusAlgorithm = exports.ConsensusType = exports.Hardfork = exports.Chain = exports.CustomChain = void 0;\n\nvar events_1 = require(\"events\");\n\nvar crc_32_1 = require(\"crc-32\");\n\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\n\nvar chains_1 = require(\"./chains\");\n\nvar hardforks_1 = require(\"./hardforks\");\n\nvar eips_1 = require(\"./eips\");\n\nvar CustomChain;\n\n(function (CustomChain) {\n  /**\n   * Polygon (Matic) Mainnet\n   *\n   * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n   */\n  CustomChain[\"PolygonMainnet\"] = \"polygon-mainnet\";\n  /**\n   * Polygon (Matic) Mumbai Testnet\n   *\n   * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n   */\n\n  CustomChain[\"PolygonMumbai\"] = \"polygon-mumbai\";\n  /**\n   * Arbitrum Rinkeby Testnet\n   *\n   * - [Documentation](https://developer.offchainlabs.com/docs/public_testnet)\n   */\n\n  CustomChain[\"ArbitrumRinkebyTestnet\"] = \"arbitrum-rinkeby-testnet\";\n  /**\n   * xDai EVM sidechain with a native stable token\n   *\n   * - [Documentation](https://www.xdaichain.com/)\n   */\n\n  CustomChain[\"xDaiChain\"] = \"x-dai-chain\";\n  /**\n   * Optimistic Kovan - testnet for Optimism roll-up\n   *\n   * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n   */\n\n  CustomChain[\"OptimisticKovan\"] = \"optimistic-kovan\";\n  /**\n   * Optimistic Ethereum - mainnet for Optimism roll-up\n   *\n   * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n   */\n\n  CustomChain[\"OptimisticEthereum\"] = \"optimistic-ethereum\";\n})(CustomChain = exports.CustomChain || (exports.CustomChain = {}));\n\nvar Chain;\n\n(function (Chain) {\n  Chain[Chain[\"Mainnet\"] = 1] = \"Mainnet\";\n  Chain[Chain[\"Ropsten\"] = 3] = \"Ropsten\";\n  Chain[Chain[\"Rinkeby\"] = 4] = \"Rinkeby\";\n  Chain[Chain[\"Kovan\"] = 42] = \"Kovan\";\n  Chain[Chain[\"Goerli\"] = 5] = \"Goerli\";\n  Chain[Chain[\"Sepolia\"] = 11155111] = \"Sepolia\";\n})(Chain = exports.Chain || (exports.Chain = {}));\n\nvar Hardfork;\n\n(function (Hardfork) {\n  Hardfork[\"Chainstart\"] = \"chainstart\";\n  Hardfork[\"Homestead\"] = \"homestead\";\n  Hardfork[\"Dao\"] = \"dao\";\n  Hardfork[\"TangerineWhistle\"] = \"tangerineWhistle\";\n  Hardfork[\"SpuriousDragon\"] = \"spuriousDragon\";\n  Hardfork[\"Byzantium\"] = \"byzantium\";\n  Hardfork[\"Constantinople\"] = \"constantinople\";\n  Hardfork[\"Petersburg\"] = \"petersburg\";\n  Hardfork[\"Istanbul\"] = \"istanbul\";\n  Hardfork[\"MuirGlacier\"] = \"muirGlacier\";\n  Hardfork[\"Berlin\"] = \"berlin\";\n  Hardfork[\"London\"] = \"london\";\n  Hardfork[\"ArrowGlacier\"] = \"arrowGlacier\";\n  Hardfork[\"GrayGlacier\"] = \"grayGlacier\";\n  Hardfork[\"MergeForkIdTransition\"] = \"mergeForkIdTransition\";\n  Hardfork[\"Merge\"] = \"merge\";\n  Hardfork[\"Shanghai\"] = \"shanghai\";\n})(Hardfork = exports.Hardfork || (exports.Hardfork = {}));\n\nvar ConsensusType;\n\n(function (ConsensusType) {\n  ConsensusType[\"ProofOfStake\"] = \"pos\";\n  ConsensusType[\"ProofOfWork\"] = \"pow\";\n  ConsensusType[\"ProofOfAuthority\"] = \"poa\";\n})(ConsensusType = exports.ConsensusType || (exports.ConsensusType = {}));\n\nvar ConsensusAlgorithm;\n\n(function (ConsensusAlgorithm) {\n  ConsensusAlgorithm[\"Ethash\"] = \"ethash\";\n  ConsensusAlgorithm[\"Clique\"] = \"clique\";\n  ConsensusAlgorithm[\"Casper\"] = \"casper\";\n})(ConsensusAlgorithm = exports.ConsensusAlgorithm || (exports.ConsensusAlgorithm = {}));\n/**\n * Common class to access chain and hardfork parameters and to provide\n * a unified and shared view on the network and hardfork state.\n *\n * Use the {@link Common.custom} static constructor for creating simple\n * custom chain {@link Common} objects (more complete custom chain setups\n * can be created via the main constructor and the {@link CommonOpts.customChains} parameter).\n */\n\n\nvar Common =\n/** @class */\nfunction (_super) {\n  __extends(Common, _super);\n  /**\n   *\n   * @constructor\n   */\n\n\n  function Common(opts) {\n    var e_1, _a;\n\n    var _this = this;\n\n    var _b, _c;\n\n    _this = _super.call(this) || this;\n    _this._supportedHardforks = [];\n    _this._eips = [];\n    _this._customChains = (_b = opts.customChains) !== null && _b !== void 0 ? _b : [];\n    _this._chainParams = _this.setChain(opts.chain);\n    _this.DEFAULT_HARDFORK = (_c = _this._chainParams.defaultHardfork) !== null && _c !== void 0 ? _c : Hardfork.Istanbul;\n\n    try {\n      for (var _d = __values(_this._chainParams.hardforks), _e = _d.next(); !_e.done; _e = _d.next()) {\n        var hf = _e.value;\n\n        if (!hf.forkHash) {\n          hf.forkHash = _this._calcForkHash(hf.name);\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    _this._hardfork = _this.DEFAULT_HARDFORK;\n\n    if (opts.supportedHardforks) {\n      _this._supportedHardforks = opts.supportedHardforks;\n    }\n\n    if (opts.hardfork) {\n      _this.setHardfork(opts.hardfork);\n    }\n\n    if (opts.eips) {\n      _this.setEIPs(opts.eips);\n    }\n\n    return _this;\n  }\n  /**\n   * Creates a {@link Common} object for a custom chain, based on a standard one.\n   *\n   * It uses all the {@link Chain} parameters from the {@link baseChain} option except the ones overridden\n   * in a provided {@link chainParamsOrName} dictionary. Some usage example:\n   *\n   * ```javascript\n   * Common.custom({chainId: 123})\n   * ```\n   *\n   * There are also selected supported custom chains which can be initialized by using one of the\n   * {@link CustomChains} for {@link chainParamsOrName}, e.g.:\n   *\n   * ```javascript\n   * Common.custom(CustomChains.MaticMumbai)\n   * ```\n   *\n   * Note that these supported custom chains only provide some base parameters (usually the chain and\n   * network ID and a name) and can only be used for selected use cases (e.g. sending a tx with\n   * the `@ethereumjs/tx` library to a Layer-2 chain).\n   *\n   * @param chainParamsOrName Custom parameter dict (`name` will default to `custom-chain`) or string with name of a supported custom chain\n   * @param opts Custom chain options to set the {@link CustomCommonOpts.baseChain}, selected {@link CustomCommonOpts.hardfork} and others\n   */\n\n\n  Common.custom = function (chainParamsOrName, opts) {\n    var _a;\n\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    var baseChain = (_a = opts.baseChain) !== null && _a !== void 0 ? _a : 'mainnet';\n\n    var standardChainParams = __assign({}, Common._getChainParams(baseChain));\n\n    standardChainParams['name'] = 'custom-chain';\n\n    if (typeof chainParamsOrName !== 'string') {\n      return new Common(__assign({\n        chain: __assign(__assign({}, standardChainParams), chainParamsOrName)\n      }, opts));\n    } else {\n      if (chainParamsOrName === CustomChain.PolygonMainnet) {\n        return Common.custom({\n          name: CustomChain.PolygonMainnet,\n          chainId: 137,\n          networkId: 137\n        }, opts);\n      }\n\n      if (chainParamsOrName === CustomChain.PolygonMumbai) {\n        return Common.custom({\n          name: CustomChain.PolygonMumbai,\n          chainId: 80001,\n          networkId: 80001\n        }, opts);\n      }\n\n      if (chainParamsOrName === CustomChain.ArbitrumRinkebyTestnet) {\n        return Common.custom({\n          name: CustomChain.ArbitrumRinkebyTestnet,\n          chainId: 421611,\n          networkId: 421611\n        }, opts);\n      }\n\n      if (chainParamsOrName === CustomChain.xDaiChain) {\n        return Common.custom({\n          name: CustomChain.xDaiChain,\n          chainId: 100,\n          networkId: 100\n        }, opts);\n      }\n\n      if (chainParamsOrName === CustomChain.OptimisticKovan) {\n        return Common.custom({\n          name: CustomChain.OptimisticKovan,\n          chainId: 69,\n          networkId: 69\n        }, __assign({\n          hardfork: Hardfork.Berlin\n        }, opts));\n      }\n\n      if (chainParamsOrName === CustomChain.OptimisticEthereum) {\n        return Common.custom({\n          name: CustomChain.OptimisticEthereum,\n          chainId: 10,\n          networkId: 10\n        }, __assign({\n          hardfork: Hardfork.Berlin\n        }, opts));\n      }\n\n      throw new Error(\"Custom chain \".concat(chainParamsOrName, \" not supported\"));\n    }\n  };\n  /**\n   * Creates a {@link Common} object for a custom chain, based on a standard one. It uses all the `Chain`\n   * params from {@link baseChain} except the ones overridden in {@link customChainParams}.\n   *\n   * @deprecated Use {@link Common.custom} instead\n   *\n   * @param baseChain The name (`mainnet`) or id (`1`) of a standard chain used to base the custom\n   * chain params on.\n   * @param customChainParams The custom parameters of the chain.\n   * @param hardfork String identifier ('byzantium') for hardfork (optional)\n   * @param supportedHardforks Limit parameter returns to the given hardforks (optional)\n   */\n\n\n  Common.forCustomChain = function (baseChain, customChainParams, hardfork, supportedHardforks) {\n    var standardChainParams = Common._getChainParams(baseChain);\n\n    return new Common({\n      chain: __assign(__assign({}, standardChainParams), customChainParams),\n      hardfork: hardfork,\n      supportedHardforks: supportedHardforks\n    });\n  };\n  /**\n   * Static method to determine if a {@link chainId} is supported as a standard chain\n   * @param chainId BN id (`1`) of a standard chain\n   * @returns boolean\n   */\n\n\n  Common.isSupportedChainId = function (chainId) {\n    var initializedChains = (0, chains_1._getInitializedChains)();\n    return Boolean(initializedChains['names'][chainId.toString()]);\n  };\n\n  Common._getChainParams = function (chain, customChains) {\n    var initializedChains = (0, chains_1._getInitializedChains)(customChains);\n\n    if (typeof chain === 'number' || ethereumjs_util_1.BN.isBN(chain)) {\n      chain = chain.toString();\n\n      if (initializedChains['names'][chain]) {\n        var name_1 = initializedChains['names'][chain];\n        return initializedChains[name_1];\n      }\n\n      throw new Error(\"Chain with ID \".concat(chain, \" not supported\"));\n    }\n\n    if (initializedChains[chain]) {\n      return initializedChains[chain];\n    }\n\n    throw new Error(\"Chain with name \".concat(chain, \" not supported\"));\n  };\n  /**\n   * Sets the chain\n   * @param chain String ('mainnet') or Number (1) chain\n   *     representation. Or, a Dictionary of chain parameters for a private network.\n   * @returns The dictionary with parameters set as chain\n   */\n\n\n  Common.prototype.setChain = function (chain) {\n    var e_2, _a;\n\n    if (typeof chain === 'number' || typeof chain === 'string' || ethereumjs_util_1.BN.isBN(chain)) {\n      // Filter out genesis states if passed in to customChains\n      var plainCustomChains = void 0;\n\n      if (this._customChains && this._customChains.length > 0 && Array.isArray(this._customChains[0])) {\n        plainCustomChains = this._customChains.map(function (e) {\n          return e[0];\n        });\n      } else {\n        plainCustomChains = this._customChains;\n      }\n\n      this._chainParams = Common._getChainParams(chain, plainCustomChains);\n    } else if (typeof chain === 'object') {\n      if (this._customChains.length > 0) {\n        throw new Error('Chain must be a string, number, or BN when initialized with customChains passed in');\n      }\n\n      var required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes'];\n\n      try {\n        for (var required_1 = __values(required), required_1_1 = required_1.next(); !required_1_1.done; required_1_1 = required_1.next()) {\n          var param = required_1_1.value;\n\n          if (chain[param] === undefined) {\n            throw new Error(\"Missing required chain parameter: \".concat(param));\n          }\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (required_1_1 && !required_1_1.done && (_a = required_1.return)) _a.call(required_1);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n\n      this._chainParams = chain;\n    } else {\n      throw new Error('Wrong input format');\n    }\n\n    return this._chainParams;\n  };\n  /**\n   * Sets the hardfork to get params for\n   * @param hardfork String identifier (e.g. 'byzantium') or {@link Hardfork} enum\n   */\n\n\n  Common.prototype.setHardfork = function (hardfork) {\n    var e_3, _a;\n\n    if (!this._isSupportedHardfork(hardfork)) {\n      throw new Error(\"Hardfork \".concat(hardfork, \" not set as supported in supportedHardforks\"));\n    }\n\n    var existing = false;\n\n    try {\n      for (var HARDFORK_CHANGES_1 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_1_1 = HARDFORK_CHANGES_1.next(); !HARDFORK_CHANGES_1_1.done; HARDFORK_CHANGES_1_1 = HARDFORK_CHANGES_1.next()) {\n        var hfChanges = HARDFORK_CHANGES_1_1.value;\n\n        if (hfChanges[0] === hardfork) {\n          if (this._hardfork !== hardfork) {\n            this._hardfork = hardfork;\n            this.emit('hardforkChanged', hardfork);\n          }\n\n          existing = true;\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (HARDFORK_CHANGES_1_1 && !HARDFORK_CHANGES_1_1.done && (_a = HARDFORK_CHANGES_1.return)) _a.call(HARDFORK_CHANGES_1);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    if (!existing) {\n      throw new Error(\"Hardfork with name \".concat(hardfork, \" not supported\"));\n    }\n  };\n  /**\n   * Returns the hardfork based on the block number or an optional\n   * total difficulty (Merge HF) provided.\n   *\n   * An optional TD takes precedence in case the corresponding HF block\n   * is set to `null` or otherwise needs to match (if not an error\n   * will be thrown).\n   *\n   * @param blockNumber\n   * @param td\n   * @returns The name of the HF\n   */\n\n\n  Common.prototype.getHardforkByBlockNumber = function (blockNumber, td) {\n    var e_4, _a;\n\n    blockNumber = (0, ethereumjs_util_1.toType)(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n    td = (0, ethereumjs_util_1.toType)(td, ethereumjs_util_1.TypeOutput.BN);\n    var hardfork = Hardfork.Chainstart;\n    var minTdHF;\n    var maxTdHF;\n    var previousHF;\n\n    try {\n      for (var _b = __values(this.hardforks()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var hf = _c.value; // Skip comparison for not applied HFs\n\n        if (hf.block === null) {\n          if (td !== undefined && td !== null && hf.td !== undefined && hf.td !== null) {\n            if (td.gte(new ethereumjs_util_1.BN(hf.td))) {\n              return hf.name;\n            }\n          }\n\n          continue;\n        }\n\n        if (blockNumber.gte(new ethereumjs_util_1.BN(hf.block))) {\n          hardfork = hf.name;\n        }\n\n        if (td && hf.td) {\n          if (td.gte(new ethereumjs_util_1.BN(hf.td))) {\n            minTdHF = hf.name;\n          } else {\n            maxTdHF = previousHF;\n          }\n        }\n\n        previousHF = hf.name;\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    if (td) {\n      var msgAdd = \"block number: \".concat(blockNumber, \" (-> \").concat(hardfork, \"), \");\n\n      if (minTdHF) {\n        if (!this.hardforkGteHardfork(hardfork, minTdHF)) {\n          var msg = 'HF determined by block number is lower than the minimum total difficulty HF';\n          msgAdd += \"total difficulty: \".concat(td, \" (-> \").concat(minTdHF, \")\");\n          throw new Error(\"\".concat(msg, \": \").concat(msgAdd));\n        }\n      }\n\n      if (maxTdHF) {\n        if (!this.hardforkGteHardfork(maxTdHF, hardfork)) {\n          var msg = 'Maximum HF determined by total difficulty is lower than the block number HF';\n          msgAdd += \"total difficulty: \".concat(td, \" (-> \").concat(maxTdHF, \")\");\n          throw new Error(\"\".concat(msg, \": \").concat(msgAdd));\n        }\n      }\n    }\n\n    return hardfork;\n  };\n  /**\n   * Sets a new hardfork based on the block number or an optional\n   * total difficulty (Merge HF) provided.\n   *\n   * An optional TD takes precedence in case the corresponding HF block\n   * is set to `null` or otherwise needs to match (if not an error\n   * will be thrown).\n   *\n   * @param blockNumber\n   * @param td\n   * @returns The name of the HF set\n   */\n\n\n  Common.prototype.setHardforkByBlockNumber = function (blockNumber, td) {\n    var hardfork = this.getHardforkByBlockNumber(blockNumber, td);\n    this.setHardfork(hardfork);\n    return hardfork;\n  };\n  /**\n   * Internal helper function to choose between hardfork set and hardfork provided as param\n   * @param hardfork Hardfork given to function as a parameter\n   * @returns Hardfork chosen to be used\n   */\n\n\n  Common.prototype._chooseHardfork = function (hardfork, onlySupported) {\n    if (onlySupported === void 0) {\n      onlySupported = true;\n    }\n\n    if (!hardfork) {\n      hardfork = this._hardfork;\n    } else if (onlySupported && !this._isSupportedHardfork(hardfork)) {\n      throw new Error(\"Hardfork \".concat(hardfork, \" not set as supported in supportedHardforks\"));\n    }\n\n    return hardfork;\n  };\n  /**\n   * Internal helper function, returns the params for the given hardfork for the chain set\n   * @param hardfork Hardfork name\n   * @returns Dictionary with hardfork params\n   */\n\n\n  Common.prototype._getHardfork = function (hardfork) {\n    var e_5, _a;\n\n    var hfs = this.hardforks();\n\n    try {\n      for (var hfs_1 = __values(hfs), hfs_1_1 = hfs_1.next(); !hfs_1_1.done; hfs_1_1 = hfs_1.next()) {\n        var hf = hfs_1_1.value;\n        if (hf['name'] === hardfork) return hf;\n      }\n    } catch (e_5_1) {\n      e_5 = {\n        error: e_5_1\n      };\n    } finally {\n      try {\n        if (hfs_1_1 && !hfs_1_1.done && (_a = hfs_1.return)) _a.call(hfs_1);\n      } finally {\n        if (e_5) throw e_5.error;\n      }\n    }\n\n    throw new Error(\"Hardfork \".concat(hardfork, \" not defined for chain \").concat(this.chainName()));\n  };\n  /**\n   * Internal helper function to check if a hardfork is set to be supported by the library\n   * @param hardfork Hardfork name\n   * @returns True if hardfork is supported\n   */\n\n\n  Common.prototype._isSupportedHardfork = function (hardfork) {\n    var e_6, _a;\n\n    if (this._supportedHardforks.length > 0) {\n      try {\n        for (var _b = __values(this._supportedHardforks), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var supportedHf = _c.value;\n          if (hardfork === supportedHf) return true;\n        }\n      } catch (e_6_1) {\n        e_6 = {\n          error: e_6_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_6) throw e_6.error;\n        }\n      }\n    } else {\n      return true;\n    }\n\n    return false;\n  };\n  /**\n   * Sets the active EIPs\n   * @param eips\n   */\n\n\n  Common.prototype.setEIPs = function (eips) {\n    var e_7, _a;\n\n    var _this = this;\n\n    if (eips === void 0) {\n      eips = [];\n    }\n\n    var _loop_1 = function (eip) {\n      if (!(eip in eips_1.EIPs)) {\n        throw new Error(\"\".concat(eip, \" not supported\"));\n      }\n\n      var minHF = this_1.gteHardfork(eips_1.EIPs[eip]['minimumHardfork']);\n\n      if (!minHF) {\n        throw new Error(\"\".concat(eip, \" cannot be activated on hardfork \").concat(this_1.hardfork(), \", minimumHardfork: \").concat(minHF));\n      }\n\n      if (eips_1.EIPs[eip].requiredEIPs) {\n        ;\n        eips_1.EIPs[eip].requiredEIPs.forEach(function (elem) {\n          if (!(eips.includes(elem) || _this.isActivatedEIP(elem))) {\n            throw new Error(\"\".concat(eip, \" requires EIP \").concat(elem, \", but is not included in the EIP list\"));\n          }\n        });\n      }\n    };\n\n    var this_1 = this;\n\n    try {\n      for (var eips_2 = __values(eips), eips_2_1 = eips_2.next(); !eips_2_1.done; eips_2_1 = eips_2.next()) {\n        var eip = eips_2_1.value;\n\n        _loop_1(eip);\n      }\n    } catch (e_7_1) {\n      e_7 = {\n        error: e_7_1\n      };\n    } finally {\n      try {\n        if (eips_2_1 && !eips_2_1.done && (_a = eips_2.return)) _a.call(eips_2);\n      } finally {\n        if (e_7) throw e_7.error;\n      }\n    }\n\n    this._eips = eips;\n  };\n  /**\n   * Returns a parameter for the current chain setup\n   *\n   * If the parameter is present in an EIP, the EIP always takes precendence.\n   * Otherwise the parameter if taken from the latest applied HF with\n   * a change on the respective parameter.\n   *\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @returns The value requested or `null` if not found\n   */\n\n\n  Common.prototype.param = function (topic, name) {\n    var e_8, _a; // TODO: consider the case that different active EIPs\n    // can change the same parameter\n\n\n    var value = null;\n\n    try {\n      for (var _b = __values(this._eips), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var eip = _c.value;\n        value = this.paramByEIP(topic, name, eip);\n\n        if (value !== null) {\n          return value;\n        }\n      }\n    } catch (e_8_1) {\n      e_8 = {\n        error: e_8_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_8) throw e_8.error;\n      }\n    }\n\n    return this.paramByHardfork(topic, name, this._hardfork);\n  };\n  /**\n   * Returns the parameter corresponding to a hardfork\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param hardfork Hardfork name\n   * @returns The value requested or `null` if not found\n   */\n\n\n  Common.prototype.paramByHardfork = function (topic, name, hardfork) {\n    var e_9, _a, e_10, _b;\n\n    hardfork = this._chooseHardfork(hardfork);\n    var value = null;\n\n    try {\n      for (var HARDFORK_CHANGES_2 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_2_1 = HARDFORK_CHANGES_2.next(); !HARDFORK_CHANGES_2_1.done; HARDFORK_CHANGES_2_1 = HARDFORK_CHANGES_2.next()) {\n        var hfChanges = HARDFORK_CHANGES_2_1.value; // EIP-referencing HF file (e.g. berlin.json)\n\n        if ('eips' in hfChanges[1]) {\n          var hfEIPs = hfChanges[1]['eips'];\n\n          try {\n            for (var hfEIPs_1 = (e_10 = void 0, __values(hfEIPs)), hfEIPs_1_1 = hfEIPs_1.next(); !hfEIPs_1_1.done; hfEIPs_1_1 = hfEIPs_1.next()) {\n              var eip = hfEIPs_1_1.value;\n              var valueEIP = this.paramByEIP(topic, name, eip);\n              value = valueEIP !== null ? valueEIP : value;\n            }\n          } catch (e_10_1) {\n            e_10 = {\n              error: e_10_1\n            };\n          } finally {\n            try {\n              if (hfEIPs_1_1 && !hfEIPs_1_1.done && (_b = hfEIPs_1.return)) _b.call(hfEIPs_1);\n            } finally {\n              if (e_10) throw e_10.error;\n            }\n          } // Paramater-inlining HF file (e.g. istanbul.json)\n\n        } else {\n          if (!hfChanges[1][topic]) {\n            throw new Error(\"Topic \".concat(topic, \" not defined\"));\n          }\n\n          if (hfChanges[1][topic][name] !== undefined) {\n            value = hfChanges[1][topic][name].v;\n          }\n        }\n\n        if (hfChanges[0] === hardfork) break;\n      }\n    } catch (e_9_1) {\n      e_9 = {\n        error: e_9_1\n      };\n    } finally {\n      try {\n        if (HARDFORK_CHANGES_2_1 && !HARDFORK_CHANGES_2_1.done && (_a = HARDFORK_CHANGES_2.return)) _a.call(HARDFORK_CHANGES_2);\n      } finally {\n        if (e_9) throw e_9.error;\n      }\n    }\n\n    return value;\n  };\n  /**\n   * Returns a parameter corresponding to an EIP\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param eip Number of the EIP\n   * @returns The value requested or `null` if not found\n   */\n\n\n  Common.prototype.paramByEIP = function (topic, name, eip) {\n    if (!(eip in eips_1.EIPs)) {\n      throw new Error(\"\".concat(eip, \" not supported\"));\n    }\n\n    var eipParams = eips_1.EIPs[eip];\n\n    if (!(topic in eipParams)) {\n      throw new Error(\"Topic \".concat(topic, \" not defined\"));\n    }\n\n    if (eipParams[topic][name] === undefined) {\n      return null;\n    }\n\n    var value = eipParams[topic][name].v;\n    return value;\n  };\n  /**\n   * Returns a parameter for the hardfork active on block number\n   * @param topic Parameter topic\n   * @param name Parameter name\n   * @param blockNumber Block number\n   */\n\n\n  Common.prototype.paramByBlock = function (topic, name, blockNumber) {\n    var activeHfs = this.activeHardforks(blockNumber);\n    var hardfork = activeHfs[activeHfs.length - 1]['name'];\n    return this.paramByHardfork(topic, name, hardfork);\n  };\n  /**\n   * Checks if an EIP is activated by either being included in the EIPs\n   * manually passed in with the {@link CommonOpts.eips} or in a\n   * hardfork currently being active\n   *\n   * Note: this method only works for EIPs being supported\n   * by the {@link CommonOpts.eips} constructor option\n   * @param eip\n   */\n\n\n  Common.prototype.isActivatedEIP = function (eip) {\n    var e_11, _a;\n\n    if (this.eips().includes(eip)) {\n      return true;\n    }\n\n    try {\n      for (var HARDFORK_CHANGES_3 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_3_1 = HARDFORK_CHANGES_3.next(); !HARDFORK_CHANGES_3_1.done; HARDFORK_CHANGES_3_1 = HARDFORK_CHANGES_3.next()) {\n        var hfChanges = HARDFORK_CHANGES_3_1.value;\n        var hf = hfChanges[1];\n\n        if (this.gteHardfork(hf['name']) && 'eips' in hf) {\n          if (hf['eips'].includes(eip)) {\n            return true;\n          }\n        }\n      }\n    } catch (e_11_1) {\n      e_11 = {\n        error: e_11_1\n      };\n    } finally {\n      try {\n        if (HARDFORK_CHANGES_3_1 && !HARDFORK_CHANGES_3_1.done && (_a = HARDFORK_CHANGES_3.return)) _a.call(HARDFORK_CHANGES_3);\n      } finally {\n        if (e_11) throw e_11.error;\n      }\n    }\n\n    return false;\n  };\n  /**\n   * Checks if set or provided hardfork is active on block number\n   * @param hardfork Hardfork name or null (for HF set)\n   * @param blockNumber\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if HF is active on block number\n   */\n\n\n  Common.prototype.hardforkIsActiveOnBlock = function (hardfork, blockNumber, opts) {\n    var _a;\n\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    blockNumber = (0, ethereumjs_util_1.toType)(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n    var onlySupported = (_a = opts.onlySupported) !== null && _a !== void 0 ? _a : false;\n    hardfork = this._chooseHardfork(hardfork, onlySupported);\n    var hfBlock = this.hardforkBlockBN(hardfork);\n\n    if (hfBlock && blockNumber.gte(hfBlock)) {\n      return true;\n    }\n\n    return false;\n  };\n  /**\n   * Alias to hardforkIsActiveOnBlock when hardfork is set\n   * @param blockNumber\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if HF is active on block number\n   */\n\n\n  Common.prototype.activeOnBlock = function (blockNumber, opts) {\n    return this.hardforkIsActiveOnBlock(null, blockNumber, opts);\n  };\n  /**\n   * Sequence based check if given or set HF1 is greater than or equal HF2\n   * @param hardfork1 Hardfork name or null (if set)\n   * @param hardfork2 Hardfork name\n   * @param opts Hardfork options\n   * @returns True if HF1 gte HF2\n   */\n\n\n  Common.prototype.hardforkGteHardfork = function (hardfork1, hardfork2, opts) {\n    var e_12, _a;\n\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    var onlyActive = opts.onlyActive === undefined ? false : opts.onlyActive;\n    hardfork1 = this._chooseHardfork(hardfork1, opts.onlySupported);\n    var hardforks;\n\n    if (onlyActive) {\n      hardforks = this.activeHardforks(null, opts);\n    } else {\n      hardforks = this.hardforks();\n    }\n\n    var posHf1 = -1,\n        posHf2 = -1;\n    var index = 0;\n\n    try {\n      for (var hardforks_2 = __values(hardforks), hardforks_2_1 = hardforks_2.next(); !hardforks_2_1.done; hardforks_2_1 = hardforks_2.next()) {\n        var hf = hardforks_2_1.value;\n        if (hf['name'] === hardfork1) posHf1 = index;\n        if (hf['name'] === hardfork2) posHf2 = index;\n        index += 1;\n      }\n    } catch (e_12_1) {\n      e_12 = {\n        error: e_12_1\n      };\n    } finally {\n      try {\n        if (hardforks_2_1 && !hardforks_2_1.done && (_a = hardforks_2.return)) _a.call(hardforks_2);\n      } finally {\n        if (e_12) throw e_12.error;\n      }\n    }\n\n    return posHf1 >= posHf2 && posHf2 !== -1;\n  };\n  /**\n   * Alias to hardforkGteHardfork when hardfork is set\n   * @param hardfork Hardfork name\n   * @param opts Hardfork options\n   * @returns True if hardfork set is greater than hardfork provided\n   */\n\n\n  Common.prototype.gteHardfork = function (hardfork, opts) {\n    return this.hardforkGteHardfork(null, hardfork, opts);\n  };\n  /**\n   * Checks if given or set hardfork is active on the chain\n   * @param hardfork Hardfork name, optional if HF set\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if hardfork is active on the chain\n   */\n\n\n  Common.prototype.hardforkIsActiveOnChain = function (hardfork, opts) {\n    var e_13, _a;\n\n    var _b;\n\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    var onlySupported = (_b = opts.onlySupported) !== null && _b !== void 0 ? _b : false;\n    hardfork = this._chooseHardfork(hardfork, onlySupported);\n\n    try {\n      for (var _c = __values(this.hardforks()), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var hf = _d.value;\n        if (hf['name'] === hardfork && hf['block'] !== null) return true;\n      }\n    } catch (e_13_1) {\n      e_13 = {\n        error: e_13_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_13) throw e_13.error;\n      }\n    }\n\n    return false;\n  };\n  /**\n   * Returns the active hardfork switches for the current chain\n   * @param blockNumber up to block if provided, otherwise for the whole chain\n   * @param opts Hardfork options (onlyActive unused)\n   * @return Array with hardfork arrays\n   */\n\n\n  Common.prototype.activeHardforks = function (blockNumber, opts) {\n    var e_14, _a;\n\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    var activeHardforks = [];\n    var hfs = this.hardforks();\n\n    try {\n      for (var hfs_2 = __values(hfs), hfs_2_1 = hfs_2.next(); !hfs_2_1.done; hfs_2_1 = hfs_2.next()) {\n        var hf = hfs_2_1.value;\n        if (hf['block'] === null) continue;\n        if (blockNumber !== undefined && blockNumber !== null && blockNumber < hf['block']) break;\n        if (opts.onlySupported && !this._isSupportedHardfork(hf['name'])) continue;\n        activeHardforks.push(hf);\n      }\n    } catch (e_14_1) {\n      e_14 = {\n        error: e_14_1\n      };\n    } finally {\n      try {\n        if (hfs_2_1 && !hfs_2_1.done && (_a = hfs_2.return)) _a.call(hfs_2);\n      } finally {\n        if (e_14) throw e_14.error;\n      }\n    }\n\n    return activeHardforks;\n  };\n  /**\n   * Returns the latest active hardfork name for chain or block or throws if unavailable\n   * @param blockNumber up to block if provided, otherwise for the whole chain\n   * @param opts Hardfork options (onlyActive unused)\n   * @return Hardfork name\n   */\n\n\n  Common.prototype.activeHardfork = function (blockNumber, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    var activeHardforks = this.activeHardforks(blockNumber, opts);\n\n    if (activeHardforks.length > 0) {\n      return activeHardforks[activeHardforks.length - 1]['name'];\n    } else {\n      throw new Error(\"No (supported) active hardfork found\");\n    }\n  };\n  /**\n   * Returns the hardfork change block for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if unscheduled\n   * @deprecated Please use {@link Common.hardforkBlockBN} for large number support\n   */\n\n\n  Common.prototype.hardforkBlock = function (hardfork) {\n    var block = this.hardforkBlockBN(hardfork);\n    return (0, ethereumjs_util_1.toType)(block, ethereumjs_util_1.TypeOutput.Number);\n  };\n  /**\n   * Returns the hardfork change block for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if unscheduled\n   */\n\n\n  Common.prototype.hardforkBlockBN = function (hardfork) {\n    hardfork = this._chooseHardfork(hardfork, false);\n\n    var block = this._getHardfork(hardfork)['block'];\n\n    if (block === undefined || block === null) {\n      return null;\n    }\n\n    return new ethereumjs_util_1.BN(block);\n  };\n  /**\n   * Returns the hardfork change total difficulty (Merge HF) for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Total difficulty or null if no set\n   */\n\n\n  Common.prototype.hardforkTD = function (hardfork) {\n    hardfork = this._chooseHardfork(hardfork, false);\n\n    var td = this._getHardfork(hardfork)['td'];\n\n    if (td === undefined || td === null) {\n      return null;\n    }\n\n    return new ethereumjs_util_1.BN(td);\n  };\n  /**\n   * True if block number provided is the hardfork (given or set) change block\n   * @param blockNumber Number of the block to check\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns True if blockNumber is HF block\n   */\n\n\n  Common.prototype.isHardforkBlock = function (blockNumber, hardfork) {\n    blockNumber = (0, ethereumjs_util_1.toType)(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n    hardfork = this._chooseHardfork(hardfork, false);\n    var block = this.hardforkBlockBN(hardfork);\n    return block ? block.eq(blockNumber) : false;\n  };\n  /**\n   * Returns the change block for the next hardfork after the hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if not available\n   * @deprecated Please use {@link Common.nextHardforkBlockBN} for large number support\n   */\n\n\n  Common.prototype.nextHardforkBlock = function (hardfork) {\n    var block = this.nextHardforkBlockBN(hardfork);\n    return (0, ethereumjs_util_1.toType)(block, ethereumjs_util_1.TypeOutput.Number);\n  };\n  /**\n   * Returns the change block for the next hardfork after the hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if not available\n   */\n\n\n  Common.prototype.nextHardforkBlockBN = function (hardfork) {\n    hardfork = this._chooseHardfork(hardfork, false);\n    var hfBlock = this.hardforkBlockBN(hardfork);\n\n    if (hfBlock === null) {\n      return null;\n    } // Next fork block number or null if none available\n    // Logic: if accumulator is still null and on the first occurrence of\n    // a block greater than the current hfBlock set the accumulator,\n    // pass on the accumulator as the final result from this time on\n\n\n    var nextHfBlock = this.hardforks().reduce(function (acc, hf) {\n      var block = new ethereumjs_util_1.BN(hf.block);\n      return block.gt(hfBlock) && acc === null ? block : acc;\n    }, null);\n    return nextHfBlock;\n  };\n  /**\n   * True if block number provided is the hardfork change block following the hardfork given or set\n   * @param blockNumber Number of the block to check\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns True if blockNumber is HF block\n   */\n\n\n  Common.prototype.isNextHardforkBlock = function (blockNumber, hardfork) {\n    blockNumber = (0, ethereumjs_util_1.toType)(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n    hardfork = this._chooseHardfork(hardfork, false);\n    var nextHardforkBlock = this.nextHardforkBlockBN(hardfork);\n    return nextHardforkBlock === null ? false : nextHardforkBlock.eq(blockNumber);\n  };\n  /**\n   * Internal helper function to calculate a fork hash\n   * @param hardfork Hardfork name\n   * @returns Fork hash as hex string\n   */\n\n\n  Common.prototype._calcForkHash = function (hardfork) {\n    var e_15, _a;\n\n    var genesis = Buffer.from(this.genesis().hash.substr(2), 'hex');\n    var hfBuffer = Buffer.alloc(0);\n    var prevBlock = 0;\n\n    try {\n      for (var _b = __values(this.hardforks()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var hf = _c.value;\n        var block = hf.block; // Skip for chainstart (0), not applied HFs (null) and\n        // when already applied on same block number HFs\n\n        if (block !== 0 && block !== null && block !== prevBlock) {\n          var hfBlockBuffer = Buffer.from(block.toString(16).padStart(16, '0'), 'hex');\n          hfBuffer = Buffer.concat([hfBuffer, hfBlockBuffer]);\n        }\n\n        if (hf.name === hardfork) break;\n\n        if (block !== null) {\n          prevBlock = block;\n        }\n      }\n    } catch (e_15_1) {\n      e_15 = {\n        error: e_15_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_15) throw e_15.error;\n      }\n    }\n\n    var inputBuffer = Buffer.concat([genesis, hfBuffer]); // CRC32 delivers result as signed (negative) 32-bit integer,\n    // convert to hex string\n\n    var forkhash = (0, ethereumjs_util_1.intToBuffer)((0, crc_32_1.buf)(inputBuffer) >>> 0).toString('hex');\n    return \"0x\".concat(forkhash);\n  };\n  /**\n   * Returns an eth/64 compliant fork hash (EIP-2124)\n   * @param hardfork Hardfork name, optional if HF set\n   */\n\n\n  Common.prototype.forkHash = function (hardfork) {\n    hardfork = this._chooseHardfork(hardfork, false);\n\n    var data = this._getHardfork(hardfork);\n\n    if (data['block'] === null && data['td'] === undefined) {\n      var msg = 'No fork hash calculation possible for future hardfork';\n      throw new Error(msg);\n    }\n\n    if (data['forkHash'] !== undefined) {\n      return data['forkHash'];\n    }\n\n    return this._calcForkHash(hardfork);\n  };\n  /**\n   *\n   * @param forkHash Fork hash as a hex string\n   * @returns Array with hardfork data (name, block, forkHash)\n   */\n\n\n  Common.prototype.hardforkForForkHash = function (forkHash) {\n    var resArray = this.hardforks().filter(function (hf) {\n      return hf.forkHash === forkHash;\n    });\n    return resArray.length >= 1 ? resArray[resArray.length - 1] : null;\n  };\n  /**\n   * Returns the Genesis parameters of the current chain\n   * @returns Genesis dictionary\n   */\n\n\n  Common.prototype.genesis = function () {\n    return this._chainParams['genesis'];\n  };\n  /**\n   * Returns the Genesis state of the current chain,\n   * all values are provided as hex-prefixed strings.\n   */\n\n\n  Common.prototype.genesisState = function () {\n    var e_16, _a; // Use require statements here in favor of import statements\n    // to load json files on demand\n    // (high memory usage by large mainnet.json genesis state file)\n\n\n    switch (this.chainName()) {\n      case 'mainnet':\n        return require('./genesisStates/mainnet.json');\n\n      case 'ropsten':\n        return require('./genesisStates/ropsten.json');\n\n      case 'rinkeby':\n        return require('./genesisStates/rinkeby.json');\n\n      case 'kovan':\n        return require('./genesisStates/kovan.json');\n\n      case 'goerli':\n        return require('./genesisStates/goerli.json');\n\n      case 'sepolia':\n        return require('./genesisStates/sepolia.json');\n    } // Custom chains with genesis state provided\n\n\n    if (this._customChains && this._customChains.length > 0 && Array.isArray(this._customChains[0])) {\n      try {\n        for (var _b = __values(this._customChains), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var chainArrayWithGenesis = _c.value;\n\n          if (chainArrayWithGenesis[0].name === this.chainName()) {\n            return chainArrayWithGenesis[1];\n          }\n        }\n      } catch (e_16_1) {\n        e_16 = {\n          error: e_16_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_16) throw e_16.error;\n        }\n      }\n    }\n\n    return {};\n  };\n  /**\n   * Returns the hardforks for current chain\n   * @returns {Array} Array with arrays of hardforks\n   */\n\n\n  Common.prototype.hardforks = function () {\n    return this._chainParams['hardforks'];\n  };\n  /**\n   * Returns bootstrap nodes for the current chain\n   * @returns {Dictionary} Dict with bootstrap nodes\n   */\n\n\n  Common.prototype.bootstrapNodes = function () {\n    return this._chainParams['bootstrapNodes'];\n  };\n  /**\n   * Returns DNS networks for the current chain\n   * @returns {String[]} Array of DNS ENR urls\n   */\n\n\n  Common.prototype.dnsNetworks = function () {\n    return this._chainParams['dnsNetworks'];\n  };\n  /**\n   * Returns the hardfork set\n   * @returns Hardfork name\n   */\n\n\n  Common.prototype.hardfork = function () {\n    return this._hardfork;\n  };\n  /**\n   * Returns the Id of current chain\n   * @returns chain Id\n   * @deprecated Please use {@link Common.chainIdBN} for large number support\n   */\n\n\n  Common.prototype.chainId = function () {\n    return (0, ethereumjs_util_1.toType)(this.chainIdBN(), ethereumjs_util_1.TypeOutput.Number);\n  };\n  /**\n   * Returns the Id of current chain\n   * @returns chain Id\n   */\n\n\n  Common.prototype.chainIdBN = function () {\n    return new ethereumjs_util_1.BN(this._chainParams['chainId']);\n  };\n  /**\n   * Returns the name of current chain\n   * @returns chain name (lower case)\n   */\n\n\n  Common.prototype.chainName = function () {\n    return this._chainParams['name'];\n  };\n  /**\n   * Returns the Id of current network\n   * @returns network Id\n   * @deprecated Please use {@link Common.networkIdBN} for large number support\n   */\n\n\n  Common.prototype.networkId = function () {\n    return (0, ethereumjs_util_1.toType)(this.networkIdBN(), ethereumjs_util_1.TypeOutput.Number);\n  };\n  /**\n   * Returns the Id of current network\n   * @returns network Id\n   */\n\n\n  Common.prototype.networkIdBN = function () {\n    return new ethereumjs_util_1.BN(this._chainParams['networkId']);\n  };\n  /**\n   * Returns the active EIPs\n   * @returns List of EIPs\n   */\n\n\n  Common.prototype.eips = function () {\n    return this._eips;\n  };\n  /**\n   * Returns the consensus type of the network\n   * Possible values: \"pow\"|\"poa\"|\"pos\"\n   *\n   * Note: This value can update along a hardfork.\n   */\n\n\n  Common.prototype.consensusType = function () {\n    var e_17, _a;\n\n    var hardfork = this.hardfork();\n    var value;\n\n    try {\n      for (var HARDFORK_CHANGES_4 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_4_1 = HARDFORK_CHANGES_4.next(); !HARDFORK_CHANGES_4_1.done; HARDFORK_CHANGES_4_1 = HARDFORK_CHANGES_4.next()) {\n        var hfChanges = HARDFORK_CHANGES_4_1.value;\n\n        if ('consensus' in hfChanges[1]) {\n          value = hfChanges[1]['consensus']['type'];\n        }\n\n        if (hfChanges[0] === hardfork) break;\n      }\n    } catch (e_17_1) {\n      e_17 = {\n        error: e_17_1\n      };\n    } finally {\n      try {\n        if (HARDFORK_CHANGES_4_1 && !HARDFORK_CHANGES_4_1.done && (_a = HARDFORK_CHANGES_4.return)) _a.call(HARDFORK_CHANGES_4);\n      } finally {\n        if (e_17) throw e_17.error;\n      }\n    }\n\n    if (value) {\n      return value;\n    }\n\n    return this._chainParams['consensus']['type'];\n  };\n  /**\n   * Returns the concrete consensus implementation\n   * algorithm or protocol for the network\n   * e.g. \"ethash\" for \"pow\" consensus type,\n   * \"clique\" for \"poa\" consensus type or\n   * \"casper\" for \"pos\" consensus type.\n   *\n   * Note: This value can update along a hardfork.\n   */\n\n\n  Common.prototype.consensusAlgorithm = function () {\n    var e_18, _a;\n\n    var hardfork = this.hardfork();\n    var value;\n\n    try {\n      for (var HARDFORK_CHANGES_5 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_5_1 = HARDFORK_CHANGES_5.next(); !HARDFORK_CHANGES_5_1.done; HARDFORK_CHANGES_5_1 = HARDFORK_CHANGES_5.next()) {\n        var hfChanges = HARDFORK_CHANGES_5_1.value;\n\n        if ('consensus' in hfChanges[1]) {\n          value = hfChanges[1]['consensus']['algorithm'];\n        }\n\n        if (hfChanges[0] === hardfork) break;\n      }\n    } catch (e_18_1) {\n      e_18 = {\n        error: e_18_1\n      };\n    } finally {\n      try {\n        if (HARDFORK_CHANGES_5_1 && !HARDFORK_CHANGES_5_1.done && (_a = HARDFORK_CHANGES_5.return)) _a.call(HARDFORK_CHANGES_5);\n      } finally {\n        if (e_18) throw e_18.error;\n      }\n    }\n\n    if (value) {\n      return value;\n    }\n\n    return this._chainParams['consensus']['algorithm'];\n  };\n  /**\n   * Returns a dictionary with consensus configuration\n   * parameters based on the consensus algorithm\n   *\n   * Expected returns (parameters must be present in\n   * the respective chain json files):\n   *\n   * ethash: -\n   * clique: period, epoch\n   * aura: -\n   * casper: -\n   *\n   * Note: This value can update along a hardfork.\n   */\n\n\n  Common.prototype.consensusConfig = function () {\n    var e_19, _a;\n\n    var hardfork = this.hardfork();\n    var value;\n\n    try {\n      for (var HARDFORK_CHANGES_6 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_6_1 = HARDFORK_CHANGES_6.next(); !HARDFORK_CHANGES_6_1.done; HARDFORK_CHANGES_6_1 = HARDFORK_CHANGES_6.next()) {\n        var hfChanges = HARDFORK_CHANGES_6_1.value;\n\n        if ('consensus' in hfChanges[1]) {\n          // The config parameter is named after the respective consensus algorithm\n          value = hfChanges[1]['consensus'][hfChanges[1]['consensus']['algorithm']];\n        }\n\n        if (hfChanges[0] === hardfork) break;\n      }\n    } catch (e_19_1) {\n      e_19 = {\n        error: e_19_1\n      };\n    } finally {\n      try {\n        if (HARDFORK_CHANGES_6_1 && !HARDFORK_CHANGES_6_1.done && (_a = HARDFORK_CHANGES_6.return)) _a.call(HARDFORK_CHANGES_6);\n      } finally {\n        if (e_19) throw e_19.error;\n      }\n    }\n\n    if (value) {\n      return value;\n    }\n\n    var consensusAlgorithm = this.consensusAlgorithm();\n    return this._chainParams['consensus'][consensusAlgorithm];\n  };\n  /**\n   * Returns a deep copy of this {@link Common} instance.\n   */\n\n\n  Common.prototype.copy = function () {\n    var copy = Object.assign(Object.create(Object.getPrototypeOf(this)), this);\n    copy.removeAllListeners();\n    return copy;\n  };\n\n  return Common;\n}(events_1.EventEmitter);\n\nexports.default = Common;","map":{"version":3,"mappings":"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","names":["CustomChain","exports","Chain","Hardfork","ConsensusType","ConsensusAlgorithm","__extends","opts","_super","_this","_customChains","customChains","_b","_chainParams","setChain","chain","DEFAULT_HARDFORK","defaultHardfork","_c","Istanbul","hardforks","_e","hf","forkHash","_calcForkHash","name","_hardfork","supportedHardforks","_supportedHardforks","hardfork","setHardfork","eips","setEIPs","Common","chainParamsOrName","baseChain","_a","standardChainParams","_getChainParams","__assign","PolygonMainnet","custom","chainId","networkId","PolygonMumbai","ArbitrumRinkebyTestnet","xDaiChain","OptimisticKovan","Berlin","OptimisticEthereum","Error","customChainParams","initializedChains","Boolean","toString","ethereumjs_util_1","isBN","name_1","plainCustomChains","length","Array","isArray","map","e","required","required_1_1","param","undefined","_isSupportedHardfork","existing","HARDFORK_CHANGES_1_1","hfChanges","emit","blockNumber","td","BN","Chainstart","minTdHF","maxTdHF","previousHF","block","gte","msgAdd","concat","hardforkGteHardfork","msg","getHardforkByBlockNumber","onlySupported","hfs","hfs_1_1","chainName","supportedHf","eip","eips_1","minHF","this_1","gteHardfork","requiredEIPs","forEach","elem","includes","isActivatedEIP","eips_2_1","_eips","topic","value","paramByEIP","paramByHardfork","_chooseHardfork","HARDFORK_CHANGES_2_1","hfEIPs","hfEIPs_1_1","valueEIP","v","eipParams","activeHfs","activeHardforks","HARDFORK_CHANGES_3_1","hfBlock","hardforkBlockBN","hardforkIsActiveOnBlock","hardfork1","hardfork2","onlyActive","posHf1","posHf2","index","hardforks_2_1","_d","hfs_2_1","push","Number","_getHardfork","eq","nextHardforkBlockBN","nextHfBlock","reduce","acc","gt","nextHardforkBlock","genesis","Buffer","from","hash","substr","hfBuffer","alloc","prevBlock","hfBlockBuffer","padStart","inputBuffer","forkhash","data","resArray","filter","require","chainArrayWithGenesis","chainIdBN","networkIdBN","HARDFORK_CHANGES_4_1","HARDFORK_CHANGES_5_1","HARDFORK_CHANGES_6_1","consensusAlgorithm","copy","Object","assign","create","getPrototypeOf","removeAllListeners","events_1"],"sourceRoot":"","sources":["../src/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}