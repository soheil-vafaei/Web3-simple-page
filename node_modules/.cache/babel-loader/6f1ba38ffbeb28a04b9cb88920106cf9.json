{"ast":null,"code":"import * as DomUtils from \"domutils\";\nimport boolbase from \"boolbase\";\nimport { compile as compileRaw, compileUnsafe, compileToken } from \"./compile.js\";\nimport { getNextSiblings } from \"./pseudo-selectors/subselects.js\";\n\nconst defaultEquals = (a, b) => a === b;\n\nconst defaultOptions = {\n  adapter: DomUtils,\n  equals: defaultEquals\n};\n\nfunction convertOptionFormats(options) {\n  var _a, _b, _c, _d;\n  /*\n   * We force one format of options to the other one.\n   */\n  // @ts-expect-error Default options may have incompatible `Node` / `ElementNode`.\n\n\n  const opts = options !== null && options !== void 0 ? options : defaultOptions; // @ts-expect-error Same as above.\n\n  (_a = opts.adapter) !== null && _a !== void 0 ? _a : opts.adapter = DomUtils; // @ts-expect-error `equals` does not exist on `Options`\n\n  (_b = opts.equals) !== null && _b !== void 0 ? _b : opts.equals = (_d = (_c = opts.adapter) === null || _c === void 0 ? void 0 : _c.equals) !== null && _d !== void 0 ? _d : defaultEquals;\n  return opts;\n}\n\nfunction wrapCompile(func) {\n  return function addAdapter(selector, options, context) {\n    const opts = convertOptionFormats(options);\n    return func(selector, opts, context);\n  };\n}\n/**\n * Compiles the query, returns a function.\n */\n\n\nexport const compile = wrapCompile(compileRaw);\nexport const _compileUnsafe = wrapCompile(compileUnsafe);\nexport const _compileToken = wrapCompile(compileToken);\n\nfunction getSelectorFunc(searchFunc) {\n  return function select(query, elements, options) {\n    const opts = convertOptionFormats(options);\n\n    if (typeof query !== \"function\") {\n      query = compileUnsafe(query, opts, elements);\n    }\n\n    const filteredElements = prepareContext(elements, opts.adapter, query.shouldTestNextSiblings);\n    return searchFunc(query, filteredElements, opts);\n  };\n}\n\nexport function prepareContext(elems, adapter) {\n  let shouldTestNextSiblings = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  /*\n   * Add siblings if the query requires them.\n   * See https://github.com/fb55/css-select/pull/43#issuecomment-225414692\n   */\n  if (shouldTestNextSiblings) {\n    elems = appendNextSiblings(elems, adapter);\n  }\n\n  return Array.isArray(elems) ? adapter.removeSubsets(elems) : adapter.getChildren(elems);\n}\n\nfunction appendNextSiblings(elem, adapter) {\n  // Order matters because jQuery seems to check the children before the siblings\n  const elems = Array.isArray(elem) ? elem.slice(0) : [elem];\n  const elemsLength = elems.length;\n\n  for (let i = 0; i < elemsLength; i++) {\n    const nextSiblings = getNextSiblings(elems[i], adapter);\n    elems.push(...nextSiblings);\n  }\n\n  return elems;\n}\n/**\n * @template Node The generic Node type for the DOM adapter being used.\n * @template ElementNode The Node type for elements for the DOM adapter being used.\n * @param elems Elements to query. If it is an element, its children will be queried..\n * @param query can be either a CSS selector string or a compiled query function.\n * @param [options] options for querying the document.\n * @see compile for supported selector queries.\n * @returns All matching elements.\n *\n */\n\n\nexport const selectAll = getSelectorFunc((query, elems, options) => query === boolbase.falseFunc || !elems || elems.length === 0 ? [] : options.adapter.findAll(query, elems));\n/**\n * @template Node The generic Node type for the DOM adapter being used.\n * @template ElementNode The Node type for elements for the DOM adapter being used.\n * @param elems Elements to query. If it is an element, its children will be queried..\n * @param query can be either a CSS selector string or a compiled query function.\n * @param [options] options for querying the document.\n * @see compile for supported selector queries.\n * @returns the first match, or null if there was no match.\n */\n\nexport const selectOne = getSelectorFunc((query, elems, options) => query === boolbase.falseFunc || !elems || elems.length === 0 ? null : options.adapter.findOne(query, elems));\n/**\n * Tests whether or not an element is matched by query.\n *\n * @template Node The generic Node type for the DOM adapter being used.\n * @template ElementNode The Node type for elements for the DOM adapter being used.\n * @param elem The element to test if it matches the query.\n * @param query can be either a CSS selector string or a compiled query function.\n * @param [options] options for querying the document.\n * @see compile for supported selector queries.\n * @returns\n */\n\nexport function is(elem, query, options) {\n  const opts = convertOptionFormats(options);\n  return (typeof query === \"function\" ? query : compileRaw(query, opts))(elem);\n}\n/**\n * Alias for selectAll(query, elems, options).\n * @see [compile] for supported selector queries.\n */\n\nexport default selectAll; // Export filters, pseudos and aliases to allow users to supply their own.\n\n/** @deprecated Use the `pseudos` option instead. */\n\nexport { filters, pseudos, aliases } from \"./pseudo-selectors/index.js\";","map":{"version":3,"mappings":"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","names":["DomUtils","boolbase","compile","compileRaw","compileUnsafe","compileToken","getNextSiblings","defaultEquals","a","b","defaultOptions","adapter","equals","convertOptionFormats","options","opts","_a","_b","_c","_d","wrapCompile","func","addAdapter","selector","context","_compileUnsafe","_compileToken","getSelectorFunc","searchFunc","select","query","elements","filteredElements","prepareContext","shouldTestNextSiblings","elems","appendNextSiblings","Array","isArray","removeSubsets","getChildren","elem","slice","elemsLength","length","i","nextSiblings","push","selectAll","falseFunc","findAll","selectOne","findOne","is","filters","pseudos","aliases"],"sourceRoot":"https://raw.githubusercontent.com/fb55/css-select/0f0725a9dfeddd2fdb54eda9656cdbab5bbf6be6/src/","sources":["index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}