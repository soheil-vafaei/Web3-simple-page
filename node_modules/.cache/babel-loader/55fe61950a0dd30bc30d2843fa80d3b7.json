{"ast":null,"code":"import { Arbitrary } from '../../check/arbitrary/definition/Arbitrary.js';\nimport { Value } from '../../check/arbitrary/definition/Value.js';\nimport { cloneMethod } from '../../check/symbols.js';\nimport { Stream } from '../../stream/Stream.js';\nexport class CloneArbitrary extends Arbitrary {\n  constructor(arb, numValues) {\n    super();\n    this.arb = arb;\n    this.numValues = numValues;\n  }\n\n  generate(mrng, biasFactor) {\n    const items = [];\n\n    if (this.numValues <= 0) {\n      return this.wrapper(items);\n    }\n\n    for (let idx = 0; idx !== this.numValues - 1; ++idx) {\n      items.push(this.arb.generate(mrng.clone(), biasFactor));\n    }\n\n    items.push(this.arb.generate(mrng, biasFactor));\n    return this.wrapper(items);\n  }\n\n  canShrinkWithoutContext(value) {\n    if (!Array.isArray(value) || value.length !== this.numValues) {\n      return false;\n    }\n\n    if (value.length === 0) {\n      return true;\n    }\n\n    for (let index = 1; index < value.length; ++index) {\n      if (!Object.is(value[0], value[index])) {\n        return false;\n      }\n    }\n\n    return this.arb.canShrinkWithoutContext(value[0]);\n  }\n\n  shrink(value, context) {\n    if (value.length === 0) {\n      return Stream.nil();\n    }\n\n    return new Stream(this.shrinkImpl(value, context !== undefined ? context : [])).map(v => this.wrapper(v));\n  }\n\n  *shrinkImpl(value, contexts) {\n    const its = value.map((v, idx) => this.arb.shrink(v, contexts[idx])[Symbol.iterator]());\n    let cur = its.map(it => it.next());\n\n    while (!cur[0].done) {\n      yield cur.map(c => c.value);\n      cur = its.map(it => it.next());\n    }\n  }\n\n  static makeItCloneable(vs, shrinkables) {\n    vs[cloneMethod] = () => {\n      const cloned = [];\n\n      for (let idx = 0; idx !== shrinkables.length; ++idx) {\n        cloned.push(shrinkables[idx].value);\n      }\n\n      this.makeItCloneable(cloned, shrinkables);\n      return cloned;\n    };\n\n    return vs;\n  }\n\n  wrapper(items) {\n    let cloneable = false;\n    const vs = [];\n    const contexts = [];\n\n    for (let idx = 0; idx !== items.length; ++idx) {\n      const s = items[idx];\n      cloneable = cloneable || s.hasToBeCloned;\n      vs.push(s.value);\n      contexts.push(s.context);\n    }\n\n    if (cloneable) {\n      CloneArbitrary.makeItCloneable(vs, items);\n    }\n\n    return new Value(vs, contexts);\n  }\n\n}","map":{"version":3,"names":["Arbitrary","Value","cloneMethod","Stream","CloneArbitrary","constructor","arb","numValues","generate","mrng","biasFactor","items","wrapper","idx","push","clone","canShrinkWithoutContext","value","Array","isArray","length","index","Object","is","shrink","context","nil","shrinkImpl","undefined","map","v","contexts","its","Symbol","iterator","cur","it","next","done","c","makeItCloneable","vs","shrinkables","cloned","cloneable","s","hasToBeCloned"],"sources":["/Users/soheilvafaei/Documents/project/web/web3/ex7/node_modules/fast-check/lib/esm/arbitrary/_internals/CloneArbitrary.js"],"sourcesContent":["import { Arbitrary } from '../../check/arbitrary/definition/Arbitrary.js';\nimport { Value } from '../../check/arbitrary/definition/Value.js';\nimport { cloneMethod } from '../../check/symbols.js';\nimport { Stream } from '../../stream/Stream.js';\nexport class CloneArbitrary extends Arbitrary {\n    constructor(arb, numValues) {\n        super();\n        this.arb = arb;\n        this.numValues = numValues;\n    }\n    generate(mrng, biasFactor) {\n        const items = [];\n        if (this.numValues <= 0) {\n            return this.wrapper(items);\n        }\n        for (let idx = 0; idx !== this.numValues - 1; ++idx) {\n            items.push(this.arb.generate(mrng.clone(), biasFactor));\n        }\n        items.push(this.arb.generate(mrng, biasFactor));\n        return this.wrapper(items);\n    }\n    canShrinkWithoutContext(value) {\n        if (!Array.isArray(value) || value.length !== this.numValues) {\n            return false;\n        }\n        if (value.length === 0) {\n            return true;\n        }\n        for (let index = 1; index < value.length; ++index) {\n            if (!Object.is(value[0], value[index])) {\n                return false;\n            }\n        }\n        return this.arb.canShrinkWithoutContext(value[0]);\n    }\n    shrink(value, context) {\n        if (value.length === 0) {\n            return Stream.nil();\n        }\n        return new Stream(this.shrinkImpl(value, context !== undefined ? context : [])).map((v) => this.wrapper(v));\n    }\n    *shrinkImpl(value, contexts) {\n        const its = value.map((v, idx) => this.arb.shrink(v, contexts[idx])[Symbol.iterator]());\n        let cur = its.map((it) => it.next());\n        while (!cur[0].done) {\n            yield cur.map((c) => c.value);\n            cur = its.map((it) => it.next());\n        }\n    }\n    static makeItCloneable(vs, shrinkables) {\n        vs[cloneMethod] = () => {\n            const cloned = [];\n            for (let idx = 0; idx !== shrinkables.length; ++idx) {\n                cloned.push(shrinkables[idx].value);\n            }\n            this.makeItCloneable(cloned, shrinkables);\n            return cloned;\n        };\n        return vs;\n    }\n    wrapper(items) {\n        let cloneable = false;\n        const vs = [];\n        const contexts = [];\n        for (let idx = 0; idx !== items.length; ++idx) {\n            const s = items[idx];\n            cloneable = cloneable || s.hasToBeCloned;\n            vs.push(s.value);\n            contexts.push(s.context);\n        }\n        if (cloneable) {\n            CloneArbitrary.makeItCloneable(vs, items);\n        }\n        return new Value(vs, contexts);\n    }\n}\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,+CAA1B;AACA,SAASC,KAAT,QAAsB,2CAAtB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,OAAO,MAAMC,cAAN,SAA6BJ,SAA7B,CAAuC;EAC1CK,WAAW,CAACC,GAAD,EAAMC,SAAN,EAAiB;IACxB;IACA,KAAKD,GAAL,GAAWA,GAAX;IACA,KAAKC,SAAL,GAAiBA,SAAjB;EACH;;EACDC,QAAQ,CAACC,IAAD,EAAOC,UAAP,EAAmB;IACvB,MAAMC,KAAK,GAAG,EAAd;;IACA,IAAI,KAAKJ,SAAL,IAAkB,CAAtB,EAAyB;MACrB,OAAO,KAAKK,OAAL,CAAaD,KAAb,CAAP;IACH;;IACD,KAAK,IAAIE,GAAG,GAAG,CAAf,EAAkBA,GAAG,KAAK,KAAKN,SAAL,GAAiB,CAA3C,EAA8C,EAAEM,GAAhD,EAAqD;MACjDF,KAAK,CAACG,IAAN,CAAW,KAAKR,GAAL,CAASE,QAAT,CAAkBC,IAAI,CAACM,KAAL,EAAlB,EAAgCL,UAAhC,CAAX;IACH;;IACDC,KAAK,CAACG,IAAN,CAAW,KAAKR,GAAL,CAASE,QAAT,CAAkBC,IAAlB,EAAwBC,UAAxB,CAAX;IACA,OAAO,KAAKE,OAAL,CAAaD,KAAb,CAAP;EACH;;EACDK,uBAAuB,CAACC,KAAD,EAAQ;IAC3B,IAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAD,IAAyBA,KAAK,CAACG,MAAN,KAAiB,KAAKb,SAAnD,EAA8D;MAC1D,OAAO,KAAP;IACH;;IACD,IAAIU,KAAK,CAACG,MAAN,KAAiB,CAArB,EAAwB;MACpB,OAAO,IAAP;IACH;;IACD,KAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGJ,KAAK,CAACG,MAAlC,EAA0C,EAAEC,KAA5C,EAAmD;MAC/C,IAAI,CAACC,MAAM,CAACC,EAAP,CAAUN,KAAK,CAAC,CAAD,CAAf,EAAoBA,KAAK,CAACI,KAAD,CAAzB,CAAL,EAAwC;QACpC,OAAO,KAAP;MACH;IACJ;;IACD,OAAO,KAAKf,GAAL,CAASU,uBAAT,CAAiCC,KAAK,CAAC,CAAD,CAAtC,CAAP;EACH;;EACDO,MAAM,CAACP,KAAD,EAAQQ,OAAR,EAAiB;IACnB,IAAIR,KAAK,CAACG,MAAN,KAAiB,CAArB,EAAwB;MACpB,OAAOjB,MAAM,CAACuB,GAAP,EAAP;IACH;;IACD,OAAO,IAAIvB,MAAJ,CAAW,KAAKwB,UAAL,CAAgBV,KAAhB,EAAuBQ,OAAO,KAAKG,SAAZ,GAAwBH,OAAxB,GAAkC,EAAzD,CAAX,EAAyEI,GAAzE,CAA8EC,CAAD,IAAO,KAAKlB,OAAL,CAAakB,CAAb,CAApF,CAAP;EACH;;EACU,CAAVH,UAAU,CAACV,KAAD,EAAQc,QAAR,EAAkB;IACzB,MAAMC,GAAG,GAAGf,KAAK,CAACY,GAAN,CAAU,CAACC,CAAD,EAAIjB,GAAJ,KAAY,KAAKP,GAAL,CAASkB,MAAT,CAAgBM,CAAhB,EAAmBC,QAAQ,CAAClB,GAAD,CAA3B,EAAkCoB,MAAM,CAACC,QAAzC,GAAtB,CAAZ;IACA,IAAIC,GAAG,GAAGH,GAAG,CAACH,GAAJ,CAASO,EAAD,IAAQA,EAAE,CAACC,IAAH,EAAhB,CAAV;;IACA,OAAO,CAACF,GAAG,CAAC,CAAD,CAAH,CAAOG,IAAf,EAAqB;MACjB,MAAMH,GAAG,CAACN,GAAJ,CAASU,CAAD,IAAOA,CAAC,CAACtB,KAAjB,CAAN;MACAkB,GAAG,GAAGH,GAAG,CAACH,GAAJ,CAASO,EAAD,IAAQA,EAAE,CAACC,IAAH,EAAhB,CAAN;IACH;EACJ;;EACqB,OAAfG,eAAe,CAACC,EAAD,EAAKC,WAAL,EAAkB;IACpCD,EAAE,CAACvC,WAAD,CAAF,GAAkB,MAAM;MACpB,MAAMyC,MAAM,GAAG,EAAf;;MACA,KAAK,IAAI9B,GAAG,GAAG,CAAf,EAAkBA,GAAG,KAAK6B,WAAW,CAACtB,MAAtC,EAA8C,EAAEP,GAAhD,EAAqD;QACjD8B,MAAM,CAAC7B,IAAP,CAAY4B,WAAW,CAAC7B,GAAD,CAAX,CAAiBI,KAA7B;MACH;;MACD,KAAKuB,eAAL,CAAqBG,MAArB,EAA6BD,WAA7B;MACA,OAAOC,MAAP;IACH,CAPD;;IAQA,OAAOF,EAAP;EACH;;EACD7B,OAAO,CAACD,KAAD,EAAQ;IACX,IAAIiC,SAAS,GAAG,KAAhB;IACA,MAAMH,EAAE,GAAG,EAAX;IACA,MAAMV,QAAQ,GAAG,EAAjB;;IACA,KAAK,IAAIlB,GAAG,GAAG,CAAf,EAAkBA,GAAG,KAAKF,KAAK,CAACS,MAAhC,EAAwC,EAAEP,GAA1C,EAA+C;MAC3C,MAAMgC,CAAC,GAAGlC,KAAK,CAACE,GAAD,CAAf;MACA+B,SAAS,GAAGA,SAAS,IAAIC,CAAC,CAACC,aAA3B;MACAL,EAAE,CAAC3B,IAAH,CAAQ+B,CAAC,CAAC5B,KAAV;MACAc,QAAQ,CAACjB,IAAT,CAAc+B,CAAC,CAACpB,OAAhB;IACH;;IACD,IAAImB,SAAJ,EAAe;MACXxC,cAAc,CAACoC,eAAf,CAA+BC,EAA/B,EAAmC9B,KAAnC;IACH;;IACD,OAAO,IAAIV,KAAJ,CAAUwC,EAAV,EAAcV,QAAd,CAAP;EACH;;AAtEyC"},"metadata":{},"sourceType":"module"}