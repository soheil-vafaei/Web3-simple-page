{"ast":null,"code":"// Tweaked version of nathan7's binary-parse-stream\n// (see https://github.com/nathan7/binary-parse-stream)\n// Uses NoFilter instead of the readable in the original.  Removes\n// the ability to read -1, which was odd and un-needed.\n// License for binary-parse-stream: MIT\n// binary-parse-stream is now unmaintained, so I'm going to rewrite it as\n// more modern JS so I can get tsc to help check types.\n'use strict';\n\nconst Stream = require('stream');\n\nconst NoFilter = require('nofilter');\n\nconst TransformStream = Stream.Transform;\n/**\n * BinaryParseStream is a TransformStream that consumes buffers and outputs\n * objects on the other end.  It expects your subclass to implement a `_parse`\n * method that is a generator.  When your generator yields a number, it'll be\n * fed a buffer of that length from the input.  When your generator returns,\n * the return value will be pushed to the output side.\n *\n * @class BinaryParseStream\n * @extends {TransformStream}\n */\n\nclass BinaryParseStream extends TransformStream {\n  constructor(options) {\n    super(options); // doesn't work to pass these in as opts, for some reason\n\n    this['_writableState'].objectMode = false;\n    this['_readableState'].objectMode = true;\n    this.bs = new NoFilter();\n\n    this.__restart();\n  }\n\n  _transform(fresh, encoding, cb) {\n    this.bs.write(fresh);\n\n    while (this.bs.length >= this.__needed) {\n      let ret;\n      const chunk = this.__needed === null ? undefined : this.bs.read(this.__needed);\n\n      try {\n        ret = this.__parser.next(chunk);\n      } catch (e) {\n        return cb(e);\n      }\n\n      if (this.__needed) {\n        this.__fresh = false;\n      }\n\n      if (!ret.done) {\n        this.__needed = ret.value || 0;\n      } else {\n        this.push(ret.value);\n\n        this.__restart();\n      }\n    }\n\n    return cb();\n  }\n  /**\n   * @abstract\n   */\n\n  /* istanbul ignore next */\n\n\n  *_parse() {\n    throw new Error('Must be implemented in subclass');\n  }\n\n  __restart() {\n    this.__needed = null;\n    this.__parser = this._parse();\n    this.__fresh = true;\n  }\n\n  _flush(cb) {\n    cb(this.__fresh ? null : new Error('unexpected end of input'));\n  }\n\n}\n\nmodule.exports = BinaryParseStream;","map":{"version":3,"names":["Stream","require","NoFilter","TransformStream","Transform","BinaryParseStream","constructor","options","objectMode","bs","__restart","_transform","fresh","encoding","cb","write","length","__needed","ret","chunk","undefined","read","__parser","next","e","__fresh","done","value","push","_parse","Error","_flush","module","exports"],"sources":["/Users/soheilvafaei/Documents/project/web/web3/ex7/node_modules/cbor/vendor/binary-parse-stream/index.js"],"sourcesContent":["// Tweaked version of nathan7's binary-parse-stream\n// (see https://github.com/nathan7/binary-parse-stream)\n// Uses NoFilter instead of the readable in the original.  Removes\n// the ability to read -1, which was odd and un-needed.\n// License for binary-parse-stream: MIT\n\n// binary-parse-stream is now unmaintained, so I'm going to rewrite it as\n// more modern JS so I can get tsc to help check types.\n\n'use strict'\nconst Stream = require('stream')\nconst NoFilter = require('nofilter')\nconst TransformStream = Stream.Transform\n\n/**\n * BinaryParseStream is a TransformStream that consumes buffers and outputs\n * objects on the other end.  It expects your subclass to implement a `_parse`\n * method that is a generator.  When your generator yields a number, it'll be\n * fed a buffer of that length from the input.  When your generator returns,\n * the return value will be pushed to the output side.\n *\n * @class BinaryParseStream\n * @extends {TransformStream}\n */\nclass BinaryParseStream extends TransformStream {\n  constructor(options) {\n    super(options)\n    // doesn't work to pass these in as opts, for some reason\n    this['_writableState'].objectMode = false\n    this['_readableState'].objectMode = true\n\n    this.bs = new NoFilter()\n    this.__restart()\n  }\n\n  _transform(fresh, encoding, cb) {\n    this.bs.write(fresh)\n\n    while (this.bs.length >= this.__needed) {\n      let ret\n      const chunk = (this.__needed === null) ?\n        undefined : this.bs.read(this.__needed)\n\n      try {\n        ret = this.__parser.next(chunk)\n      } catch (e) {\n        return cb(e)\n      }\n  \n      if (this.__needed) {\n        this.__fresh = false\n      }\n\n      if (!ret.done) {\n        this.__needed = ret.value || 0\n      } else {\n        this.push(ret.value)\n        this.__restart()\n      }\n    }\n  \n    return cb()\n  }\n\n  /**\n   * @abstract\n   */\n  /* istanbul ignore next */\n  *_parse() {\n    throw new Error('Must be implemented in subclass')\n  }\n\n  __restart() {\n    this.__needed = null\n    this.__parser = this._parse()\n    this.__fresh = true\n  }\n\n  _flush(cb) {\n    cb(this.__fresh ? null : new Error('unexpected end of input'))\n  }\n}\n\nmodule.exports = BinaryParseStream\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;AACA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAME,eAAe,GAAGH,MAAM,CAACI,SAA/B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,iBAAN,SAAgCF,eAAhC,CAAgD;EAC9CG,WAAW,CAACC,OAAD,EAAU;IACnB,MAAMA,OAAN,EADmB,CAEnB;;IACA,KAAK,gBAAL,EAAuBC,UAAvB,GAAoC,KAApC;IACA,KAAK,gBAAL,EAAuBA,UAAvB,GAAoC,IAApC;IAEA,KAAKC,EAAL,GAAU,IAAIP,QAAJ,EAAV;;IACA,KAAKQ,SAAL;EACD;;EAEDC,UAAU,CAACC,KAAD,EAAQC,QAAR,EAAkBC,EAAlB,EAAsB;IAC9B,KAAKL,EAAL,CAAQM,KAAR,CAAcH,KAAd;;IAEA,OAAO,KAAKH,EAAL,CAAQO,MAAR,IAAkB,KAAKC,QAA9B,EAAwC;MACtC,IAAIC,GAAJ;MACA,MAAMC,KAAK,GAAI,KAAKF,QAAL,KAAkB,IAAnB,GACZG,SADY,GACA,KAAKX,EAAL,CAAQY,IAAR,CAAa,KAAKJ,QAAlB,CADd;;MAGA,IAAI;QACFC,GAAG,GAAG,KAAKI,QAAL,CAAcC,IAAd,CAAmBJ,KAAnB,CAAN;MACD,CAFD,CAEE,OAAOK,CAAP,EAAU;QACV,OAAOV,EAAE,CAACU,CAAD,CAAT;MACD;;MAED,IAAI,KAAKP,QAAT,EAAmB;QACjB,KAAKQ,OAAL,GAAe,KAAf;MACD;;MAED,IAAI,CAACP,GAAG,CAACQ,IAAT,EAAe;QACb,KAAKT,QAAL,GAAgBC,GAAG,CAACS,KAAJ,IAAa,CAA7B;MACD,CAFD,MAEO;QACL,KAAKC,IAAL,CAAUV,GAAG,CAACS,KAAd;;QACA,KAAKjB,SAAL;MACD;IACF;;IAED,OAAOI,EAAE,EAAT;EACD;EAED;AACF;AACA;;EACE;;;EACO,CAANe,MAAM,GAAG;IACR,MAAM,IAAIC,KAAJ,CAAU,iCAAV,CAAN;EACD;;EAEDpB,SAAS,GAAG;IACV,KAAKO,QAAL,GAAgB,IAAhB;IACA,KAAKK,QAAL,GAAgB,KAAKO,MAAL,EAAhB;IACA,KAAKJ,OAAL,GAAe,IAAf;EACD;;EAEDM,MAAM,CAACjB,EAAD,EAAK;IACTA,EAAE,CAAC,KAAKW,OAAL,GAAe,IAAf,GAAsB,IAAIK,KAAJ,CAAU,yBAAV,CAAvB,CAAF;EACD;;AAxD6C;;AA2DhDE,MAAM,CAACC,OAAP,GAAiB5B,iBAAjB"},"metadata":{},"sourceType":"script"}